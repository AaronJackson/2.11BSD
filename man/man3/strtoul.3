.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)strtoul.3	8.1.1 (2.11BSD) 1996/1/12
.\"
.TH STRTOUL 3 "January 12, 1996"
.UC 7
.SH NAME
\fBstrtoul\fP \- convert a string to an unsigned long
.SH SYNOPSIS
.B #include <stdlib.h>
.br
.B #include <limits.h>
.sp
.B unsigned long
.br
\fBstrtoul\fP(nptr, endptr, base)
.br
.I char *nptr;
.br
.I char **endptr;
.br
.I int base;
.SH DESCRIPTION
The
.BR strtoul ()
function
converts the string in
.I nptr
to an
.I unsigned long
value.
The conversion is done according to the given
.IR base ,
which must be between 2 and 36 inclusive,
or be the special value 0.
.PP
The string may begin with an arbitrary amount of white space
(as determined by
isspace(3))
followed by a single optional
`+'
or
`\-'
sign.
If
.I base
is zero or 16,
the string may then include a
`0x'
prefix,
and the number will be read in base 16; otherwise, a zero
.I base
is taken as 10 (decimal) unless the next character is
`0',
in which case it is taken as 8 (octal).
.PP
The remainder of the string is converted to an
.I unsigned long
value in the obvious manner,
stopping at the end of the string
or at the first character that does not produce a valid digit
in the given base.
(In bases above 10, the letter
`A'
in either upper or lower case
represents 10,
`B'
represents 11, and so forth, with
`Z'
representing 35.)
.PP
If
.I endptr
is non nil,
.BR strtoul ()
stores the address of the first invalid character in
.I *endptr .
If there were no digits at all, however,
.BR strtoul ()
stores the original value of
.I nptr
in
.I *endptr .
(Thus, if
.I *nptr
is not
`\e0'
but
.I **endptr
is
`\e0'
on return, the entire string was valid.)
.SH RETURN VALUES
The
.BR strtoul ()
function
returns either the result of the conversion
or, if there was a leading minus sign,
the negation of the result of the conversion,
unless the original (non-negated) value would overflow;
in the latter case,
.BR strtoul ()
returns
.B ULONG_MAX
and sets the global variable
.B errno
to
.B ERANGE .
.SH ERRORS
.TP 15
[ERANGE]
The given string was out of range; the value converted has been clamped.
.SH SEE ALSO
strtol(3)
.SH STANDARDS
The
.BR strtoul ()
function
conforms to
ANSI C X3.159-1989 (``ANSI C'').
.SH BUGS
Ignores the current locale.
