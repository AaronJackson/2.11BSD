.xx "" "" "@: arithmetic on shell variables." "" csh(1)
.xx "" "imp:" "1822 network interface." "" imp(4)
.xx "" "ddn: DDN Standard Mode X." "25 IMP interface." "" ddn(4)
.xx "" "lib2648: subroutines for the HP" "2648 graphics terminal." "" lib2648(3X)
.xx "" "mset: retrieve ASCII to IBM" "3270 keyboard map." "" mset(1)
.xx "" "database for mapping ascii keystrokes into IBM" "3270 keys." "map3270:" map3270(5)
.xx "" "ec:" "3Com 10 Mb/s Ethernet interface." "" ec(4)
.xx "" "diff3:" "3-way differential file comparison." "" diff3(1)
.xx "" "openpl et al.: f77 library interface to \fIplot\fR" "(3X) libraries.." "plot:" plot(3F)
.xx "" "sendbug: mail a system bug report to" "4bsd-bugs." "" sendbug(1)
.xx "" "crl: VAX" "8600 console RL02 interface." "" crl(4)
.xx "" "" "aardvark: yet another exploration game." "" aardvark(6)
.xx "" "abort:" "abnormal termination." "" abort(3F)
.xx "" "" "abort: abnormal termination." "" abort(3F)
.xx "" "" "abort: generate a fault." "" abort(3)
.xx "" "" "abs: integer absolute value." "" abs(3)
.xx "" "abs: integer" "absolute value." "" abs(3)
.xx "" "hypot, cabs: Euclidean distance, complex" "absolute value." "" hypot(3M)
.xx "round-to-nearest/" "fabs, floor, ceil, rint:" "absolute value, floor, ceiling, and" "" floor(3M)
.xx "" "" "ac: login accounting." "" ac(8)
.xx "" "" "acc: ACC LH/DH IMP interface." "" acc(4)
.xx "" "hdh:" "ACC IF-11/HDH IMP interface." "" hdh(4)
.xx "" "acc:" "ACC LH/DH IMP interface." "" acc(4)
.xx "" "accept:" "accept a connection on a socket." "" accept(2)
.xx "" "" "accept: accept a connection on a socket." "" accept(2)
.xx "" "" "access: determine accessability of a file." "" access(3F)
.xx "" "" "access: determine accessibility of file." "" access(2)
.xx "" "getgroups: get group" "access list." "" getgroups(2)
.xx "" "initgroups: initialize group" "access list." "" initgroups(3)
.xx "" "setgroups: set group" "access list." "" setgroups(2)
.xx "" "access: determine" "accessability of a file." "" access(3F)
.xx "" "access: determine" "accessibility of file." "" access(2)
.xx "" "ac: login" "accounting." "" ac(8)
.xx "" "sa, accton: system" "accounting." "" sa(8)
.xx "" "acct: execution" "accounting file." "" acct(5)
.xx "" "pac: printer/plotter" "accounting information." "" pac(8)
.xx "" "acct: turn" "accounting on or off." "" acct(2)
.xx "" "" "acct: execution accounting file." "" acct(5)
.xx "" "" "acct: turn accounting on or off." "" acct(2)
.xx "" "sa," "accton: system accounting." "" sa(8)
.xx "their inverses." "sin, cos, tan, asin," "acos, atan, atan2: trigonometric functions and" "" sin(3M)
.xx "" "asinh," "acosh, atanh: inverse hyperbolic functions." "" asinh(3M)
.xx "" "signal: change the" "action for a signal." "" signal(3F)
.xx "" "ad: Data Translation" "A/D converter." "" ad(4)
.xx "" "" "ad: Data Translation A/D converter." "" ad(4)
.xx "" "fortune: print a random, hopefully interesting," "adage." "" fortune(6)
.xx "" "" "adb: debugger." "" adb(1)
.xx "" "swapon:" "add a swap device for interleaved paging/swapping." "" swapon(2)
.xx "" "" "addbib: create or extend bibliographic database." "" addbib(1)
.xx "" "adduser: procedure for" "adding new users." "" adduser(8)
.xx "" "swapon: specify" "additional device for paging and swapping." "" swapon(8)
.xx "" "ns_addr, ns_ntoa: Xerox NS(tm)" "address conversion routines." "" ns(3N)
.xx "" "inet_makeaddr, inet_lnaof, inet_netof: Internet" "address manipulation routines." "/inet_ntoa," inet(3N)
.xx "" "loc: return the" "address of an object." "" loc(3F)
.xx "" "arp:" "address resolution display and control." "" arp(8C)
.xx "" "arp:" "Address Resolution Protocol." "" arp(4P)
.xx "" "mailaddr: mail" "addressing description." "" mailaddr(7)
.xx "" "" "adduser: procedure for adding new users." "" adduser(8)
.xx "of the system clock." "" "adjtime: correct the time to allow synchronization" "" adjtime(2)
.xx "" "" "adventure: an exploration game." "" adventure(6)
.xx "" "battlestar: a tropical" "adventure game." "" battlestar(6)
.xx "" "flock: apply or remove an" "advisory lock on an open file." "" flock(2)
.xx "" "yes: be repetitively" "affirmative." "" yes(1)
.xx "" "basename: strip filename" "affixes." "" basename(1)
.xx "" "learn: computer" "aided instruction about UNIX." "" learn(1)
.xx "" "" "alarm: execute a subroutine after a specified time." "" alarm(3F)
.xx "" "" "alarm: schedule signal after specified time." "" alarm(3C)
.xx "" "L.aliases: UUCP hostname" "alias file." "" L.aliases(5)
.xx "" "" "alias: shell macros." "" csh(1)
.xx "" "unalias: remove" "aliases." "" csh(1)
.xx "" "" "aliases: aliases file for sendmail." "" aliases(5)
.xx "" "which: locate a program file including" "aliases and paths (\fIcsh\fR only)." "" which(1)
.xx "" "newaliases: rebuild the data base for the mail" "aliases file." "" newaliases(1)
.xx "" "aliases:" "aliases file for sendmail." "" aliases(5)
.xx "" "L." "aliases: UUCP hostname alias file." "" L.aliases(5)
.xx "" "valloc:" "aligned memory allocator." "" valloc(3C)
.xx "" "malloc, free, realloc, calloc," "alloca: memory allocator." "" malloc(3)
.xx "" "malloc, free, realloc, calloc, alloca: memory" "allocator." "" malloc(3)
.xx "" "malloc, free, falloc: memory" "allocator." "" malloc(3F)
.xx "" "valloc: aligned memory" "allocator." "" valloc(3C)
.xx "" "scandir," "alphasort: scan a directory." "" scandir(3)
.xx "" "limit:" "alter per-process resource limitations." "" csh(1)
.xx "" "renice:" "alter priority of running processes." "" renice(8)
.xx "" "else:" "alternative commands." "" csh(1)
.xx "" "lex: generator of lexical" "analysis programs." "" lex(1)
.xx "" "error:" "analyze and disperse compiler error messages." "" error(1)
.xx "" "style:" "analyze surface characteristics of a document." "" style(1)
.xx "" "worms:" "animate worms on a display terminal." "" worms(6)
.xx "" "rain:" "animated raindrops display." "" rain(6)
.xx "" "bcd: convert to" "antique media." "" bcd(6)
.xx "" "sticky: persistent text and" "append-only directories." "" sticky(8)
.xx "" "apply:" "apply a command to a set of arguments." "" apply(1)
.xx "" "" "apply: apply a command to a set of arguments." "" apply(1)
.xx "" "flock:" "apply or remove an advisory lock on an open file." "" flock(2)
.xx "" "patch: a program for" "applying a diff file to an original." "" patch(1)
.xx "" "" "apropos: locate commands by keyword lookup." "" apropos(1)
.xx "" "" "ar: archive and library maintainer." "" ar(1)
.xx "" "" "ar: archive (library) file format." "" ar(5)
.xx "" "number: convert" "Arabic numerals to English." "" number(6)
.xx "" "bc:" "arbitrary-precision arithmetic language." "" bc(1)
.xx "graphics/" "plot: openpl, erase, label, line, circle," "arc, move, cont, point, linemod, space, closepl:" "" plot(3X)
.xx "" "tp: manipulate tape" "archive." "" tp(1)
.xx "" "ar:" "archive and library maintainer." "" ar(1)
.xx "" "tar: tape" "archive file format." "" tar(5)
.xx "" "ar:" "archive (library) file format." "" ar(5)
.xx "" "tar: tape" "archiver." "" tar(1)
.xx "" "arff, flcopy:" "archiver and copier for floppy." "" arff(8V)
.xx "" "ranlib: convert" "archives to random libraries." "" ranlib(1)
.xx "" "" "arff, flcopy: archiver and copier for floppy." "" arff(8V)
.xx "" "glob: filename expand" "argument list." "" csh(1)
.xx "" "shift: manipulate" "argument list." "" csh(1)
.xx "" "varargs: variable" "argument list." "" varargs(3)
.xx "" "apply: apply a command to a set of" "arguments." "" apply(1)
.xx "" "echo: echo" "arguments." "" csh(1)
.xx "" "echo: echo" "arguments." "" echo(1)
.xx "" "getarg, iargc: return command line" "arguments." "" getarg(3F)
.xx "" "expr: evaluate" "arguments as an expression." "" expr(1)
.xx "" "getopt: get option letter from" "argv." "" getopt(3)
.xx "" "m_out, sdiv, itom: multiple precision integer" "arithmetic." "/omin, fmin, m_in, mout, omout, fmout," mp(3X)
.xx "" "traper: trap" "arithmetic errors." "" traper(3F)
.xx "" "bc: arbitrary-precision" "arithmetic language." "" bc(1)
.xx "" "@:" "arithmetic on shell variables." "" csh(1)
.xx "" "" "arithmetic: provide drill in number facts." "" arithmetic(6)
.xx "" "" "arp: address resolution display and control." "" arp(8C)
.xx "" "" "arp: Address Resolution Protocol." "" arp(4P)
.xx "" "ftp:" "ARPANET file transfer program." "" ftp(1C)
.xx "" "biff: be notified if mail" "arrives and who it is from." "" biff(1)
.xx "" "readnews: read news" "articles." "" readnews(1)
.xx "" "vnews: read news" "articles." "" vnews(1)
.xx "" "expr: evaluate arguments" "as an expression." "" expr(1)
.xx "" "slattach: attach serial lines" "as network interfaces." "" slattach(8C)
.xx "" "" "as: VAX-11 assembler." "" as(1)
.xx "" "gmtime, asctime, timezone: convert date and time to" "ASCII." "ctime, localtime," ctime(3)
.xx "" "ascii: map of" "ASCII character set." "" ascii(7)
.xx "" "od: octal, decimal, hex," "ascii dump." "" od(1)
.xx "" "map3270: database for mapping" "ascii keystrokes into IBM 3270 keys." "" map3270(5)
.xx "" "" "ascii: map of ASCII character set." "" ascii(7)
.xx "" "fdate: return date and time in an" "ASCII string." "" fdate(3F)
.xx "" "mset: retrieve" "ASCII to IBM 3270 keyboard map." "" mset(1)
.xx "" "atof, atoi, atol: convert" "ASCII to numbers." "" atof(3)
.xx "" "ctime, localtime, gmtime," "asctime, timezone: convert date and time to ASCII." "" ctime(3)
.xx "and their inverses." "sin, cos, tan," "asin, acos, atan, atan2: trigonometric functions" "" sin(3M)
.xx "" "" "asinh, acosh, atanh: inverse hyperbolic functions." "" asinh(3M)
.xx "" "as: VAX-11" "assembler." "" as(1)
.xx "" "a.out:" "assembler and link editor output." "" a.out(5)
.xx "" "" "assert: program verification." "" assert(3)
.xx "" "setbuf, setbuffer, setlinebuf:" "assign buffering to a stream." "" setbuf(3S)
.xx "" "atrm: remove jobs spooled by" "at." "" atrm(1)
.xx "" "shutdown: close down the system" "at a given time." "" shutdown(8)
.xx "" "at: execute commands" "at a later time." "" at(1)
.xx "" "" "at: execute commands at a later time." "" at(1)
.xx "" "nice, nohup: run a command" "at low priority (\fIsh\fR only)." "" nice(1)
.xx "inverses." "sin, cos, tan, asin, acos," "atan, atan2: trigonometric functions and their" "" sin(3M)
.xx "" "sin, cos, tan, asin, acos, atan," "atan2: trigonometric functions and their inverses." "" sin(3M)
.xx "" "asinh, acosh," "atanh: inverse hyperbolic functions." "" asinh(3M)
.xx "" "" "atof, atoi, atol: convert ASCII to numbers." "" atof(3)
.xx "" "atof," "atoi, atol: convert ASCII to numbers." "" atof(3)
.xx "" "atof, atoi," "atol: convert ASCII to numbers." "" atof(3)
.xx "interrupt." "sigpause:" "atomically release blocked signals and wait for" "" sigpause(2)
.xx "" "" "atq: print the queue of jobs waiting to be run." "" atq(1)
.xx "" "" "atrm: remove jobs spooled by at." "" atrm(1)
.xx "" "slattach:" "attach serial lines as network interfaces." "" slattach(8C)
.xx "" "dn: DN-11" "autocall unit interface." "" dn(4)
.xx "code." "" "autoconf: diagnostics from the autoconfiguration" "" autoconf(4)
.xx "" "autoconf: diagnostics from the" "autoconfiguration code." "" autoconf(4)
.xx "" "bugfiler: file bug reports in folders" "automatically." "" bugfiler(8)
.xx "" "rc: command script for" "auto-reboot and daemons." "" rc(8)
.xx "" "notes," "autoseq, readnotes: a news system." "" notes(1)
.xx "" "wait:" "await completion of process." "" wait(1)
.xx "" "" "awk: pattern scanning and processing language." "" awk(1)
.xx "" "" "backgammon: the game." "" backgammon(6)
.xx "" "bg: place job in" "background." "" csh(1)
.xx "" "wait: wait for" "background processes to complete." "" csh(1)
.xx "" "bad144: read/write dec standard 144" "bad sector information." "" bad144(8)
.xx "" "badsect: create files to contain" "bad sectors." "" badsect(8)
.xx "information." "" "bad144: read/write dec standard 144 bad sector" "" bad144(8)
.xx "" "" "badsect: create files to contain bad sectors." "" badsect(8)
.xx "" "banner: print large" "banner on printer." "" banner(6)
.xx "" "" "banner: print large banner on printer." "" banner(6)
.xx "" "gettytab: terminal configuration data" "base." "" gettytab(5)
.xx "" "hosts: host name data" "base." "" hosts(5)
.xx "" "networks: network name data" "base." "" networks(5)
.xx "" "phones: remote host phone number data" "base." "" phones(5)
.xx "" "printcap: printer capability data" "base." "" printcap(5)
.xx "" "protocols: protocol name data" "base." "" protocols(5)
.xx "" "services: service name data" "base." "" services(5)
.xx "" "termcap: terminal capability data" "base." "" termcap(5)
.xx "" "vgrindefs: vgrind's language definition data" "base." "" vgrindefs(5)
.xx "" "newaliases: rebuild the data" "base for the mail aliases file." "" newaliases(1)
.xx "" "fetch, store, delete, firstkey, nextkey: data" "base subroutines." "dbminit," dbm(3X)
.xx "" "dbm_nextkey, dbm_error, dbm_clearerr: data" "base subroutines." "/dbm_delete, dbm_firstkey," ndbm(3)
.xx "" "vi: screen oriented (visual) display editor" "based on ex." "" vi(1)
.xx "" "" "basename: strip filename affixes." "" basename(1)
.xx "" "" "battlestar: a tropical adventure game." "" battlestar(6)
.xx "" "" "bc: arbitrary-precision arithmetic language." "" bc(1)
.xx "" "" "bcd: convert to antique media." "" bcd(6)
.xx "" "bcopy," "bcmp, bzero, ffs: bit and byte string operations." "" bstring(3)
.xx "operations." "" "bcopy, bcmp, bzero, ffs: bit and byte string" "" bstring(3)
.xx "" "cb: C program" "beautifier." "" cb(1)
.xx "" "va:" "Benson-Varian interface." "" va(4)
.xx "" "vfont: font formats for the" "Benson-Varian or Versatec." "" vfont(5)
.xx "" "j0, j1, jn, y0, y1, yn:" "bessel functions." "" j0(3M)
.xx "" "" "bessel functions: of two kinds for integer orders." "" bessel(3F)
.xx "" "random, drandm, irandm:" "better random number generator." "" random(3F)
.xx "changing/" "random, srandom, initstate, setstate:" "better random number generator; routines for" "" random(3)
.xx "" "" "bg: place job in background." "" csh(1)
.xx "bibliographic reference items." "" "bib, listrefs: bibliographic formatter; list" "" bib(1)
.xx "" "addbib: create or extend" "bibliographic database." "" addbib(1)
.xx "" "roffbib: run off" "bibliographic database." "" roffbib(1)
.xx "" "sortbib: sort" "bibliographic database." "" sortbib(1)
.xx "reference items." "bib, listrefs:" "bibliographic formatter; list bibliographic" "" bib(1)
.xx "" "bib, listrefs: bibliographic formatter; list" "bibliographic reference items." "" bib(1)
.xx "" "index for a bibliography, find references in a" "bibliography." "indxbib, lookbib: build inverted" lookbib(1)
.xx "" "indxbib, lookbib: build inverted index for a" "bibliography, find references in a bibliography." "" lookbib(1)
.xx "from." "" "biff: be notified if mail arrives and who it is" "" biff(1)
.xx "" "comsat:" "biff server." "" comsat(8C)
.xx "" "install: install" "binaries." "" install(1)
.xx "" "whereis: locate source," "binary, and or manual for program." "" whereis(1)
.xx "" "find the printable strings in a object, or other" "binary, file." "strings:" strings(1)
.xx "" "uuencode, uudecode: encode/decode a" "binary file for transmission via mail." "" uuencode(1C)
.xx "" "fread, fwrite: buffered" "binary input/output." "" fread(3S)
.xx "" "bind:" "bind a name to a socket." "" bind(2)
.xx "" "" "bind: bind a name to a socket." "" bind(2)
.xx "" "" "binmail: send or receive mail among users." "" binmail(1)
.xx "" "bcopy, bcmp, bzero, ffs:" "bit and byte string operations." "" bstring(3)
.xx "functions." "" "bit: and, or, xor, not, rshift, lshift bitwise" "" bit(3F)
.xx "" "bit: and, or, xor, not, rshift, lshift" "bitwise functions." "" bit(3F)
.xx "communication (obsolete)." "" "bk: line discipline for machine-machine" "" bk(4)
.xx "" "sync: update the super" "block." "" sync(8)
.xx "" "update: periodically update the super" "block." "" update(8)
.xx "" "sigblock:" "block signals." "" sigblock(2)
.xx "" "sigpause: atomically release" "blocked signals and wait for interrupt." "" sigpause(2)
.xx "" "sum: sum and count" "blocks in a file." "" sum(1)
.xx "" "boggle: play the game of" "boggle." "" boggle(6)
.xx "" "" "boggle: play the game of boggle." "" boggle(6)
.xx "" "ching: the" "book of changes and other cookies." "" ching(6)
.xx "" "reboot: UNIX" "bootstrapping procedures." "" reboot(8)
.xx "" "mille: play Mille" "Bournes." "" mille(6)
.xx "" "switch: multi-way command" "branch." "" csh(1)
.xx "login,/" "sh, for, case, if, while, \fB:\fP, \fB.\fP," "break, continue, cd, eval, exec, exit, export," "" sh(1)
.xx "" "" "break: exit while/foreach loop." "" csh(1)
.xx "" "" "breaksw: exit from switch." "" csh(1)
.xx "" "fg:" "bring job into foreground." "" csh(1)
.xx "" "" "brk, sbrk: change data segment size." "" brk(2)
.xx "" "ik: Ikonas frame" "buffer, graphics device interface." "" ik(4)
.xx "" "fread, fwrite:" "buffered binary input/output." "" fread(3S)
.xx "" "stdio: standard" "buffered input/output package." "" stdio(3S)
.xx "" "setbuf, setbuffer, setlinebuf: assign" "buffering to a stream." "" setbuf(3S)
.xx "" "generate a dump of the operating system's profile" "buffers." "kgmon:" kgmon(8)
.xx "" "sendbug: mail a system" "bug report to 4bsd-bugs." "" sendbug(1)
.xx "" "bugfiler: file" "bug reports in folders automatically." "" bugfiler(8)
.xx "automatically." "" "bugfiler: file bug reports in folders" "" bugfiler(8)
.xx "references in a bibliography." "indxbib, lookbib:" "build inverted index for a bibliography, find" "" lookbib(1)
.xx "" "mknod:" "build special file." "" mknod(8)
.xx "" "config:" "build system configuration files." "" config(8)
.xx "" "ntohs: convert values between host and network" "byte order." "htonl, htons, ntohl," byteorder(3N)
.xx "" "bcopy, bcmp, bzero, ffs: bit and" "byte string operations." "" bstring(3)
.xx "" "swab: swap" "bytes." "" swab(3)
.xx "" "bcopy, bcmp," "bzero, ffs: bit and byte string operations." "" bstring(3)
.xx "" "cc:" "C compiler." "" cc(1)
.xx "" "intro: introduction to" "C library functions." "" intro(3)
.xx "" "cb:" "C program beautifier." "" cb(1)
.xx "" "indent: indent and format" "C program source." "" indent(1)
.xx "" "lint: a" "C program verifier." "" lint(1)
.xx "" "xstr: extract strings from" "C programs to implement shared strings." "" xstr(1)
.xx "" "mkstr: create an error message file by massaging" "C source." "" mkstr(1)
.xx "" "hypot," "cabs: Euclidean distance, complex absolute value." "" hypot(3M)
.xx "" "" "cal: print calendar." "" cal(1)
.xx "" "diskpart:" "calculate default disk partition sizes." "" diskpart(8)
.xx "" "dc: desk" "calculator." "" dc(1)
.xx "" "cal: print" "calendar." "" cal(1)
.xx "" "" "calendar: reminder service." "" calendar(1)
.xx "" "syscall: indirect system" "call." "" syscall(2)
.xx "" "gprof: display" "call graph profile data." "" gprof(1)
.xx "" "getuid, getgid: get user or group ID of the" "caller." "" getuid(3F)
.xx "" "malloc, free, realloc," "calloc, alloca: memory allocator." "" malloc(3)
.xx "" "siginterrupt: allow signals to interrupt system" "calls." "" siginterrupt(3)
.xx "" "intro: introduction to system" "calls and error numbers." "" intro(2)
.xx "" "canfield, cfscores: the solitaire card game" "canfield." "" canfield(6)
.xx "canfield." "" "canfield, cfscores: the solitaire card game" "" canfield(6)
.xx "" "printcap: printer" "capability data base." "" printcap(5)
.xx "" "termcap: terminal" "capability data base." "" termcap(5)
.xx "" "canfield, cfscores: the solitaire" "card game canfield." "" canfield(6)
.xx "" "cribbage: the" "card game cribbage." "" cribbage(6)
.xx "cd, eval, exec, exit, export, login,/" "sh, for," "case, if, while, \fB:\fP, \fB.\fP, break, continue," "" sh(1)
.xx "" "" "case: selector in switch." "" csh(1)
.xx "" "tu: VAX-11/730 and VAX-11/750 TU58 console" "cassette interface." "" tu(4)
.xx "" "uu: TU58/DECtape II UNIBUS" "cassette interface." "" uu(4)
.xx "" "" "cat: catenate and print." "" cat(1)
.xx "" "catman: create the" "cat files for the manual." "" catman(8)
.xx "" "default:" "catchall clause in switch." "" csh(1)
.xx "" "cat:" "catenate and print." "" cat(1)
.xx "" "" "catman: create the cat files for the manual." "" catman(8)
.xx "" "" "cb: C program beautifier." "" cb(1)
.xx "" "" "cbrt, sqrt: cube root, square root." "" sqrt(3M)
.xx "" "" "cc: C compiler." "" cc(1)
.xx "" "" "cd: change directory." "" csh(1)
.xx "" "" "cd: change working directory." "" cd(1)
.xx "" "case, if, while, \fB:\fP, \fB.\fP, break, continue," "cd, eval, exec, exit, export, login, read,/" "/for," sh(1)
.xx "round-to-nearest functions." "fabs, floor," "ceil, rint: absolute value, floor, ceiling, and" "" floor(3M)
.xx "" "fabs, floor, ceil, rint: absolute value, floor," "ceiling, and round-to-nearest functions." "" floor(3M)
.xx "" "canfield," "cfscores: the solitaire card game canfield." "" canfield(6)
.xx "" "chdir:" "change current working directory." "" chdir(2)
.xx "" "brk, sbrk:" "change data segment size." "" brk(2)
.xx "" "chdir:" "change default directory." "" chdir(3F)
.xx "" "cd:" "change directory." "" csh(1)
.xx "" "chdir:" "change directory." "" csh(1)
.xx "" "ioinit:" "change f77 I/O initialization." "" ioinit(3F)
.xx "" "chgrp:" "change group." "" chgrp(1)
.xx "" "chmod:" "change mode." "" chmod(1)
.xx "" "chmod:" "change mode of a file." "" chmod(3F)
.xx "" "chmod:" "change mode of file." "" chmod(2)
.xx "" "umask:" "change or display file creation mask." "" csh(1)
.xx "" "chown:" "change owner." "" chown(8)
.xx "" "chown:" "change owner and group of a file." "" chown(2)
.xx "" "chfn, chsh, passwd:" "change password file information." "" chfn(1)
.xx "" "chfn, chsh, passwd:" "change password file information." "" chsh(1)
.xx "" "chfn, chsh, passwd:" "change password file information." "" passwd(1)
.xx "" "chroot:" "change root directory." "" chroot(2)
.xx "" "signal:" "change the action for a signal." "" signal(3F)
.xx "" "rename:" "change the name of a file." "" rename(2)
.xx "" "set:" "change value of shell variable." "" csh(1)
.xx "" "cd:" "change working directory." "" cd(1)
.xx "" "ching: the book of" "changes and other cookies." "" ching(6)
.xx "" "better random number generator; routines for" "changing generators." "/srandom, initstate, setstate:" random(3)
.xx "" "pipe: create an interprocess communication" "channel." "" pipe(2)
.xx "" "ungetc: push" "character back into input stream." "" ungetc(3S)
.xx "" "iscntrl, isascii, toupper, tolower, toascii:" "character classification macros." "/isprint, isgraph," ctype(3)
.xx "" "eqnchar: special" "character definitions for eqn." "" eqnchar(7)
.xx "" "getc, fgetc: get a" "character from a logical unit." "" getc(3F)
.xx "" "index, rindex, lnblnk, len: tell about" "character objects." "" index(3F)
.xx "" "getc, getchar, fgetc, getw: get" "character or word from stream." "" getc(3S)
.xx "" "putc, putchar, fputc, putw: put" "character or word on a stream." "" putc(3S)
.xx "" "ascii: map of ASCII" "character set." "" ascii(7)
.xx "" "putc, fputc: write a" "character to a fortran logical unit." "" putc(3F)
.xx "" "style: analyze surface" "characteristics of a document." "" style(1)
.xx "" "tr: translate" "characters." "" tr(1)
.xx "" "snake, snscore: display" "chase game." "" snake(6)
.xx "" "" "chdir: change current working directory." "" chdir(2)
.xx "" "" "chdir: change default directory." "" chdir(3F)
.xx "" "" "chdir: change directory." "" csh(1)
.xx "" "dcheck: file system directory consistency" "check." "" dcheck(8)
.xx "" "icheck: file system storage consistency" "check." "" icheck(8)
.xx "" "fsck: file system consistency" "check and interactive repair." "" fsck(8)
.xx "" "checknr:" "check nroff/troff files." "" checknr(1)
.xx "" "eqn, neqn," "checkeq: typeset mathematics." "" eqn(1)
.xx "" "quotacheck: file system quota consistency" "checker." "" quotacheck(8)
.xx "" "fastboot, fasthalt: reboot/halt the system without" "checking the disks." "" fastboot(8)
.xx "" "" "checknr: check nroff/troff files." "" checknr(1)
.xx "" "chess: the game of" "chess." "" chess(6)
.xx "" "" "chess: the game of chess." "" chess(6)
.xx "information." "" "chfn, chsh, passwd: change password file" "" chfn(1)
.xx "information." "" "chfn, chsh, passwd: change password file" "" chsh(1)
.xx "information." "" "chfn, chsh, passwd: change password file" "" passwd(1)
.xx "" "" "chgrp: change group." "" chgrp(1)
.xx "" "" "ching: the book of changes and other cookies." "" ching(6)
.xx "" "" "chmod: change mode." "" chmod(1)
.xx "" "" "chmod: change mode of a file." "" chmod(3F)
.xx "" "" "chmod: change mode of file." "" chmod(2)
.xx "" "" "chown: change owner." "" chown(8)
.xx "" "" "chown: change owner and group of a file." "" chown(2)
.xx "" "" "chroot: change root directory." "" chroot(2)
.xx "" "chfn," "chsh, passwd: change password file information." "" chfn(1)
.xx "" "chfn," "chsh, passwd: change password file information." "" chsh(1)
.xx "" "chfn," "chsh, passwd: change password file information." "" passwd(1)
.xx "closepl:/" "plot: openpl, erase, label, line," "circle, arc, move, cont, point, linemod, space," "" plot(3X)
.xx "" "isascii, toupper, tolower, toascii: character" "classification macros." "/isprint, isgraph, iscntrl," ctype(3)
.xx "" "default: catchall" "clause in switch." "" csh(1)
.xx "" "uuclean: uucp spool directory" "clean-up." "" uuclean(8C)
.xx "" "" "clear: clear terminal screen." "" clear(1)
.xx "" "clri:" "clear i-node." "" clri(8)
.xx "" "clear:" "clear terminal screen." "" clear(1)
.xx "" "ferror, feof," "clearerr, fileno: stream status inquiries." "" ferror(3S)
.xx "" "csh: a shell (command interpreter) with" "C-like syntax." "" csh(1)
.xx "" "the time to allow synchronization of the system" "clock." "adjtime: correct" adjtime(2)
.xx "" "kg: KL-11/DL-11W line" "clock." "" kg(4)
.xx "" "cron:" "clock daemon." "" cron(8)
.xx "" "" "close: delete a descriptor." "" close(2)
.xx "" "shutdown:" "close down the system at a given time." "" shutdown(8)
.xx "" "fclose, fflush:" "close or flush a stream." "" fclose(3S)
.xx "" "opendir, readdir, telldir, seekdir, rewinddir," "closedir: directory operations." "" directory(3)
.xx "" "syslog, openlog," "closelog, setlogmask: control system log." "" syslog(3)
.xx "" "circle, arc, move, cont, point, linemod, space," "closepl: graphics interface." "/erase, label, line," plot(3X)
.xx "" "" "clri: clear i-node." "" clri(8)
.xx "" "L." "cmds: UUCP remote command permissions file." "" L.cmds(5)
.xx "" "" "cmp: compare two files." "" cmp(1)
.xx "" "autoconf: diagnostics from the autoconfiguration" "code." "" autoconf(4)
.xx "" "pi: Pascal interpreter" "code translator." "" pi(1)
.xx "" "" "col: filter reverse line feeds." "" col(1)
.xx "" "" "colcrt: filter nroff output for CRT previewing." "" colcrt(1)
.xx "log." "dmesg:" "collect system diagnostic messages to form error" "" dmesg(8)
.xx "" "" "colrm: remove columns from a file." "" colrm(1)
.xx "" "colrm: remove" "columns from a file." "" colrm(1)
.xx "files." "" "comm: select or reject lines common to two sorted" "" comm(1)
.xx "" "exec: overlay shell with specified" "command." "" csh(1)
.xx "" "time: time" "command." "" csh(1)
.xx "" "routines for returning a stream to a remote" "command." "rcmd, rresvport, ruserok:" rcmd(3)
.xx "" "rexec: return stream to a remote" "command." "" rexec(3)
.xx "" "system: issue a shell" "command." "" system(3)
.xx "" "system: execute a UNIX" "command." "" system(3F)
.xx "" "test: condition" "command." "" test(1)
.xx "" "time: time a" "command." "" time(1)
.xx "" "nice, nohup: run a" "command at low priority (\fIsh\fR only)." "" nice(1)
.xx "" "switch: multi-way" "command branch." "" csh(1)
.xx "" "uux: unix to unix" "command execution." "" uux(1C)
.xx "" "rehash: recompute" "command hash table." "" csh(1)
.xx "" "unhash: discard" "command hash table." "" csh(1)
.xx "" "hashstat: print" "command hashing statistics." "" csh(1)
.xx "" "nohup: run" "command immune to hangups." "" csh(1)
.xx "" "csh: a shell" "(command interpreter) with C-like syntax." "" csh(1)
.xx "" "whatis: describe what a" "command is." "" whatis(1)
.xx "" "readonly, set, shift, times, trap, umask, wait:" "command language." "/exec, exit, export, login, read," sh(1)
.xx "" "getarg, iargc: return" "command line arguments." "" getarg(3F)
.xx "" "L.cmds: UUCP remote" "command permissions file." "" L.cmds(5)
.xx "" "repeat: execute" "command repeatedly." "" csh(1)
.xx "" "rc:" "command script for auto-reboot and daemons." "" rc(8)
.xx "" "onintr: process interrupts in" "command scripts." "" csh(1)
.xx "" "apply: apply a" "command to a set of arguments." "" apply(1)
.xx "" "goto:" "command transfer." "" csh(1)
.xx "" "else: alternative" "commands." "" csh(1)
.xx "" "intro: introduction to" "commands." "" intro(1)
.xx "" "introduction to system maintenance and operation" "commands." "intro:" intro(8)
.xx "" "rcsintro: introduction to RCS" "commands." "" rcsintro(1)
.xx "" "at: execute" "commands at a later time." "" at(1)
.xx "" "apropos: locate" "commands by keyword lookup." "" apropos(1)
.xx "" "while: repeat" "commands conditionally." "" csh(1)
.xx "" "lastcomm: show last" "commands executed in reverse order." "" lastcomm(1)
.xx "" "source: read" "commands from file." "" csh(1)
.xx "" "comm: select or reject lines" "common to two sorted files." "" comm(1)
.xx "" "socket: create an endpoint for" "communication." "" socket(2)
.xx "" "pipe: create an interprocess" "communication channel." "" pipe(2)
.xx "" "bk: line discipline for machine-machine" "communication (obsolete)." "" bk(4)
.xx "" "talkd: remote user" "communication server." "" talkd(8C)
.xx "" "dmc: DEC DMC-11/DMR-11 point-to-point" "communications device." "" dmc(4)
.xx "" "dh: DH-11/DM-11" "communications multiplexer." "" dh(4)
.xx "" "dhu: DHU-11" "communications multiplexer." "" dhu(4)
.xx "" "dz: DZ-11" "communications multiplexer." "" dz(4)
.xx "" "users:" "compact list of users who are on the system." "" users(1)
.xx "" "diff: differential file and directory" "comparator." "" diff(1)
.xx "" "cmp:" "compare two files." "" cmp(1)
.xx "" "diff3: 3-way differential file" "comparison." "" diff3(1)
.xx "" "liszt:" "compile a Franz Lisp program." "" liszt(1)
.xx "" "cc: C" "compiler." "" cc(1)
.xx "" "f77: Fortran 77" "compiler." "" f77(1)
.xx "" "pc: Pascal" "compiler." "" pc(1)
.xx "" "error: analyze and disperse" "compiler error messages." "" error(1)
.xx "" "yacc: yet another" "compiler-compiler." "" yacc(1)
.xx "" "fp: Functional Programming language" "compiler/interpreter." "" fp(1)
.xx "" "wait: wait for background processes to" "complete." "" csh(1)
.xx "" "wait: await" "completion of process." "" wait(1)
.xx "" "hypot, cabs: Euclidean distance," "complex absolute value." "" hypot(3M)
.xx "" "compress, uncompress, zcat:" "compress and expand data." "" compress(1)
.xx "data." "" "compress, uncompress, zcat: compress and expand" "" compress(1)
.xx "" "learn:" "computer aided instruction about UNIX." "" learn(1)
.xx "" "hangman:" "Computer version of the game hangman." "" hangman(6)
.xx "" "" "comsat: biff server." "" comsat(8C)
.xx "" "test:" "condition command." "" test(1)
.xx "" "endif: terminate" "conditional." "" csh(1)
.xx "" "if:" "conditional statement." "" csh(1)
.xx "" "while: repeat commands" "conditionally." "" csh(1)
.xx "" "" "config: build system configuration files." "" config(8)
.xx "" "gettytab: terminal" "configuration data base." "" gettytab(5)
.xx "" "resolver" "configuration file." "" resolver(5)
.xx "" "config: build system" "configuration files." "" config(8)
.xx "" "ifconfig:" "configure network interface parameters." "" ifconfig(8C)
.xx "" "" "connect: initiate a connection on a socket." "" connect(2)
.xx "" "tip, cu:" "connect to a remote system." "" tip(1C)
.xx "" "getpeername: get name of" "connected peer." "" getpeername(2)
.xx "" "socketpair: create a pair of" "connected sockets." "" socketpair(2)
.xx "" "shutdown: shut down part of a full-duplex" "connection." "" shutdown(2)
.xx "" "accept: accept a" "connection on a socket." "" accept(2)
.xx "" "connect: initiate a" "connection on a socket." "" connect(2)
.xx "" "listen: listen for" "connections on a socket." "" listen(2)
.xx "" "" "cons: VAX-11 console interface." "" cons(4)
.xx "" "dcheck: file system directory" "consistency check." "" dcheck(8)
.xx "" "icheck: file system storage" "consistency check." "" icheck(8)
.xx "" "fsck: file system" "consistency check and interactive repair." "" fsck(8)
.xx "" "quotacheck: file system quota" "consistency checker." "" quotacheck(8)
.xx "" "tu: VAX-11/730 and VAX-11/750 TU58" "console cassette interface." "" tu(4)
.xx "" "fl:" "console floppy interface." "" fl(4)
.xx "" "cons: VAX-11" "console interface." "" cons(4)
.xx "" "crl: VAX 8600" "console RL02 interface." "" crl(4)
.xx "" "show what versions of object modules were used to" "construct a file." "what:" what(1)
.xx "" "mkfs:" "construct a file system." "" mkfs(8)
.xx "" "newfs:" "construct a new file system." "" newfs(8)
.xx "" "mkproto:" "construct a prototype file system." "" mkproto(8)
.xx "" "deroff: remove nroff, troff, tbl and eqn" "constructs." "" deroff(1)
.xx "" "setrlimit: control maximum system resource" "consumption." "getrlimit," getrlimit(2)
.xx "" "vlimit: control maximum system resource" "consumption." "" vlimit(3C)
.xx "" "/openpl, erase, label, line, circle, arc, move," "cont, point, linemod, space, closepl: graphics/" "" plot(3X)
.xx "" "badsect: create files to" "contain bad sectors." "" badsect(8)
.xx "" "ls: list" "contents of directory." "" ls(1)
.xx "" "sigstack: set and/or get signal stack" "context." "" sigstack(2)
.xx "" "sh, for, case, if, while, \fB:\fP, \fB.\fP, break," "continue, cd, eval, exec, exit, export, login,/" "" sh(1)
.xx "" "" "continue: cycle in loop." "" csh(1)
.xx "" "arp: address resolution display and" "control." "" arp(8C)
.xx "" "fcntl: file" "control." "" fcntl(2)
.xx "" "ioctl:" "control device." "" ioctl(2)
.xx "" "init: process" "control initialization." "" init(8)
.xx "" "getrlimit, setrlimit:" "control maximum system resource consumption." "" getrlimit(2)
.xx "" "vlimit:" "control maximum system resource consumption." "" vlimit(3C)
.xx "" "icmp: Internet" "Control Message Protocol." "" icmp(4P)
.xx "" "lpc: line printer" "control program." "" lpc(8)
.xx "" "timedc: timed" "control program." "" timedc(8)
.xx "" "tcp: Internet Transmission" "Control Protocol." "" tcp(4P)
.xx "" "syslog, openlog, closelog, setlogmask:" "control system log." "" syslog(3)
.xx "" "vhangup: virtually ``hangup'' the current" "control terminal." "" vhangup(2)
.xx "" "uda: UDA-50 disk" "controller interface." "" uda(4)
.xx "" "up: unibus storage module" "controller/drives." "" up(4)
.xx "" "term:" "conventional names for terminals." "" term(7)
.xx "" "ecvt, fcvt, gcvt: output" "conversion." "" ecvt(3)
.xx "" "long, short: integer object" "conversion." "" long(3F)
.xx "" "printf, fprintf, sprintf: formatted output" "conversion." "" printf(3S)
.xx "" "scanf, fscanf, sscanf: formatted input" "conversion." "" scanf(3S)
.xx "" "units:" "conversion program." "" units(1)
.xx "" "ns_addr, ns_ntoa: Xerox NS(tm)  address" "conversion routines." "" ns(3N)
.xx "" "dd:" "convert and copy a file." "" dd(1)
.xx "" "number:" "convert Arabic numerals to English." "" number(6)
.xx "" "ranlib:" "convert archives to random libraries." "" ranlib(1)
.xx "" "atof, atoi, atol:" "convert ASCII to numbers." "" atof(3)
.xx "" "ctime, localtime, gmtime, asctime, timezone:" "convert date and time to ASCII." "" ctime(3)
.xx "" "htable:" "convert NIC standard format host tables." "" htable(8)
.xx "" "bcd:" "convert to antique media." "" bcd(6)
.xx "" "htonl, htons, ntohl, ntohs:" "convert values between host and network byte order." "" byteorder(3N)
.xx "" "ad: Data Translation A/D" "converter." "" ad(4)
.xx "" "ching: the book of changes and other" "cookies." "" ching(6)
.xx "" "arff, flcopy: archiver and" "copier for floppy." "" arff(8V)
.xx "" "cp:" "copy." "" cp(1)
.xx "" "rcp: remote file" "copy." "" rcp(1C)
.xx "" "uucp: unix to unix" "copy." "" uucp(1C)
.xx "" "dd: convert and" "copy a file." "" dd(1)
.xx "" "tcopy:" "copy a mag tape." "" tcopy(1)
.xx "" "fork: create a" "copy of this process." "" fork(3F)
.xx "remainder, exponent manipulations." "" "copysign, drem, finite, logb, scalb: copysign," "" ieee(3M)
.xx "" "copysign, drem, finite, logb, scalb:" "copysign, remainder, exponent manipulations." "" ieee(3M)
.xx "" "savecore: save a" "core dump of the operating system." "" savecore(8)
.xx "" "" "core: format of memory image file." "" core(5)
.xx "" "gcore: get" "core images of running processes." "" gcore(1)
.xx "system clock." "adjtime:" "correct the time to allow synchronization of the" "" adjtime(2)
.xx "functions and their inverses." "sin," "cos, tan, asin, acos, atan, atan2: trigonometric" "" sin(3M)
.xx "" "sinh," "cosh, tanh: hyperbolic functions." "" sinh(3M)
.xx "" "wc: word" "count." "" wc(1)
.xx "" "sum: sum and" "count blocks in a file." "" sum(1)
.xx "" "" "cp: copy." "" cp(1)
.xx "" "" "crash: what happens when the system crashes." "" crash(8V)
.xx "" "crash: what happens when the system" "crashes." "" crash(8V)
.xx "" "" "creat: create a new file." "" creat(2)
.xx "" "fork:" "create a copy of this process." "" fork(3F)
.xx "" "creat:" "create a new file." "" creat(2)
.xx "" "open: open a file for reading or writing, or" "create a new file." "" open(2)
.xx "" "fork:" "create a new process." "" fork(2)
.xx "" "socketpair:" "create a pair of connected sockets." "" socketpair(2)
.xx "" "ctags:" "create a tags file." "" ctags(1)
.xx "" "socket:" "create an endpoint for communication." "" socket(2)
.xx "" "mkstr:" "create an error message file by massaging C source." "" mkstr(1)
.xx "" "pipe:" "create an interprocess communication channel." "" pipe(2)
.xx "" "badsect:" "create files to contain bad sectors." "" badsect(8)
.xx "" "addbib:" "create or extend bibliographic database." "" addbib(1)
.xx "" "catman:" "create the cat files for the manual." "" catman(8)
.xx "" "umask: change or display file" "creation mask." "" csh(1)
.xx "" "umask: set file" "creation mode mask." "" umask(2)
.xx "" "cribbage: the card game" "cribbage." "" cribbage(6)
.xx "" "" "cribbage: the card game cribbage." "" cribbage(6)
.xx "" "" "crl: VAX 8600 console RL02 interface." "" crl(4)
.xx "" "" "cron: clock daemon." "" cron(8)
.xx "" "lxref: lisp" "cross reference program." "" lxref(1)
.xx "" "pxref: Pascal" "cross-reference program." "" pxref(1)
.xx "" "systat: display system statistics on a" "crt." "" systat(1)
.xx "" "colcrt: filter nroff output for" "CRT previewing." "" colcrt(1)
.xx "" "more, page: file perusal filter for" "crt viewing." "" more(1)
.xx "" "" "crypt: encode/decode." "" crypt(1)
.xx "" "" "crypt, setkey, encrypt: DES encryption." "" crypt(3)
.xx "syntax." "" "csh: a shell (command interpreter) with C-like" "" csh(1)
.xx "" "" "css: DEC IMP-11A LH/DH IMP interface." "" css(4)
.xx "" "pcl: DEC" "CSS PCL-11 B Network Interface." "" pcl(4)
.xx "" "" "ct: phototypesetter interface." "" ct(4)
.xx "" "" "ctags: create a tags file." "" ctags(1)
.xx "convert date and time to ASCII." "" "ctime, localtime, gmtime, asctime, timezone:" "" ctime(3)
.xx "" "time," "ctime, ltime, gmtime: return system time." "" time(3F)
.xx "" "tip," "cu: connect to a remote system." "" tip(1C)
.xx "" "cbrt, sqrt:" "cube root, square root." "" sqrt(3M)
.xx "" "vhangup: virtually ``hangup'' the" "current control terminal." "" vhangup(2)
.xx "" "gethostid, sethostid: get/set unique identifier of" "current host." "" gethostid(2)
.xx "" "gethostname, sethostname: get/set name of" "current host." "" gethostname(2)
.xx "" "hostnm: get name of" "current host." "" hostnm(3F)
.xx "" "hostid: set or print identifier of" "current host system." "" hostid(1)
.xx "" "hostname: set or print name of" "current host system." "" hostname(1)
.xx "" "jobs: print" "current job list." "" csh(1)
.xx "" "sigsetmask: set" "current signal mask." "" sigsetmask(2)
.xx "" "whoami: print effective" "current user id." "" whoami(1)
.xx "" "chdir: change" "current working directory." "" chdir(2)
.xx "" "getcwd: get pathname of" "current working directory." "" getcwd(3F)
.xx "" "getwd: get" "current working directory pathname." "" getwd(3)
.xx "motion." "" "curses: screen functions with ``optimal'' cursor" "" curses(3X)
.xx "" "curses: screen functions with ``optimal''" "cursor motion." "" curses(3X)
.xx "" "spline: interpolate smooth" "curve." "" spline(1G)
.xx "" "continue:" "cycle in loop." "" csh(1)
.xx "" "cron: clock" "daemon." "" cron(8)
.xx "" "lpd: line printer" "daemon." "" lpd(8)
.xx "" "routed: network routing" "daemon." "" routed(8C)
.xx "" "timed: time server" "daemon." "" timed(8)
.xx "" "XNSrouted: NS Routing Information Protocol" "daemon." "" XNSrouted(8C)
.xx "" "rc: command script for auto-reboot and" "daemons." "" rc(8)
.xx "" "ftpd:" "DARPA Internet File Transfer Protocol server." "" ftpd(8C)
.xx "" "whois:" "DARPA Internet user name directory service." "" whois(1)
.xx "" "telnetd:" "DARPA TELNET protocol server." "" telnetd(8C)
.xx "" "tftpd:" "DARPA Trivial File Transfer Protocol server." "" tftpd(8C)
.xx "" "compress, uncompress, zcat: compress and expand" "data." "" compress(1)
.xx "" "eval: re-evaluate shell" "data." "" csh(1)
.xx "" "gprof: display call graph profile" "data." "" gprof(1)
.xx "" "prof: display profile" "data." "" prof(1)
.xx "" "ttys: terminal initialization" "data." "" ttys(5)
.xx "" "gettytab: terminal configuration" "data base." "" gettytab(5)
.xx "" "hosts: host name" "data base." "" hosts(5)
.xx "" "networks: network name" "data base." "" networks(5)
.xx "" "phones: remote host phone number" "data base." "" phones(5)
.xx "" "printcap: printer capability" "data base." "" printcap(5)
.xx "" "protocols: protocol name" "data base." "" protocols(5)
.xx "" "services: service name" "data base." "" services(5)
.xx "" "termcap: terminal capability" "data base." "" termcap(5)
.xx "" "vgrindefs: vgrind's language definition" "data base." "" vgrindefs(5)
.xx "" "newaliases: rebuild the" "data base for the mail aliases file." "" newaliases(1)
.xx "" "dbminit, fetch, store, delete, firstkey, nextkey:" "data base subroutines." "" dbm(3X)
.xx "" "dbm_firstkey, dbm_nextkey, dbm_error, dbm_clearerr:" "data base subroutines." "/dbm_store, dbm_delete," ndbm(3)
.xx "" "brk, sbrk: change" "data segment size." "" brk(2)
.xx "" "null:" "data sink." "" null(4)
.xx "" "ad:" "Data Translation A/D converter." "" ad(4)
.xx "" "types: primitive system" "data types." "" types(5)
.xx "" "addbib: create or extend bibliographic" "database." "" addbib(1)
.xx "" "roffbib: run off bibliographic" "database." "" roffbib(1)
.xx "" "sortbib: sort bibliographic" "database." "" sortbib(1)
.xx "keys." "map3270:" "database for mapping ascii keystrokes into IBM 3270" "" map3270(5)
.xx "" "join: relational" "database operator." "" join(1)
.xx "" "idp: Xerox Internet" "Datagram Protocol." "" idp(4P)
.xx "" "udp: Internet User" "Datagram Protocol." "" udp(4P)
.xx "" "date: print and set the" "date." "" date(1)
.xx "" "gettimeofday, settimeofday: get/set" "date and time." "" gettimeofday(2)
.xx "" "time, ftime: get" "date and time." "" time(3C)
.xx "" "fdate: return" "date and time in an ASCII string." "" fdate(3F)
.xx "" "localtime, gmtime, asctime, timezone: convert" "date and time to ASCII." "ctime," ctime(3)
.xx "" "touch: update" "date last modified of a file." "" touch(1)
.xx "" "idate, itime: return" "date or time in numerical form." "" idate(3F)
.xx "" "" "date: print and set the date." "" date(1)
.xx "" "dbm_delete, dbm_firstkey, dbm_nextkey, dbm_error," "dbm_clearerr: data base subroutines." "/dbm_store," ndbm(3)
.xx "dbm_firstkey, dbm_nextkey, dbm_error,/" "dbm_open," "dbm_close, dbm_fetch, dbm_store, dbm_delete," "" ndbm(3)
.xx "" "dbm_open, dbm_close, dbm_fetch, dbm_store," "dbm_delete, dbm_firstkey, dbm_nextkey, dbm_error,/" "" ndbm(3)
.xx "" "/dbm_store, dbm_delete, dbm_firstkey, dbm_nextkey," "dbm_error, dbm_clearerr: data base subroutines." "" ndbm(3)
.xx "dbm_nextkey, dbm_error,/" "dbm_open, dbm_close," "dbm_fetch, dbm_store, dbm_delete, dbm_firstkey," "" ndbm(3)
.xx "data/" "/dbm_close, dbm_fetch, dbm_store, dbm_delete," "dbm_firstkey, dbm_nextkey, dbm_error, dbm_clearerr:" "" ndbm(3)
.xx "data base subroutines." "" "dbminit, fetch, store, delete, firstkey, nextkey:" "" dbm(3X)
.xx "" "/dbm_fetch, dbm_store, dbm_delete, dbm_firstkey," "dbm_nextkey, dbm_error, dbm_clearerr: data base/" "" ndbm(3)
.xx "dbm_delete, dbm_firstkey, dbm_nextkey, dbm_error,/" "" "dbm_open, dbm_close, dbm_fetch, dbm_store," "" ndbm(3)
.xx "dbm_error,/" "dbm_open, dbm_close, dbm_fetch," "dbm_store, dbm_delete, dbm_firstkey, dbm_nextkey," "" ndbm(3)
.xx "" "" "dbx: dbx symbol table information." "" dbx(5)
.xx "" "" "dbx: debugger." "" dbx(1)
.xx "" "dbx:" "dbx symbol table information." "" dbx(5)
.xx "" "" "dc: desk calculator." "" dc(1)
.xx "" "" "dcheck: file system directory consistency check." "" dcheck(8)
.xx "" "" "dd: convert and copy a file." "" dd(1)
.xx "" "" "ddn: DDN Standard Mode X.25 IMP interface." "" ddn(4)
.xx "" "ddn:" "DDN Standard Mode X.25 IMP interface." "" ddn(4)
.xx "" "" "de: DEC DEUNA 10 Mb/s Ethernet interface." "" de(4)
.xx "" "adb:" "debugger." "" adb(1)
.xx "" "dbx:" "debugger." "" dbx(1)
.xx "" "pdx: pascal" "debugger." "" pdx(1)
.xx "" "pcl:" "DEC CSS PCL-11 B Network Interface." "" pcl(4)
.xx "" "qe:" "DEC DEQNA Q-bus 10 Mb/s Ethernet interface." "" qe(4)
.xx "" "de:" "DEC DEUNA 10 Mb/s Ethernet interface." "" de(4)
.xx "device." "dmc:" "DEC DMC-11/DMR-11 point-to-point communications" "" dmc(4)
.xx "" "css:" "DEC IMP-11A LH/DH IMP interface." "" css(4)
.xx "" "rx:" "DEC RX02 floppy disk interface." "" rx(4)
.xx "" "bad144: read/write" "dec standard 144 bad sector information." "" bad144(8)
.xx "" "tmscp:" "DEC TMSCP magtape interface." "" tmscp(4)
.xx "" "od: octal," "decimal, hex, ascii dump." "" od(1)
.xx "" "tp:" "DEC/mag tape formats." "" tp(5)
.xx "" "" "default: catchall clause in switch." "" csh(1)
.xx "" "chdir: change" "default directory." "" chdir(3F)
.xx "" "diskpart: calculate" "default disk partition sizes." "" diskpart(8)
.xx "" "vgrindefs: vgrind's language" "definition data base." "" vgrindefs(5)
.xx "" "eqnchar: special character" "definitions for eqn." "" eqnchar(7)
.xx "" "stty, gtty: set and get terminal state" "(defunct)." "" stty(3C)
.xx "" "close:" "delete a descriptor." "" close(2)
.xx "" "dbminit, fetch, store," "delete, firstkey, nextkey: data base subroutines." "" dbm(3X)
.xx "" "tail:" "deliver the last part of a file." "" tail(1)
.xx "" "mesg: permit or" "deny messages." "" mesg(1)
.xx "" "tset: terminal" "dependent initialization." "" tset(1)
.xx "" "qe: DEC" "DEQNA Q-bus 10 Mb/s Ethernet interface." "" qe(4)
.xx "constructs." "" "deroff: remove nroff, troff, tbl and eqn" "" deroff(1)
.xx "" "crypt, setkey, encrypt:" "DES encryption." "" crypt(3)
.xx "" "whatis:" "describe what a command is." "" whatis(1)
.xx "" "mailaddr: mail addressing" "description." "" mailaddr(7)
.xx "" "getdiskbyname: get disk" "description by its name." "" getdisk(3)
.xx "" "disktab: disk" "description file." "" disktab(5)
.xx "" "L-devices: UUCP device" "description file." "" L-devices(5)
.xx "" "L.sys: UUCP remote host" "description file." "" L.sys(5)
.xx "" "remote: remote host" "description file." "" remote(5)
.xx "" "close: delete a" "descriptor." "" close(2)
.xx "" "dup, dup2: duplicate a" "descriptor." "" dup(2)
.xx "" "getfstype, setfsent, endfsent: get file system" "descriptor file entry." "/getfsspec, getfsfile," getfsent(3)
.xx "" "getdtablesize: get" "descriptor table size." "" getdtablesize(2)
.xx "" "dc:" "desk calculator." "" dc(1)
.xx "" "access:" "determine accessability of a file." "" access(3F)
.xx "" "access:" "determine accessibility of file." "" access(2)
.xx "" "file:" "determine file type." "" file(1)
.xx "" "de: DEC" "DEUNA 10 Mb/s Ethernet interface." "" de(4)
.xx "" "DEC DMC-11/DMR-11 point-to-point communications" "device." "dmc:" dmc(4)
.xx "" "drum: paging" "device." "" drum(4)
.xx "" "fold: fold long lines for finite width output" "device." "" fold(1)
.xx "" "ioctl: control" "device." "" ioctl(2)
.xx "" "L-devices: UUCP" "device description file." "" L-devices(5)
.xx "" "swapon: add a swap" "device for interleaved paging/swapping." "" swapon(2)
.xx "" "swapon: specify additional" "device for paging and swapping." "" swapon(8)
.xx "" "ik: Ikonas frame buffer, graphics" "device interface." "" ik(4)
.xx "" "ps: Evans and Sutherland Picture System 2 graphics" "device interface." "" ps(4)
.xx "" "tb: line discipline for digitizing" "devices." "" tb(4)
.xx "" "" "df: disk free." "" df(1)
.xx "" "flmin, flmax, ffrac, dflmin, dflmax," "dffrac, inmax: return extreme values." "" flmin(3F)
.xx "" "flmin, flmax, ffrac, dflmin," "dflmax, dffrac, inmax: return extreme values." "" flmin(3F)
.xx "values." "flmin, flmax, ffrac," "dflmin, dflmax, dffrac, inmax: return extreme" "" flmin(3F)
.xx "" "" "dh: DH-11/DM-11 communications multiplexer." "" dh(4)
.xx "" "dh:" "DH-11/DM-11 communications multiplexer." "" dh(4)
.xx "" "" "dhu: DHU-11 communications multiplexer." "" dhu(4)
.xx "" "dhu:" "DHU-11 communications multiplexer." "" dhu(4)
.xx "" "dmesg: collect system" "diagnostic messages to form error log." "" dmesg(8)
.xx "" "autoconf:" "diagnostics from the autoconfiguration code." "" autoconf(4)
.xx "" "explain: print wordy sentences; thesaurus for" "diction." "diction," diction(1)
.xx "for diction." "" "diction, explain: print wordy sentences; thesaurus" "" diction(1)
.xx "" "" "diff: differential file and directory comparator." "" diff(1)
.xx "" "patch: a program for applying a" "diff file to an original." "" patch(1)
.xx "" "" "diff3: 3-way differential file comparison." "" diff3(1)
.xx "" "diff:" "differential file and directory comparator." "" diff(1)
.xx "" "diff3: 3-way" "differential file comparison." "" diff3(1)
.xx "" "tb: line discipline for" "digitizing devices." "" tb(4)
.xx "" "" "dir: format of directories." "" dir(5)
.xx "" "dir: format of" "directories." "" dir(5)
.xx "" "rm, rmdir: remove (unlink) files or" "directories." "" rm(1)
.xx "" "sticky: persistent text and append-only" "directories." "" sticky(8)
.xx "" "rmdir, rm: remove (unlink)" "directories or files." "" rmdir(1)
.xx "" "cd: change working" "directory." "" cd(1)
.xx "" "chdir: change current working" "directory." "" chdir(2)
.xx "" "chdir: change default" "directory." "" chdir(3F)
.xx "" "chroot: change root" "directory." "" chroot(2)
.xx "" "cd: change" "directory." "" csh(1)
.xx "" "chdir: change" "directory." "" csh(1)
.xx "" "getcwd: get pathname of current working" "directory." "" getcwd(3F)
.xx "" "ls: list contents of" "directory." "" ls(1)
.xx "" "mkdir: make a" "directory." "" mkdir(1)
.xx "" "scandir, alphasort: scan a" "directory." "" scandir(3)
.xx "" "uuclean: uucp spool" "directory clean-up." "" uuclean(8C)
.xx "" "diff: differential file and" "directory comparator." "" diff(1)
.xx "" "dcheck: file system" "directory consistency check." "" dcheck(8)
.xx "" "unlink: remove" "directory entry." "" unlink(2)
.xx "" "unlink: remove a" "directory entry." "" unlink(3F)
.xx "" "mkdir: make a" "directory file." "" mkdir(2)
.xx "" "rmdir: remove a" "directory file." "" rmdir(2)
.xx "" "mklost+found: make a lost+found" "directory for fsck." "" mklost+found(8)
.xx "" "pwd: working" "directory name." "" pwd(1)
.xx "" "readdir, telldir, seekdir, rewinddir, closedir:" "directory operations." "opendir," directory(3)
.xx "" "getwd: get current working" "directory pathname." "" getwd(3)
.xx "" "whois: DARPA Internet user name" "directory service." "" whois(1)
.xx "" "popd: pop shell" "directory stack." "" csh(1)
.xx "" "pushd: push shell" "directory stack." "" csh(1)
.xx "" "quota: display" "disc usage and limits." "" quota(1)
.xx "" "unhash:" "discard command hash table." "" csh(1)
.xx "" "unset:" "discard shell variables." "" csh(1)
.xx "" "tb: line" "discipline for digitizing devices." "" tb(4)
.xx "(obsolete)." "bk: line" "discipline for machine-machine communication" "" bk(4)
.xx "" "synchronize a file's in-core state with that on" "disk." "fsync:" fsync(2)
.xx "" "hk: RK6-11/RK06 and RK07 moving head" "disk." "" hk(4)
.xx "" "uda: UDA-50" "disk controller interface." "" uda(4)
.xx "" "getdiskbyname: get" "disk description by its name." "" getdisk(3)
.xx "" "disktab:" "disk description file." "" disktab(5)
.xx "" "df:" "disk free." "" df(1)
.xx "" "hp: MASSBUS" "disk interface." "" hp(4)
.xx "" "rx: DEC RX02 floppy" "disk interface." "" rx(4)
.xx "" "format: how to format" "disk packs." "" format(8V)
.xx "" "diskpart: calculate default" "disk partition sizes." "" diskpart(8)
.xx "" "quota: manipulate" "disk quotas." "" quota(2)
.xx "" "drtest: standalone" "disk test program." "" drtest(8)
.xx "" "du: summarize" "disk usage." "" du(1)
.xx "" "" "diskpart: calculate default disk partition sizes." "" diskpart(8)
.xx "" "reboot/halt the system without checking the" "disks." "fastboot, fasthalt:" fastboot(8)
.xx "" "rxformat: format floppy" "disks." "" rxformat(8V)
.xx "" "" "disktab: disk description file." "" disktab(5)
.xx "" "mount, umount: mount and" "dismount file system." "" mount(8)
.xx "" "error: analyze and" "disperse compiler error messages." "" error(1)
.xx "" "rain: animated raindrops" "display." "" rain(6)
.xx "" "arp: address resolution" "display and control." "" arp(8C)
.xx "" "gprof:" "display call graph profile data." "" gprof(1)
.xx "" "snake, snscore:" "display chase game." "" snake(6)
.xx "" "quota:" "display disc usage and limits." "" quota(1)
.xx "" "vi: screen oriented (visual)" "display editor based on ex." "" vi(1)
.xx "" "umask: change or" "display file creation mask." "" csh(1)
.xx "" "prof:" "display profile data." "" prof(1)
.xx "" "systat:" "display system statistics on a crt." "" systat(1)
.xx "" "sysline:" "display system status on status line of a terminal." "" sysline(1)
.xx "" "worms: animate worms on a" "display terminal." "" worms(6)
.xx "" "uulog:" "display UUCP log files." "" uulog(1C)
.xx "" "jove: an interactive" "display-oriented text editor." "" jove(1)
.xx "" "hypot, cabs: Euclidean" "distance, complex absolute value." "" hypot(3M)
.xx "" "rdist: remote file" "distribution program." "" rdist(1)
.xx "communications device." "" "dmc: DEC DMC-11/DMR-11 point-to-point" "" dmc(4)
.xx "" "dmc: DEC" "DMC-11/DMR-11 point-to-point communications device." "" dmc(4)
.xx "error log." "" "dmesg: collect system diagnostic messages to form" "" dmesg(8)
.xx "" "" "dmf: DMF-32, terminal multiplexor." "" dmf(4)
.xx "" "dmf:" "DMF-32, terminal multiplexor." "" dmf(4)
.xx "" "" "dmz: DMZ-32 terminal multiplexor." "" dmz(4)
.xx "" "dmz:" "DMZ-32 terminal multiplexor." "" dmz(4)
.xx "" "" "dn: DN-11 autocall unit interface." "" dn(4)
.xx "" "dn:" "DN-11 autocall unit interface." "" dn(4)
.xx "" "res_mkquery, res_send, res_init," "dn_comp, dn_expand: resolver routines." "" resolver(3)
.xx "" "res_mkquery, res_send, res_init, dn_comp," "dn_expand: resolver routines." "" resolver(3)
.xx "" "" "doctor: interact with a psychoanalyst." "" doctor(6)
.xx "" "style: analyze surface characteristics of a" "document." "" style(1)
.xx "" "refer: find and insert literature references in" "documents." "" refer(1)
.xx "" "w: who is on and what they are" "doing." "" w(1)
.xx "" "named: Internet" "domain name server." "" named(8)
.xx "" "rogue: Exploring The Dungeons of" "Doom." "" rogue(6)
.xx "" "shutdown: shut" "down part of a full-duplex connection." "" shutdown(2)
.xx "" "shutdown: close" "down the system at a given time." "" shutdown(8)
.xx "" "rand," "drand, irand: return random values." "" rand(3F)
.xx "" "random," "drandm, irandm: better random number generator." "" random(3F)
.xx "" "graph:" "draw a graph." "" graph(1G)
.xx "exponent manipulations." "copysign," "drem, finite, logb, scalb: copysign, remainder," "" ieee(3M)
.xx "" "arithmetic: provide" "drill in number facts." "" arithmetic(6)
.xx "" "ut: UNIBUS TU45 tri-density tape" "drive interface." "" ut(4)
.xx "" "pty: pseudo terminal" "driver." "" pty(4)
.xx "" "" "drtest: standalone disk test program." "" drtest(8)
.xx "" "" "drum: paging device." "" drum(4)
.xx "" "etime," "dtime: return elapsed execution time." "" etime(3F)
.xx "" "" "du: summarize disk usage." "" du(1)
.xx "" "dump: incremental file system" "dump." "" dump(8)
.xx "" "od: octal, decimal, hex, ascii" "dump." "" od(1)
.xx "" "rdump: file system" "dump across the network." "" rdump(8C)
.xx "" "rrestore: restore a file system" "dump across the network." "" rrestore(8C)
.xx "" "" "dump, dumpdates: incremental dump format." "" dump(5)
.xx "" "dumpfs:" "dump file system information." "" dumpfs(8)
.xx "" "dump, dumpdates: incremental" "dump format." "" dump(5)
.xx "" "" "dump: incremental file system dump." "" dump(8)
.xx "" "savecore: save a core" "dump of the operating system." "" savecore(8)
.xx "" "kgmon: generate a" "dump of the operating system's profile buffers." "" kgmon(8)
.xx "" "dump," "dumpdates: incremental dump format." "" dump(5)
.xx "" "" "dumpfs: dump file system information." "" dumpfs(8)
.xx "" "zork: the game of" "dungeon." "" zork(6)
.xx "" "rogue: Exploring The" "Dungeons of Doom." "" rogue(6)
.xx "" "" "dup, dup2: duplicate a descriptor." "" dup(2)
.xx "" "dup," "dup2: duplicate a descriptor." "" dup(2)
.xx "" "dup, dup2:" "duplicate a descriptor." "" dup(2)
.xx "" "" "dz: DZ-11 communications multiplexer." "" dz(4)
.xx "" "dz:" "DZ-11 communications multiplexer." "" dz(4)
.xx "" "" "ec: 3Com 10 Mb/s Ethernet interface." "" ec(4)
.xx "" "echo:" "echo arguments." "" csh(1)
.xx "" "echo:" "echo arguments." "" echo(1)
.xx "" "" "echo: echo arguments." "" csh(1)
.xx "" "" "echo: echo arguments." "" echo(1)
.xx "" "ping: send ICMP" "ECHO_REQUEST packets to network hosts." "" ping(8)
.xx "" "" "ecvt, fcvt, gcvt: output conversion." "" ecvt(3)
.xx "" "" "ed: text editor." "" ed(1)
.xx "" "end, etext," "edata: last locations in program." "" end(3)
.xx "" "ex," "edit: text editor." "" ex(1)
.xx "" "vipw:" "edit the password file." "" vipw(8)
.xx "" "edquota:" "edit user quotas." "" edquota(8)
.xx "" "ed: text" "editor." "" ed(1)
.xx "" "ex, edit: text" "editor." "" ex(1)
.xx "" "jove: an interactive display-oriented text" "editor." "" jove(1)
.xx "" "ld: link" "editor." "" ld(1)
.xx "" "sed: stream" "editor." "" sed(1)
.xx "" "vi: screen oriented (visual) display" "editor based on ex." "" vi(1)
.xx "" "a.out: assembler and link" "editor output." "" a.out(5)
.xx "" "" "edquota: edit user quotas." "" edquota(8)
.xx "" "whoami: print" "effective current user id." "" whoami(1)
.xx "" "setregid: set real and" "effective group ID." "" setregid(2)
.xx "" "setreuid: set real and" "effective user ID's." "" setreuid(2)
.xx "" "vfork: spawn new process in a virtual memory" "efficient way." "" vfork(2)
.xx "" "" "efl: Extended Fortran Language." "" efl(1)
.xx "" "grep," "egrep, fgrep: search a file for a pattern." "" grep(1)
.xx "" "etime, dtime: return" "elapsed execution time." "" etime(3F)
.xx "" "insque, remque: insert/remove" "element from a queue." "" insque(3)
.xx "" "soelim:" "eliminate \&.so's from nroff input." "" soelim(1)
.xx "" "" "else: alternative commands." "" csh(1)
.xx "" "" "en: Xerox 3 Mb/s Ethernet interface." "" en(4)
.xx "" "setquota:" "enable/disable quotas on a file system." "" setquota(2)
.xx "" "nsip: software network interface" "encapsulating ns packets in ip packets.." "" nsip(4)
.xx "" "uuencode: format of an" "encoded uuencode file." "" uuencode(5)
.xx "" "crypt:" "encode/decode." "" crypt(1)
.xx "mail." "uuencode, uudecode:" "encode/decode a binary file for transmission via" "" uuencode(1C)
.xx "" "crypt, setkey," "encrypt: DES encryption." "" crypt(3)
.xx "" "crypt, setkey, encrypt: DES" "encryption." "" crypt(3)
.xx "" "makekey: generate" "encryption key." "" makekey(8)
.xx "" "" "end, etext, edata: last locations in program." "" end(3)
.xx "" "sccs: front" "end for the SCCS subsystem." "" sccs(1)
.xx "" "logout:" "end session." "" csh(1)
.xx "" "" "end: terminate loop." "" csh(1)
.xx "" "/getfsspec, getfsfile, getfstype, setfsent," "endfsent: get file system descriptor file entry." "" getfsent(3)
.xx "" "getgrent, getgrgid, getgrnam, setgrent," "endgrent: get group file entry." "" getgrent(3)
.xx "" "gethostbyaddr, gethostent, sethostent," "endhostent: get network host entry." "gethostbyname," gethostbyname(3N)
.xx "" "" "endif: terminate conditional." "" csh(1)
.xx "" "getnetent, getnetbyaddr, getnetbyname, setnetent," "endnetent: get network entry." "" getnetent(3N)
.xx "" "socket: create an" "endpoint for communication." "" socket(2)
.xx "" "getprotobynumber, getprotobyname, setprotoent," "endprotoent: get protocol entry." "getprotoent," getprotoent(3N)
.xx "" "getpwent, getpwuid, getpwnam, setpwent," "endpwent, setpwfile: get password file entry." "" getpwent(3)
.xx "" "getservbyport, getservbyname, setservent," "endservent: get service entry." "getservent," getservent(3N)
.xx "" "" "endsw: terminate switch." "" csh(1)
.xx "" "getttyent, getttynam, setttyent," "endttyent: get ttys file entry." "" getttyent(3)
.xx "" "getusershell, setusershell," "endusershell: get legal user shells." "" getusershell(3)
.xx "" "number: convert Arabic numerals to" "English." "" number(6)
.xx "" "xsend, xget," "enroll: secret mail." "" xsend(1)
.xx "" "nlist: get" "entries from name list." "" nlist(3)
.xx "" "logger: make" "entries in the system log." "" logger(1)
.xx "" "setfsent, endfsent: get file system descriptor file" "entry." "getfsent, getfsspec, getfsfile, getfstype," getfsent(3)
.xx "" "getgrnam, setgrent, endgrent: get group file" "entry." "getgrent, getgrgid," getgrent(3)
.xx "" "sethostent, endhostent: get network host" "entry." "gethostbyname, gethostbyaddr, gethostent," gethostbyname(3N)
.xx "" "getnetbyname, setnetent, endnetent: get network" "entry." "getnetent, getnetbyaddr," getnetent(3N)
.xx "" "setprotoent, endprotoent: get protocol" "entry." "/getprotobynumber, getprotobyname," getprotoent(3N)
.xx "" "setpwent, endpwent, setpwfile: get password file" "entry." "getpwent, getpwuid, getpwnam," getpwent(3)
.xx "" "getservbyname, setservent, endservent: get service" "entry." "getservent, getservbyport," getservent(3N)
.xx "" "getttynam, setttyent, endttyent: get ttys file" "entry." "getttyent," getttyent(3)
.xx "" "unlink: remove directory" "entry." "" unlink(2)
.xx "" "unlink: remove a directory" "entry." "" unlink(3F)
.xx "" "execv, execle, execlp, execvp, exec, execve, exect," "environ: execute a file." "execl," execl(3)
.xx "" "" "environ: user environment." "" environ(7)
.xx "" "setenv: set variable in" "environment." "" csh(1)
.xx "" "environ: user" "environment." "" environ(7)
.xx "" "printenv: print out the" "environment." "" printenv(1)
.xx "" "window: window" "environment." "" window(1)
.xx "" "getenv: value for" "environment name." "" getenv(3)
.xx "" "unsetenv: remove" "environment variables." "" csh(1)
.xx "" "getenv: get value of" "environment variables." "" getenv(3F)
.xx "" "eqnchar: special character definitions for" "eqn." "" eqnchar(7)
.xx "" "deroff: remove nroff, troff, tbl and" "eqn constructs." "" deroff(1)
.xx "" "" "eqn, neqn, checkeq: typeset mathematics." "" eqn(1)
.xx "" "" "eqnchar: special character definitions for eqn." "" eqnchar(7)
.xx "linemod, space, closepl: graphics/" "plot: openpl," "erase, label, line, circle, arc, move, cont, point," "" plot(3X)
.xx "" "" "erf, erfc: error functions." "" erf(3M)
.xx "" "erf," "erfc: error functions." "" erf(3M)
.xx "messages." "" "error: analyze and disperse compiler error" "" error(1)
.xx "" "erf, erfc:" "error functions." "" erf(3M)
.xx "" "dmesg: collect system diagnostic messages to form" "error log." "" dmesg(8)
.xx "" "mkstr: create an" "error message file by massaging C source." "" mkstr(1)
.xx "" "error: analyze and disperse compiler" "error messages." "" error(1)
.xx "" "perror, sys_errlist, sys_nerr: system" "error messages." "" perror(3)
.xx "" "perror, gerror, ierrno: get system" "error messages." "" perror(3F)
.xx "" "intro: introduction to system calls and" "error numbers." "" intro(2)
.xx "" "spell, spellin, spellout: find spelling" "errors." "" spell(1)
.xx "" "traper: trap arithmetic" "errors." "" traper(3F)
.xx "" "end," "etext, edata: last locations in program." "" end(3)
.xx "" "de: DEC DEUNA 10 Mb/s" "Ethernet interface." "" de(4)
.xx "" "ec: 3Com 10 Mb/s" "Ethernet interface." "" ec(4)
.xx "" "en: Xerox 3 Mb/s" "Ethernet interface." "" en(4)
.xx "" "ex: Excelan 10 Mb/s" "Ethernet interface." "" ex(4)
.xx "" "il: Interlan NI1010 10 Mb/s" "Ethernet interface." "" il(4)
.xx "" "ix: Interlan Np100 10 Mb/s" "Ethernet interface." "" ix(4)
.xx "" "np: Interlan Np100 10 Mb/s" "Ethernet interface." "" np(4)
.xx "" "qe: DEC DEQNA Q-bus 10 Mb/s" "Ethernet interface." "" qe(4)
.xx "" "" "etime, dtime: return elapsed execution time." "" etime(3F)
.xx "" "hypot, cabs:" "Euclidean distance, complex absolute value." "" hypot(3M)
.xx "" "/if, while, \fB:\fP, \fB.\fP, break, continue, cd," "eval, exec, exit, export, login, read, readonly,/" "" sh(1)
.xx "" "" "eval: re-evaluate shell data." "" csh(1)
.xx "" "expr:" "evaluate arguments as an expression." "" expr(1)
.xx "device interface." "ps:" "Evans and Sutherland Picture System 2 graphics" "" ps(4)
.xx "" "history: print history" "event list." "" csh(1)
.xx "" "screen oriented (visual) display editor based on" "ex." "vi:" vi(1)
.xx "" "" "ex, edit: text editor." "" ex(1)
.xx "" "" "ex: Excelan 10 Mb/s Ethernet interface." "" ex(4)
.xx "" "lpq: spool queue" "examination program." "" lpq(1)
.xx "" "uuq:" "examine or manipulate the uucp queue." "" uuq(1C)
.xx "" "ex:" "Excelan 10 Mb/s Ethernet interface." "" ex(4)
.xx "" "execl, execv, execle, execlp, execvp," "exec, execve, exect, environ: execute a file." "" execl(3)
.xx "" "/while, \fB:\fP, \fB.\fP, break, continue, cd, eval," "exec, exit, export, login, read, readonly, set,/" "" sh(1)
.xx "" "" "exec: overlay shell with specified command." "" csh(1)
.xx "exect, environ: execute a file." "" "execl, execv, execle, execlp, execvp, exec, execve," "" execl(3)
.xx "environ: execute a file." "execl, execv," "execle, execlp, execvp, exec, execve, exect," "" execl(3)
.xx "execute a file." "execl, execv, execle," "execlp, execvp, exec, execve, exect, environ:" "" execl(3)
.xx "" "execl, execv, execle, execlp, execvp, exec, execve," "exect, environ: execute a file." "" execl(3)
.xx "" "execlp, execvp, exec, execve, exect, environ:" "execute a file." "execl, execv, execle," execl(3)
.xx "" "execve:" "execute a file." "" execve(2)
.xx "" "alarm:" "execute a subroutine after a specified time." "" alarm(3F)
.xx "" "system:" "execute a UNIX command." "" system(3F)
.xx "" "repeat:" "execute command repeatedly." "" csh(1)
.xx "" "at:" "execute commands at a later time." "" at(1)
.xx "" "lastcomm: show last commands" "executed in reverse order." "" lastcomm(1)
.xx "" "uux: unix to unix command" "execution." "" uux(1C)
.xx "" "acct:" "execution accounting file." "" acct(5)
.xx "" "uuxqt: UUCP" "execution file interpreter." "" uuxqt(8C)
.xx "" "sleep: suspend" "execution for an interval." "" sleep(1)
.xx "" "sleep: suspend" "execution for an interval." "" sleep(3F)
.xx "" "sleep: suspend" "execution for interval." "" sleep(3)
.xx "" "usleep: suspend" "execution for interval." "" usleep(3)
.xx "" "monitor, monstartup, moncontrol: prepare" "execution profile." "" monitor(3)
.xx "" "pxp: Pascal" "execution profiler." "" pxp(1)
.xx "" "rexecd: remote" "execution server." "" rexecd(8C)
.xx "" "etime, dtime: return elapsed" "execution time." "" etime(3F)
.xx "" "profil:" "execution time profile." "" profil(2)
.xx "" "pix: Pascal interpreter and" "executor." "" pix(1)
.xx "environ: execute a file." "execl," "execv, execle, execlp, execvp, exec, execve, exect," "" execl(3)
.xx "" "execl, execv, execle, execlp, execvp, exec," "execve, exect, environ: execute a file." "" execl(3)
.xx "" "" "execve: execute a file." "" execve(2)
.xx "file." "execl, execv, execle, execlp," "execvp, exec, execve, exect, environ: execute a" "" execl(3)
.xx "" "link: make a link to an" "existing file." "" link(3F)
.xx "" "tunefs: tune up an" "existing file system." "" tunefs(8)
.xx "" "/\fB:\fP, \fB.\fP, break, continue, cd, eval, exec," "exit, export, login, read, readonly, set, shift,/" "" sh(1)
.xx "" "breaksw:" "exit from switch." "" csh(1)
.xx "" "" "exit: leave shell." "" csh(1)
.xx "" "" "_exit: terminate a process." "" exit(2)
.xx "pending output." "" "exit: terminate a process after flushing any" "" exit(3)
.xx "" "" "exit: terminate process with status." "" exit(3F)
.xx "" "break:" "exit while/foreach loop." "" csh(1)
.xx "logarithm, power." "" "exp, expm1, log, log10, log1p, pow: exponential," "" exp(3M)
.xx "" "glob: filename" "expand argument list." "" csh(1)
.xx "" "compress, uncompress, zcat: compress and" "expand data." "" compress(1)
.xx "" "expand, unexpand:" "expand tabs to spaces, and vice versa." "" expand(1)
.xx "versa." "" "expand, unexpand: expand tabs to spaces, and vice" "" expand(1)
.xx "diction." "diction," "explain: print wordy sentences; thesaurus for" "" diction(1)
.xx "" "aardvark: yet another" "exploration game." "" aardvark(6)
.xx "" "adventure: an" "exploration game." "" adventure(6)
.xx "" "rogue:" "Exploring The Dungeons of Doom." "" rogue(6)
.xx "logarithm, power." "exp," "expm1, log, log10, log1p, pow: exponential," "" exp(3M)
.xx "" "frexp, ldexp, modf: split into mantissa and" "exponent." "" frexp(3)
.xx "" "drem, finite, logb, scalb: copysign, remainder," "exponent manipulations." "copysign," ieee(3M)
.xx "" "exp, expm1, log, log10, log1p, pow:" "exponential, logarithm, power." "" exp(3M)
.xx "" "/\fB.\fP, break, continue, cd, eval, exec, exit," "export, login, read, readonly, set, shift, times,/" "" sh(1)
.xx "" "" "expr: evaluate arguments as an expression." "" expr(1)
.xx "" "expr: evaluate arguments as an" "expression." "" expr(1)
.xx "" "re_comp, re_exec: regular" "expression handler." "" regex(3)
.xx "" "addbib: create or" "extend bibliographic database." "" addbib(1)
.xx "" "efl:" "Extended Fortran Language." "" efl(1)
.xx "strings." "xstr:" "extract strings from C programs to implement shared" "" xstr(1)
.xx "" "" "f77: Fortran 77 compiler." "" f77(1)
.xx "" "ioinit: change" "f77 I/O initialization." "" ioinit(3F)
.xx "libraries.." "plot: openpl et al.:" "f77 library interface to \fIplot\fR (3X)" "" plot(3F)
.xx "" "tclose, tread, twrite, trewin, tskipf, tstate:" "f77 tape I/O." "topen," topen(3F)
.xx "ceiling, and round-to-nearest functions." "" "fabs, floor, ceil, rint: absolute value, floor," "" floor(3M)
.xx "" "networking: introduction to networking" "facilities." "" intro(4N)
.xx "" "signal: simplified software signal" "facilities." "" signal(3C)
.xx "" "sigvec: software signal" "facilities." "" sigvec(2)
.xx "" "malloc, free," "falloc: memory allocator." "" malloc(3F)
.xx "" "true," "false: provide truth values." "" true(1)
.xx "" "" "false, true: provide truth values." "" false(1)
.xx "" "inet: Internet protocol" "family." "" inet(4F)
.xx "" "ns: Xerox Network Systems(tm) protocol" "family." "" ns(4F)
.xx "checking the disks." "" "fastboot, fasthalt: reboot/halt the system without" "" fastboot(8)
.xx "the disks." "fastboot," "fasthalt: reboot/halt the system without checking" "" fastboot(8)
.xx "" "abort: generate a" "fault." "" abort(3)
.xx "" "trpfpe, fpecnt: trap and repair floating point" "faults." "" trpfpe(3F)
.xx "export, login,/" "sh, for, case, if, while, \fB:\fP," "\fB.\fP, break, continue, cd, eval, exec, exit," "" sh(1)
.xx "exit, export, login,/" "sh, for, case, if, while," "\fB:\fP, \fB.\fP, break, continue, cd, eval, exec," "" sh(1)
.xx "" "" "fclose, fflush: close or flush a stream." "" fclose(3S)
.xx "" "" "fcntl: file control." "" fcntl(2)
.xx "" "ecvt," "fcvt, gcvt: output conversion." "" ecvt(3)
.xx "" "" "fdate: return date and time in an ASCII string." "" fdate(3F)
.xx "" "fopen, freopen," "fdopen: open a stream." "" fopen(3S)
.xx "" "ferror," "feof, clearerr, fileno: stream status inquiries." "" ferror(3S)
.xx "inquiries." "" "ferror, feof, clearerr, fileno: stream status" "" ferror(3S)
.xx "subroutines." "dbminit," "fetch, store, delete, firstkey, nextkey: data base" "" dbm(3X)
.xx "" "head: give first" "few lines." "" head(1)
.xx "" "fclose," "fflush: close or flush a stream." "" fclose(3S)
.xx "extreme values." "flmin, flmax," "ffrac, dflmin, dflmax, dffrac, inmax: return" "" flmin(3F)
.xx "" "bcopy, bcmp, bzero," "ffs: bit and byte string operations." "" bstring(3)
.xx "" "" "fg: bring job into foreground." "" csh(1)
.xx "" "getc," "fgetc: get a character from a logical unit." "" getc(3F)
.xx "" "getc, getchar," "fgetc, getw: get character or word from stream." "" getc(3S)
.xx "" "gets," "fgets: get a string from a stream." "" gets(3S)
.xx "" "grep, egrep," "fgrep: search a file for a pattern." "" grep(1)
.xx "" "locate a program file including aliases and paths" "(\fIcsh\fR only)." "which:" which(1)
.xx "" "robots:" "fight off villainous robots." "" robots(6)
.xx "" "access: determine accessibility of" "file." "" access(2)
.xx "" "access: determine accessability of a" "file." "" access(3F)
.xx "" "acct: execution accounting" "file." "" acct(5)
.xx "" "chmod: change mode of" "file." "" chmod(2)
.xx "" "chmod: change mode of a" "file." "" chmod(3F)
.xx "" "chown: change owner and group of a" "file." "" chown(2)
.xx "" "colrm: remove columns from a" "file." "" colrm(1)
.xx "" "core: format of memory image" "file." "" core(5)
.xx "" "creat: create a new" "file." "" creat(2)
.xx "" "source: read commands from" "file." "" csh(1)
.xx "" "ctags: create a tags" "file." "" ctags(1)
.xx "" "dd: convert and copy a" "file." "" dd(1)
.xx "" "disktab: disk description" "file." "" disktab(5)
.xx "" "execvp, exec, execve, exect, environ: execute a" "file." "execl, execv, execle, execlp," execl(3)
.xx "" "execve: execute a" "file." "" execve(2)
.xx "" "flock: apply or remove an advisory lock on an open" "file." "" flock(2)
.xx "" "fpr: print Fortran" "file." "" fpr(1)
.xx "" "group: group" "file." "" group(5)
.xx "" "L.aliases: UUCP hostname alias" "file." "" L.aliases(5)
.xx "" "L.cmds: UUCP remote command permissions" "file." "" L.cmds(5)
.xx "" "L-devices: UUCP device description" "file." "" L-devices(5)
.xx "" "L-dialcodes: UUCP phone number index" "file." "" L-dialcodes(5)
.xx "" "link: make a hard link to a" "file." "" link(2)
.xx "" "link: make a link to an existing" "file." "" link(3F)
.xx "" "L.sys: UUCP remote host description" "file." "" L.sys(5)
.xx "" "mkdir: make a directory" "file." "" mkdir(2)
.xx "" "mknod: make a special" "file." "" mknod(2)
.xx "" "mknod: build special" "file." "" mknod(8)
.xx "" "rebuild the data base for the mail aliases" "file." "newaliases:" newaliases(1)
.xx "" "open a file for reading or writing, or create a new" "file." "open:" open(2)
.xx "" "passwd: password" "file." "" passwd(5)
.xx "" "pr: print" "file." "" pr(1)
.xx "" "remote: remote host description" "file." "" remote(5)
.xx "" "rename: change the name of a" "file." "" rename(2)
.xx "" "rename: rename a" "file." "" rename(3F)
.xx "" "resolver configuration" "file." "" resolver(5)
.xx "" "rev: reverse lines of a" "file." "" rev(1)
.xx "" "rmdir: remove a directory" "file." "" rmdir(2)
.xx "" "size: size of an object" "file." "" size(1)
.xx "" "the printable strings in a object, or other binary," "file." "strings: find" strings(1)
.xx "" "sum: sum and count blocks in a" "file." "" sum(1)
.xx "" "symlink: make symbolic link to a" "file." "" symlink(2)
.xx "" "tail: deliver the last part of a" "file." "" tail(1)
.xx "" "touch: update date last modified of a" "file." "" touch(1)
.xx "" "uniq: report repeated lines in a" "file." "" uniq(1)
.xx "" "USERFILE: UUCP pathname permissions" "file." "" USERFILE(5)
.xx "" "uuencode: format of an encoded uuencode" "file." "" uuencode(5)
.xx "" "vipw: edit the password" "file." "" vipw(8)
.xx "" "versions of object modules were used to construct a" "file." "what: show what" what(1)
.xx "" "diff: differential" "file and directory comparator." "" diff(1)
.xx "" "bugfiler:" "file bug reports in folders automatically." "" bugfiler(8)
.xx "" "mkstr: create an error message" "file by massaging C source." "" mkstr(1)
.xx "" "diff3: 3-way differential" "file comparison." "" diff3(1)
.xx "" "fcntl:" "file control." "" fcntl(2)
.xx "" "rcp: remote" "file copy." "" rcp(1C)
.xx "" "umask: change or display" "file creation mask." "" csh(1)
.xx "" "umask: set" "file creation mode mask." "" umask(2)
.xx "" "" "file: determine file type." "" file(1)
.xx "" "rdist: remote" "file distribution program." "" rdist(1)
.xx "" "setfsent, endfsent: get file system descriptor" "file entry." "/getfsspec, getfsfile, getfstype," getfsent(3)
.xx "" "getgrgid, getgrnam, setgrent, endgrent: get group" "file entry." "getgrent," getgrent(3)
.xx "" "setpwent, endpwent, setpwfile: get password" "file entry." "getpwent, getpwuid, getpwnam," getpwent(3)
.xx "" "getttynam, setttyent, endttyent: get ttys" "file entry." "getttyent," getttyent(3)
.xx "" "grep, egrep, fgrep: search a" "file for a pattern." "" grep(1)
.xx "" "open: open a" "file for reading or writing, or create a new file." "" open(2)
.xx "" "aliases: aliases" "file for sendmail." "" aliases(5)
.xx "" "uuencode, uudecode: encode/decode a binary" "file for transmission via mail." "" uuencode(1C)
.xx "" "ar: archive (library)" "file format." "" ar(5)
.xx "" "tar: tape archive" "file format." "" tar(5)
.xx "" "which: locate a program" "file including aliases and paths (\fIcsh\fR only)." "" which(1)
.xx "" "chfn, chsh, passwd: change password" "file information." "" chfn(1)
.xx "" "chfn, chsh, passwd: change password" "file information." "" chsh(1)
.xx "" "chfn, chsh, passwd: change password" "file information." "" passwd(1)
.xx "" "uuxqt: UUCP execution" "file interpreter." "" uuxqt(8C)
.xx "" "fsplit: split a multi-routine Fortran" "file into individual files." "" fsplit(1)
.xx "" "split: split a" "file into pieces." "" split(1)
.xx "" "pmerge: pascal" "file merger." "" pmerge(1)
.xx "" "mktemp: make a unique" "file name." "" mktemp(3)
.xx "" "fseek, ftell: reposition a" "file on a logical unit." "" fseek(3F)
.xx "" "more, page:" "file perusal filter for crt viewing." "" more(1)
.xx "" "stat, lstat, fstat: get" "file status." "" stat(2)
.xx "" "stat, lstat, fstat: get" "file status." "" stat(3F)
.xx "" "mkfs: construct a" "file system." "" mkfs(8)
.xx "" "mkproto: construct a prototype" "file system." "" mkproto(8)
.xx "" "mount, umount: mount or remove" "file system." "" mount(2)
.xx "" "mount, umount: mount and dismount" "file system." "" mount(8)
.xx "" "newfs: construct a new" "file system." "" newfs(8)
.xx "" "repquota: summarize quotas for a" "file system." "" repquota(8)
.xx "" "setquota: enable/disable quotas on a" "file system." "" setquota(2)
.xx "" "tunefs: tune up an existing" "file system." "" tunefs(8)
.xx "repair." "fsck:" "file system consistency check and interactive" "" fsck(8)
.xx "" "getfsfile, getfstype, setfsent, endfsent: get" "file system descriptor file entry." "/getfsspec," getfsent(3)
.xx "" "dcheck:" "file system directory consistency check." "" dcheck(8)
.xx "" "dump: incremental" "file system dump." "" dump(8)
.xx "" "rdump:" "file system dump across the network." "" rdump(8C)
.xx "" "rrestore: restore a" "file system dump across the network." "" rrestore(8C)
.xx "" "hier:" "file system hierarchy." "" hier(7)
.xx "" "dumpfs: dump" "file system information." "" dumpfs(8)
.xx "" "quot: summarize" "file system ownership." "" quot(8)
.xx "" "quotacheck:" "file system quota consistency checker." "" quotacheck(8)
.xx "" "quotaon, quotaoff: turn" "file system quotas on and off." "" quotaon(8)
.xx "" "restore: incremental" "file system restore." "" restore(8)
.xx "" "icheck:" "file system storage consistency check." "" icheck(8)
.xx "" "mtab: mounted" "file system table." "" mtab(5)
.xx "" "fs, inode: format of" "file system volume." "" fs(5)
.xx "" "utime: set" "file times." "" utime(3C)
.xx "" "utimes: set" "file times." "" utimes(2)
.xx "" "uusend: send a" "file to a remote host." "" uusend(1C)
.xx "" "truncate: truncate a" "file to a specified length." "" truncate(2)
.xx "" "patch: a program for applying a diff" "file to an original." "" patch(1)
.xx "" "ftp: ARPANET" "file transfer program." "" ftp(1C)
.xx "" "tftp: trivial" "file transfer program." "" tftp(1C)
.xx "" "ftpd: DARPA Internet" "File Transfer Protocol server." "" ftpd(8C)
.xx "" "tftpd: DARPA Trivial" "File Transfer Protocol server." "" tftpd(8C)
.xx "" "file: determine" "file type." "" file(1)
.xx "" "basename: strip" "filename affixes." "" basename(1)
.xx "" "glob:" "filename expand argument list." "" csh(1)
.xx "" "ferror, feof, clearerr," "fileno: stream status inquiries." "" ferror(3S)
.xx "" "checknr: check nroff/troff" "files." "" checknr(1)
.xx "" "cmp: compare two" "files." "" cmp(1)
.xx "" "comm: select or reject lines common to two sorted" "files." "" comm(1)
.xx "" "config: build system configuration" "files." "" config(8)
.xx "" "find: find" "files." "" find(1)
.xx "" "split a multi-routine Fortran file into individual" "files." "fsplit:" fsplit(1)
.xx "" "makedev: make system special" "files." "" makedev(8)
.xx "" "mv: move or rename" "files." "" mv(1)
.xx "" "rmdir, rm: remove (unlink) directories or" "files." "" rmdir(1)
.xx "" "sort: sort or merge" "files." "" sort(1)
.xx "" "uulog: display UUCP log" "files." "" uulog(1C)
.xx "" "intro: introduction to special" "files and hardware support." "" intro(4)
.xx "" "catman: create the cat" "files for the manual." "" catman(8)
.xx "" "fsync: synchronize a" "file's in-core state with that on disk." "" fsync(2)
.xx "" "rm, rmdir: remove (unlink)" "files or directories." "" rm(1)
.xx "" "uucico, uucpd: transfer" "files queued by uucp or uux." "" uucico(8C)
.xx "" "badsect: create" "files to contain bad sectors." "" badsect(8)
.xx "" "fstab: static information about the" "filesystems." "" fstab(5)
.xx "" "more, page: file perusal" "filter for crt viewing." "" more(1)
.xx "" "colcrt:" "filter nroff output for CRT previewing." "" colcrt(1)
.xx "" "col:" "filter reverse line feeds." "" col(1)
.xx "" "plot: graphics" "filters." "" plot(1G)
.xx "" "refer:" "find and insert literature references in documents." "" refer(1)
.xx "" "find:" "find files." "" find(1)
.xx "" "" "find: find files." "" find(1)
.xx "" "look:" "find lines in a sorted list." "" look(1)
.xx "manual." "man:" "find manual information by keywords; print out the" "" man(1)
.xx "" "ttyname, isatty, ttyslot:" "find name of a terminal." "" ttyname(3)
.xx "" "ttynam, isatty:" "find name of a terminal port." "" ttynam(3F)
.xx "" "lorder:" "find ordering relation for an object library." "" lorder(1)
.xx "" "lookbib: build inverted index for a bibliography," "find references in a bibliography." "indxbib," lookbib(1)
.xx "" "spell, spellin, spellout:" "find spelling errors." "" spell(1)
.xx "binary, file." "strings:" "find the printable strings in a object, or other" "" strings(1)
.xx "" "" "finger: user information lookup program." "" finger(1)
.xx "" "" "fingerd: remote user information server." "" fingerd(8C)
.xx "manipulations." "copysign, drem," "finite, logb, scalb: copysign, remainder, exponent" "" ieee(3M)
.xx "" "fold: fold long lines for" "finite width output device." "" fold(1)
.xx "" "plot: openpl et al.: f77 library interface to" "\fIplot\fR (3X) libraries.." "" plot(3F)
.xx "" "head: give" "first few lines." "" head(1)
.xx "" "dbminit, fetch, store, delete," "firstkey, nextkey: data base subroutines." "" dbm(3X)
.xx "" "fish: play ``Go" "Fish''." "" fish(6)
.xx "" "" "fish: play ``Go Fish''." "" fish(6)
.xx "" "nice, nohup: run a command at low priority" "(\fIsh\fR only)." "" nice(1)
.xx "" "" "fl: console floppy interface." "" fl(4)
.xx "" "arff," "flcopy: archiver and copier for floppy." "" arff(8V)
.xx "extreme values." "flmin," "flmax, ffrac, dflmin, dflmax, dffrac, inmax: return" "" flmin(3F)
.xx "return extreme values." "" "flmin, flmax, ffrac, dflmin, dflmax, dffrac, inmax:" "" flmin(3F)
.xx "" "trpfpe, fpecnt: trap and repair" "floating point faults." "" trpfpe(3F)
.xx "" "trapov: trap and repair" "floating point overflow." "" trapov(3F)
.xx "" "infnan: signals invalid" "floating-point operations on a VAX (temporary)." "" infnan(3M)
.xx "file." "" "flock: apply or remove an advisory lock on an open" "" flock(2)
.xx "and round-to-nearest functions." "fabs," "floor, ceil, rint: absolute value, floor, ceiling," "" floor(3M)
.xx "" "fabs, floor, ceil, rint: absolute value," "floor, ceiling, and round-to-nearest functions." "" floor(3M)
.xx "" "arff, flcopy: archiver and copier for" "floppy." "" arff(8V)
.xx "" "rx: DEC RX02" "floppy disk interface." "" rx(4)
.xx "" "rxformat: format" "floppy disks." "" rxformat(8V)
.xx "" "fl: console" "floppy interface." "" fl(4)
.xx "" "fclose, fflush: close or" "flush a stream." "" fclose(3S)
.xx "" "" "flush: flush output to a logical unit." "" flush(3F)
.xx "" "flush:" "flush output to a logical unit." "" flush(3F)
.xx "" "exit: terminate a process after" "flushing any pending output." "" exit(3)
.xx "" "/gcd, invert, rpow, msqrt, mcmp, move, min, omin," "fmin, m_in, mout, omout, fmout, m_out, sdiv, itom:/" "" mp(3X)
.xx "" "/mcmp, move, min, omin, fmin, m_in, mout, omout," "fmout, m_out, sdiv, itom: multiple precision/" "" mp(3X)
.xx "" "" "fmt: simple text formatter." "" fmt(1)
.xx "device." "" "fold: fold long lines for finite width output" "" fold(1)
.xx "" "fold:" "fold long lines for finite width output device." "" fold(1)
.xx "" "bugfiler: file bug reports in" "folders automatically." "" bugfiler(8)
.xx "" "vwidth: make troff width table for a" "font." "" vwidth(1)
.xx "" "vfont:" "font formats for the Benson-Varian or Versatec." "" vfont(5)
.xx "" "" "fopen, freopen, fdopen: open a stream." "" fopen(3S)
.xx "" "" "foreach: loop over list of names." "" csh(1)
.xx "" "fg: bring job into" "foreground." "" csh(1)
.xx "" "" "fork: create a copy of this process." "" fork(3F)
.xx "" "" "fork: create a new process." "" fork(2)
.xx "" "idate, itime: return date or time in numerical" "form." "" idate(3F)
.xx "" "dmesg: collect system diagnostic messages to" "form error log." "" dmesg(8)
.xx "" "ar: archive (library) file" "format." "" ar(5)
.xx "" "dump, dumpdates: incremental dump" "format." "" dump(5)
.xx "" "tar: tape archive file" "format." "" tar(5)
.xx "" "indent: indent and" "format C program source." "" indent(1)
.xx "" "format: how to" "format disk packs." "" format(8V)
.xx "" "rxformat:" "format floppy disks." "" rxformat(8V)
.xx "" "htable: convert NIC standard" "format host tables." "" htable(8)
.xx "" "gettable: get NIC" "format host tables from a host." "" gettable(8C)
.xx "" "" "format: how to format disk packs." "" format(8V)
.xx "vtroff, or troff." "vlp:" "Format Lisp programs to be printed with nroff," "" vlp(1)
.xx "" "uuencode:" "format of an encoded uuencode file." "" uuencode(5)
.xx "" "dir:" "format of directories." "" dir(5)
.xx "" "fs, inode:" "format of file system volume." "" fs(5)
.xx "" "core:" "format of memory image file." "" core(5)
.xx "" "tbl:" "format tables for nroff or troff." "" tbl(1)
.xx "" "tp: DEC/mag tape" "formats." "" tp(5)
.xx "" "vfont: font" "formats for the Benson-Varian or Versatec." "" vfont(5)
.xx "" "scanf, fscanf, sscanf:" "formatted input conversion." "" scanf(3S)
.xx "" "printf, fprintf, sprintf:" "formatted output conversion." "" printf(3S)
.xx "" "fmt: simple text" "formatter." "" fmt(1)
.xx "" "bib, listrefs: bibliographic" "formatter; list bibliographic reference items." "" bib(1)
.xx "" "nroff: text" "formatting." "" nroff(1)
.xx "" "troff, nroff: text" "formatting and typesetting." "" troff(1)
.xx "" "ms: text" "formatting macros." "" ms(7)
.xx "" "me: macros for" "formatting papers." "" me(7)
.xx "" "f77:" "Fortran 77 compiler." "" f77(1)
.xx "" "ratfor: rational" "Fortran dialect." "" ratfor(1)
.xx "" "fpr: print" "Fortran file." "" fpr(1)
.xx "" "fsplit: split a multi-routine" "Fortran file into individual files." "" fsplit(1)
.xx "" "efl: Extended" "Fortran Language." "" efl(1)
.xx "" "intro: introduction to" "FORTRAN library functions." "" intro(3F)
.xx "" "putc, fputc: write a character to a" "fortran logical unit." "" putc(3F)
.xx "" "struct: structure" "Fortran programs." "" struct(1)
.xx "adage." "" "fortune: print a random, hopefully interesting," "" fortune(6)
.xx "login,/" "sh, for, case, if, while, \fB:\fP, \fB." "\fP, break, continue, cd, eval, exec, exit, export," "" sh(1)
.xx "exit, export,/" "sh, for, case, if, while, \fB:" "\fP, \fB.\fP, break, continue, cd, eval, exec," "" sh(1)
.xx "compiler/interpreter." "" "fp: Functional Programming language" "" fp(1)
.xx "" "trpfpe," "fpecnt: trap and repair floating point faults." "" trpfpe(3F)
.xx "" "" "fpr: print Fortran file." "" fpr(1)
.xx "" "printf," "fprintf, sprintf: formatted output conversion." "" printf(3S)
.xx "" "putc, putchar," "fputc, putw: put character or word on a stream." "" putc(3S)
.xx "" "putc," "fputc: write a character to a fortran logical unit." "" putc(3F)
.xx "" "puts," "fputs: put a string on a stream." "" puts(3S)
.xx "" "ik: Ikonas" "frame buffer, graphics device interface." "" ik(4)
.xx "" "liszt: compile a" "Franz Lisp program." "" liszt(1)
.xx "" "" "fread, fwrite: buffered binary input/output." "" fread(3S)
.xx "" "df: disk" "free." "" df(1)
.xx "" "malloc," "free, falloc: memory allocator." "" malloc(3F)
.xx "" "malloc," "free, realloc, calloc, alloca: memory allocator." "" malloc(3)
.xx "" "fopen," "freopen, fdopen: open a stream." "" fopen(3S)
.xx "exponent." "" "frexp, ldexp, modf: split into mantissa and" "" frexp(3)
.xx "" "from: who is my mail" "from?." "" from(1)
.xx "" "sccs:" "front end for the SCCS subsystem." "" sccs(1)
.xx "" "" "fs, inode: format of file system volume." "" fs(5)
.xx "" "scanf," "fscanf, sscanf: formatted input conversion." "" scanf(3S)
.xx "" "mklost+found: make a lost+found directory for" "fsck." "" mklost+found(8)
.xx "repair." "" "fsck: file system consistency check and interactive" "" fsck(8)
.xx "" "" "fseek, ftell: reposition a file on a logical unit." "" fseek(3F)
.xx "" "" "fseek, ftell, rewind: reposition a stream." "" fseek(3S)
.xx "individual files." "" "fsplit: split a multi-routine Fortran file into" "" fsplit(1)
.xx "" "" "fstab: static information about the filesystems." "" fstab(5)
.xx "" "stat, lstat," "fstat: get file status." "" stat(2)
.xx "" "stat, lstat," "fstat: get file status." "" stat(3F)
.xx "on disk." "" "fsync: synchronize a file's in-core state with that" "" fsync(2)
.xx "" "fseek," "ftell: reposition a file on a logical unit." "" fseek(3F)
.xx "" "fseek," "ftell, rewind: reposition a stream." "" fseek(3S)
.xx "" "time," "ftime: get date and time." "" time(3C)
.xx "" "" "ftp: ARPANET file transfer program." "" ftp(1C)
.xx "" "" "ftpd: DARPA Internet File Transfer Protocol server." "" ftpd(8C)
.xx "" "shutdown: shut down part of a" "full-duplex connection." "" shutdown(2)
.xx "" "tn3270:" "full-screen remote login to IBM VM/CMS." "" tn3270(1)
.xx "" "lgamma: log gamma" "function." "" lgamma(3M)
.xx "compiler/interpreter." "fp:" "Functional Programming language" "" fp(1)
.xx "" "asinh, acosh, atanh: inverse hyperbolic" "functions." "" asinh(3M)
.xx "" "bit: and, or, xor, not, rshift, lshift bitwise" "functions." "" bit(3F)
.xx "" "erf, erfc: error" "functions." "" erf(3M)
.xx "" "value, floor, ceiling, and round-to-nearest" "functions." "fabs, floor, ceil, rint: absolute" floor(3M)
.xx "" "intro: introduction to C library" "functions." "" intro(3)
.xx "" "intro: introduction to FORTRAN library" "functions." "" intro(3F)
.xx "" "j0, j1, jn, y0, y1, yn: bessel" "functions." "" j0(3M)
.xx "" "math: introduction to mathematical library" "functions." "" math(3M)
.xx "" "sinh, cosh, tanh: hyperbolic" "functions." "" sinh(3M)
.xx "" "cos, tan, asin, acos, atan, atan2: trigonometric" "functions and their inverses." "sin," sin(3M)
.xx "" "bessel" "functions: of two kinds for integer orders." "" bessel(3F)
.xx "" "curses: screen" "functions with ``optimal'' cursor motion." "" curses(3X)
.xx "" "fread," "fwrite: buffered binary input/output." "" fread(3S)
.xx "" "aardvark: yet another exploration" "game." "" aardvark(6)
.xx "" "adventure: an exploration" "game." "" adventure(6)
.xx "" "backgammon: the" "game." "" backgammon(6)
.xx "" "battlestar: a tropical adventure" "game." "" battlestar(6)
.xx "" "hunt: a multi-player multi-terminal" "game." "" hunt(6)
.xx "" "monop: Monopoly" "game." "" monop(6)
.xx "" "snake, snscore: display chase" "game." "" snake(6)
.xx "" "trek: trekkie" "game." "" trek(6)
.xx "" "worm: Play the growing worm" "game." "" worm(6)
.xx "" "canfield, cfscores: the solitaire card" "game canfield." "" canfield(6)
.xx "" "cribbage: the card" "game cribbage." "" cribbage(6)
.xx "" "hangman: Computer version of the" "game hangman." "" hangman(6)
.xx "" "boggle: play the" "game of boggle." "" boggle(6)
.xx "" "chess: the" "game of chess." "" chess(6)
.xx "" "zork: the" "game of dungeon." "" zork(6)
.xx "" "wump: the" "game of hunt-the-wumpus." "" wump(6)
.xx "" "lgamma: log" "gamma function." "" lgamma(3M)
.xx "fmin, m_in, mout,/" "madd, msub, mult, mdiv, pow," "gcd, invert, rpow, msqrt, mcmp, move, min, omin," "" mp(3X)
.xx "" "" "gcore: get core images of running processes." "" gcore(1)
.xx "" "ecvt, fcvt," "gcvt: output conversion." "" ecvt(3)
.xx "buffers." "kgmon:" "generate a dump of the operating system's profile" "" kgmon(8)
.xx "" "abort:" "generate a fault." "" abort(3)
.xx "" "makekey:" "generate encryption key." "" makekey(8)
.xx "" "mkhosts:" "generate hashed host table." "" mkhosts(8)
.xx "" "mkpasswd:" "generate hashed password table." "" mkpasswd(8)
.xx "" "lptest:" "generate lineprinter ripple pattern." "" lptest(1)
.xx "" "ncheck:" "generate names from i-numbers." "" ncheck(8)
.xx "" "rand, srand: random number" "generator." "" rand(3C)
.xx "" "random, drandm, irandm: better random number" "generator." "" random(3F)
.xx "" "lex:" "generator of lexical analysis programs." "" lex(1)
.xx "" "/srandom, initstate, setstate: better random number" "generator; routines for changing generators." "" random(3)
.xx "" "random number generator; routines for changing" "generators." "/srandom, initstate, setstate: better" random(3)
.xx "" "perror," "gerror, ierrno: get system error messages." "" perror(3F)
.xx "" "" "getarg, iargc: return command line arguments." "" getarg(3F)
.xx "" "" "getc, fgetc: get a character from a logical unit." "" getc(3F)
.xx "from stream." "" "getc, getchar, fgetc, getw: get character or word" "" getc(3S)
.xx "stream." "getc," "getchar, fgetc, getw: get character or word from" "" getc(3S)
.xx "" "" "getcwd: get pathname of current working directory." "" getcwd(3F)
.xx "" "" "getdiskbyname: get disk description by its name." "" getdisk(3)
.xx "" "" "getdtablesize: get descriptor table size." "" getdtablesize(2)
.xx "" "getgid," "getegid: get group identity." "" getgid(2)
.xx "" "" "getenv: get value of environment variables." "" getenv(3F)
.xx "" "" "getenv: value for environment name." "" getenv(3)
.xx "" "getuid," "geteuid: get user identity." "" getuid(2)
.xx "setfsent, endfsent: get file system descriptor/" "" "getfsent, getfsspec, getfsfile, getfstype," "" getfsent(3)
.xx "system descriptor file entry." "getfsent, getfsspec," "getfsfile, getfstype, setfsent, endfsent: get file" "" getfsent(3)
.xx "endfsent: get file system descriptor/" "getfsent," "getfsspec, getfsfile, getfstype, setfsent," "" getfsent(3)
.xx "descriptor file/" "getfsent, getfsspec, getfsfile," "getfstype, setfsent, endfsent: get file system" "" getfsent(3)
.xx "" "getuid," "getgid: get user or group ID of the caller." "" getuid(3F)
.xx "" "" "getgid, getegid: get group identity." "" getgid(2)
.xx "get group file entry." "" "getgrent, getgrgid, getgrnam, setgrent, endgrent:" "" getgrent(3)
.xx "file entry." "getgrent," "getgrgid, getgrnam, setgrent, endgrent: get group" "" getgrent(3)
.xx "" "getgrent, getgrgid," "getgrnam, setgrent, endgrent: get group file entry." "" getgrent(3)
.xx "" "" "getgroups: get group access list." "" getgroups(2)
.xx "get network host entry." "gethostbyname," "gethostbyaddr, gethostent, sethostent, endhostent:" "" gethostbyname(3N)
.xx "sethostent, endhostent: get network host entry." "" "gethostbyname, gethostbyaddr, gethostent," "" gethostbyname(3N)
.xx "host entry." "gethostbyname, gethostbyaddr," "gethostent, sethostent, endhostent: get network" "" gethostbyname(3N)
.xx "current host." "" "gethostid, sethostid: get/set unique identifier of" "" gethostid(2)
.xx "host." "" "gethostname, sethostname: get/set name of current" "" gethostname(2)
.xx "timer." "" "getitimer, setitimer: get/set value of interval" "" getitimer(2)
.xx "" "" "getlog: get user's login name." "" getlog(3F)
.xx "" "" "getlogin: get login name." "" getlogin(3)
.xx "get network entry." "getnetent," "getnetbyaddr, getnetbyname, setnetent, endnetent:" "" getnetent(3N)
.xx "entry." "getnetent, getnetbyaddr," "getnetbyname, setnetent, endnetent: get network" "" getnetent(3N)
.xx "endnetent: get network entry." "" "getnetent, getnetbyaddr, getnetbyname, setnetent," "" getnetent(3N)
.xx "" "" "getopt: get option letter from argv." "" getopt(3)
.xx "" "" "getpagesize: get system page size." "" getpagesize(2)
.xx "" "" "getpass: read a password." "" getpass(3)
.xx "" "" "getpeername: get name of connected peer." "" getpeername(2)
.xx "" "" "getpgrp: get process group." "" getpgrp(2)
.xx "" "" "getpid: get process id." "" getpid(3F)
.xx "" "" "getpid, getppid: get process identification." "" getpid(2)
.xx "" "getpid," "getppid: get process identification." "" getpid(2)
.xx "scheduling priority." "" "getpriority, setpriority: get/set program" "" getpriority(2)
.xx "protocol entry." "getprotoent, getprotobynumber," "getprotobyname, setprotoent, endprotoent: get" "" getprotoent(3N)
.xx "endprotoent: get protocol entry." "getprotoent," "getprotobynumber, getprotobyname, setprotoent," "" getprotoent(3N)
.xx "setprotoent, endprotoent: get protocol entry." "" "getprotoent, getprotobynumber, getprotobyname," "" getprotoent(3N)
.xx "" "" "getpw: get name from uid." "" getpw(3C)
.xx "setpwfile: get password file entry." "" "getpwent, getpwuid, getpwnam, setpwent, endpwent," "" getpwent(3)
.xx "password file entry." "getpwent, getpwuid," "getpwnam, setpwent, endpwent, setpwfile: get" "" getpwent(3)
.xx "get password file entry." "getpwent," "getpwuid, getpwnam, setpwent, endpwent, setpwfile:" "" getpwent(3)
.xx "resource consumption." "" "getrlimit, setrlimit: control maximum system" "" getrlimit(2)
.xx "utilization." "" "getrusage: get information about resource" "" getrusage(2)
.xx "" "" "gets, fgets: get a string from a stream." "" gets(3S)
.xx "entry." "getservent, getservbyport," "getservbyname, setservent, endservent: get service" "" getservent(3N)
.xx "endservent: get service entry." "getservent," "getservbyport, getservbyname, setservent," "" getservent(3N)
.xx "setservent, endservent: get service entry." "" "getservent, getservbyport, getservbyname," "" getservent(3N)
.xx "" "gettimeofday, settimeofday:" "get/set date and time." "" gettimeofday(2)
.xx "" "gethostname, sethostname:" "get/set name of current host." "" gethostname(2)
.xx "" "getpriority, setpriority:" "get/set program scheduling priority." "" getpriority(2)
.xx "" "gethostid, sethostid:" "get/set unique identifier of current host." "" gethostid(2)
.xx "" "getitimer, setitimer:" "get/set value of interval timer." "" getitimer(2)
.xx "" "" "getsockname: get socket name." "" getsockname(2)
.xx "sockets." "" "getsockopt, setsockopt: get and set options on" "" getsockopt(2)
.xx "" "" "gettable: get NIC format host tables from a host." "" gettable(8C)
.xx "" "" "gettimeofday, settimeofday: get/set date and time." "" gettimeofday(2)
.xx "ttys file entry." "" "getttyent, getttynam, setttyent, endttyent: get" "" getttyent(3)
.xx "entry." "getttyent," "getttynam, setttyent, endttyent: get ttys file" "" getttyent(3)
.xx "" "" "getty: set terminal mode." "" getty(8)
.xx "" "" "gettytab: terminal configuration data base." "" gettytab(5)
.xx "" "" "getuid, geteuid: get user identity." "" getuid(2)
.xx "" "" "getuid, getgid: get user or group ID of the caller." "" getuid(3F)
.xx "user shells." "" "getusershell, setusershell, endusershell: get legal" "" getusershell(3)
.xx "" "getc, getchar, fgetc," "getw: get character or word from stream." "" getc(3S)
.xx "" "" "getwd: get current working directory pathname." "" getwd(3)
.xx "" "head:" "give first few lines." "" head(1)
.xx "" "shutdown: close down the system at a" "given time." "" shutdown(8)
.xx "" "" "glob: filename expand argument list." "" csh(1)
.xx "ASCII." "ctime, localtime," "gmtime, asctime, timezone: convert date and time to" "" ctime(3)
.xx "" "time, ctime, ltime," "gmtime: return system time." "" time(3F)
.xx "" "fish: play" "``Go Fish''." "" fish(6)
.xx "" "setjmp, longjmp: non-local" "goto." "" setjmp(3)
.xx "" "" "goto: command transfer." "" csh(1)
.xx "" "" "gprof: display call graph profile data." "" gprof(1)
.xx "" "graph: draw a" "graph." "" graph(1G)
.xx "" "" "graph: draw a graph." "" graph(1G)
.xx "" "gprof: display call" "graph profile data." "" gprof(1)
.xx "" "ik: Ikonas frame buffer," "graphics device interface." "" ik(4)
.xx "" "ps: Evans and Sutherland Picture System 2" "graphics device interface." "" ps(4)
.xx "" "plot:" "graphics filters." "" plot(1G)
.xx "" "arc, move, cont, point, linemod, space, closepl:" "graphics interface." "/erase, label, line, circle," plot(3X)
.xx "" "plot:" "graphics interface." "" plot(5)
.xx "" "lib2648: subroutines for the HP 2648" "graphics terminal." "" lib2648(3X)
.xx "" "" "grep, egrep, fgrep: search a file for a pattern." "" grep(1)
.xx "" "vgrind:" "grind nice listings of programs." "" vgrind(1)
.xx "" "chgrp: change" "group." "" chgrp(1)
.xx "" "getpgrp: get process" "group." "" getpgrp(2)
.xx "" "killpg: send signal to a process" "group." "" killpg(2)
.xx "" "setpgrp: set process" "group." "" setpgrp(2)
.xx "" "getgroups: get" "group access list." "" getgroups(2)
.xx "" "initgroups: initialize" "group access list." "" initgroups(3)
.xx "" "setgroups: set" "group access list." "" setgroups(2)
.xx "" "group:" "group file." "" group(5)
.xx "" "getgrgid, getgrnam, setgrent, endgrent: get" "group file entry." "getgrent," getgrent(3)
.xx "" "" "group: group file." "" group(5)
.xx "" "setregid: set real and effective" "group ID." "" setregid(2)
.xx "" "setruid, setgid, setegid, setrgid: set user and" "group ID." "setuid, seteuid," setuid(3)
.xx "" "getuid, getgid: get user or" "group ID of the caller." "" getuid(3F)
.xx "" "getgid, getegid: get" "group identity." "" getgid(2)
.xx "" "groups: show" "group memberships." "" groups(1)
.xx "" "chown: change owner and" "group of a file." "" chown(2)
.xx "" "make: maintain program" "groups." "" make(1)
.xx "" "" "groups: show group memberships." "" groups(1)
.xx "" "worm: Play the" "growing worm game." "" worm(6)
.xx "" "stty," "gtty: set and get terminal state (defunct)." "" stty(3C)
.xx "" "stop:" "halt a job or process." "" csh(1)
.xx "" "reboot: reboot system or" "halt processor." "" reboot(2)
.xx "" "" "halt: stop the processor." "" halt(8)
.xx "" "rmail:" "handle remote mail received via uucp." "" rmail(1)
.xx "" "mh: Message" "Handler." "" mh(1)
.xx "" "re_comp, re_exec: regular expression" "handler." "" regex(3)
.xx "" "hangman: Computer version of the game" "hangman." "" hangman(6)
.xx "" "" "hangman: Computer version of the game hangman." "" hangman(6)
.xx "" "vhangup: virtually" "``hangup'' the current control terminal." "" vhangup(2)
.xx "" "nohup: run command immune to" "hangups." "" csh(1)
.xx "" "crash: what" "happens when the system crashes." "" crash(8V)
.xx "" "link: make a" "hard link to a file." "" link(2)
.xx "" "intro: introduction to special files and" "hardware support." "" intro(4)
.xx "" "rehash: recompute command" "hash table." "" csh(1)
.xx "" "unhash: discard command" "hash table." "" csh(1)
.xx "" "mkhosts: generate" "hashed host table." "" mkhosts(8)
.xx "" "mkpasswd: generate" "hashed password table." "" mkpasswd(8)
.xx "" "hashstat: print command" "hashing statistics." "" csh(1)
.xx "" "" "hashstat: print command hashing statistics." "" csh(1)
.xx "" "leave: remind you when you" "have to leave." "" leave(1)
.xx "" "" "hdh: ACC IF-11/HDH IMP interface." "" hdh(4)
.xx "" "od: octal, decimal," "hex, ascii dump." "" od(1)
.xx "" "" "hier: file system hierarchy." "" hier(7)
.xx "" "hier: file system" "hierarchy." "" hier(7)
.xx "" "history: print" "history event list." "" csh(1)
.xx "" "" "history: print history event list." "" csh(1)
.xx "" "" "hk: RK6-11/RK06 and RK07 moving head disk." "" hk(4)
.xx "" "fortune: print a random," "hopefully interesting, adage." "" fortune(6)
.xx "" "sethostid: get/set unique identifier of current" "host." "gethostid," gethostid(2)
.xx "" "gethostname, sethostname: get/set name of current" "host." "" gethostname(2)
.xx "" "gettable: get NIC format host tables from a" "host." "" gettable(8C)
.xx "" "hostnm: get name of current" "host." "" hostnm(3F)
.xx "" "uusend: send a file to a remote" "host." "" uusend(1C)
.xx "" "htonl, htons, ntohl, ntohs: convert values between" "host and network byte order." "" byteorder(3N)
.xx "" "L.sys: UUCP remote" "host description file." "" L.sys(5)
.xx "" "remote: remote" "host description file." "" remote(5)
.xx "" "gethostent, sethostent, endhostent: get network" "host entry." "gethostbyname, gethostbyaddr," gethostbyname(3N)
.xx "" "hosts:" "host name data base." "" hosts(5)
.xx "" "phones: remote" "host phone number data base." "" phones(5)
.xx "" "ruptime: show" "host status of local machines." "" ruptime(1C)
.xx "" "hostid: set or print identifier of current" "host system." "" hostid(1)
.xx "" "hostname: set or print name of current" "host system." "" hostname(1)
.xx "" "mkhosts: generate hashed" "host table." "" mkhosts(8)
.xx "" "htable: convert NIC standard format" "host tables." "" htable(8)
.xx "" "gettable: get NIC format" "host tables from a host." "" gettable(8C)
.xx "system." "" "hostid: set or print identifier of current host" "" hostid(1)
.xx "" "L.aliases: UUCP" "hostname alias file." "" L.aliases(5)
.xx "" "" "hostname: set or print name of current host system." "" hostname(1)
.xx "" "" "hostnm: get name of current host." "" hostnm(3F)
.xx "" "ping: send ICMP ECHO_REQUEST packets to network" "hosts." "" ping(8)
.xx "" "uuname: list names of UUCP" "hosts." "" uuname(1C)
.xx "" "" "hosts: host name data base." "" hosts(5)
.xx "" "uptime: show" "how long system has been up." "" uptime(1)
.xx "" "format:" "how to format disk packs." "" format(8V)
.xx "" "lib2648: subroutines for the" "HP 2648 graphics terminal." "" lib2648(3X)
.xx "" "" "hp: MASSBUS disk interface." "" hp(4)
.xx "interface." "" "ht: TM-03/TE-16,TU-45,TU-77 MASSBUS magtape" "" ht(4)
.xx "" "" "htable: convert NIC standard format host tables." "" htable(8)
.xx "host and network byte order." "" "htonl, htons, ntohl, ntohs: convert values between" "" byteorder(3N)
.xx "and network byte order." "htonl," "htons, ntohl, ntohs: convert values between host" "" byteorder(3N)
.xx "" "" "hunt: a multi-player multi-terminal game." "" hunt(6)
.xx "" "wump: the game of" "hunt-the-wumpus." "" wump(6)
.xx "" "" "hy: Network Systems Hyperchannel interface." "" hy(4)
.xx "" "asinh, acosh, atanh: inverse" "hyperbolic functions." "" asinh(3M)
.xx "" "sinh, cosh, tanh:" "hyperbolic functions." "" sinh(3M)
.xx "" "hy: Network Systems" "Hyperchannel interface." "" hy(4)
.xx "value." "" "hypot, cabs: Euclidean distance, complex absolute" "" hypot(3M)
.xx "" "vacation: return" "``I am on vacation'' indication." "" vacation(1)
.xx "" "getarg," "iargc: return command line arguments." "" getarg(3F)
.xx "" "mset: retrieve ASCII to" "IBM 3270 keyboard map." "" mset(1)
.xx "" "map3270: database for mapping ascii keystrokes into" "IBM 3270 keys." "" map3270(5)
.xx "" "tn3270: full-screen remote login to" "IBM VM/CMS." "" tn3270(1)
.xx "" "" "icheck: file system storage consistency check." "" icheck(8)
.xx "" "ping: send" "ICMP ECHO_REQUEST packets to network hosts." "" ping(8)
.xx "" "" "icmp: Internet Control Message Protocol." "" icmp(4P)
.xx "" "getpid: get process" "id." "" getpid(3F)
.xx "" "setregid: set real and effective group" "ID." "" setregid(2)
.xx "" "setgid, setegid, setrgid: set user and group" "ID." "setuid, seteuid, setruid," setuid(3)
.xx "" "whoami: print effective current user" "id." "" whoami(1)
.xx "" "getuid, getgid: get user or group" "ID of the caller." "" getuid(3F)
.xx "" "su: substitute user" "id temporarily." "" su(1)
.xx "form." "" "idate, itime: return date or time in numerical" "" idate(3F)
.xx "" "getpid, getppid: get process" "identification." "" getpid(2)
.xx "" "gethostid, sethostid: get/set unique" "identifier of current host." "" gethostid(2)
.xx "" "hostid: set or print" "identifier of current host system." "" hostid(1)
.xx "" "getgid, getegid: get group" "identity." "" getgid(2)
.xx "" "getuid, geteuid: get user" "identity." "" getuid(2)
.xx "" "" "idp: Xerox Internet Datagram Protocol." "" idp(4P)
.xx "" "setreuid: set real and effective user" "ID's." "" setreuid(2)
.xx "" "perror, gerror," "ierrno: get system error messages." "" perror(3F)
.xx "" "" "if: conditional statement." "" csh(1)
.xx "" "biff: be notified" "if mail arrives and who it is from." "" biff(1)
.xx "eval, exec, exit, export, login,/" "sh, for, case," "if, while, \fB:\fP, \fB.\fP, break, continue, cd," "" sh(1)
.xx "" "hdh: ACC" "IF-11/HDH IMP interface." "" hdh(4)
.xx "" "" "ifconfig: configure network interface parameters." "" ifconfig(8C)
.xx "" "unifdef: remove" "ifdef'ed lines." "" unifdef(1)
.xx "" "uu: TU58/DECtape" "II UNIBUS cassette interface." "" uu(4)
.xx "" "" "ik: Ikonas frame buffer, graphics device interface." "" ik(4)
.xx "" "ik:" "Ikonas frame buffer, graphics device interface." "" ik(4)
.xx "" "" "il: Interlan NI1010 10 Mb/s Ethernet interface." "" il(4)
.xx "" "core: format of memory" "image file." "" core(5)
.xx "" "gcore: get core" "images of running processes." "" gcore(1)
.xx "" "notify: request" "immediate notification." "" csh(1)
.xx "" "nohup: run command" "immune to hangups." "" csh(1)
.xx "" "" "imp: 1822 network interface." "" imp(4)
.xx "" "" "imp: IMP raw socket interface." "" imp(4P)
.xx "" "acc: ACC LH/DH" "IMP interface." "" acc(4)
.xx "" "css: DEC IMP-11A LH/DH" "IMP interface." "" css(4)
.xx "" "ddn: DDN Standard Mode X.25" "IMP interface." "" ddn(4)
.xx "" "hdh: ACC IF-11/HDH" "IMP interface." "" hdh(4)
.xx "" "implog:" "IMP log interpreter." "" implog(8C)
.xx "" "implogd:" "IMP logger process." "" implogd(8C)
.xx "" "imp:" "IMP raw socket interface." "" imp(4P)
.xx "" "css: DEC" "IMP-11A LH/DH IMP interface." "" css(4)
.xx "" "xstr: extract strings from C programs to" "implement shared strings." "" xstr(1)
.xx "" "" "implog: IMP log interpreter." "" implog(8C)
.xx "" "" "implogd: IMP logger process." "" implogd(8C)
.xx "" "which: locate a program file" "including aliases and paths (\fIcsh\fR only)." "" which(1)
.xx "" "fsync: synchronize a file's" "in-core state with that on disk." "" fsync(2)
.xx "" "dump, dumpdates:" "incremental dump format." "" dump(5)
.xx "" "dump:" "incremental file system dump." "" dump(8)
.xx "" "restore:" "incremental file system restore." "" restore(8)
.xx "" "indent:" "indent and format C program source." "" indent(1)
.xx "" "" "indent: indent and format C program source." "" indent(1)
.xx "" "tgetnum, tgetflag, tgetstr, tgoto, tputs: terminal" "independent operation routines." "tgetent," termcap(3X)
.xx "" "ptx: permuted" "index." "" ptx(1)
.xx "" "L-dialcodes: UUCP phone number" "index file." "" L-dialcodes(5)
.xx "bibliography." "indxbib, lookbib: build inverted" "index for a bibliography, find references in a" "" lookbib(1)
.xx "objects." "" "index, rindex, lnblnk, len: tell about character" "" index(3F)
.xx "" "strncat, strcmp, strncmp, strcpy, strncpy, strlen," "index, rindex: string operations." "strcat," string(3)
.xx "" "last:" "indicate last logins of users and teletypes." "" last(1)
.xx "" "vacation: return ``I am on vacation''" "indication." "" vacation(1)
.xx "" "syscall:" "indirect system call." "" syscall(2)
.xx "" "fsplit: split a multi-routine Fortran file into" "individual files." "" fsplit(1)
.xx "bibliography, find references in a bibliography." "" "indxbib, lookbib: build inverted index for a" "" lookbib(1)
.xx "" "" "inet: Internet protocol family." "" inet(4F)
.xx "inet_lnaof, inet_netof: Internet address/" "" "inet_addr, inet_network, inet_ntoa, inet_makeaddr," "" inet(3N)
.xx "" "" "inetd: internet ``super\-server''." "" inetd(8)
.xx "" "inet_addr, inet_network, inet_ntoa, inet_makeaddr," "inet_lnaof, inet_netof: Internet address/" "" inet(3N)
.xx "address/" "inet_addr, inet_network, inet_ntoa," "inet_makeaddr, inet_lnaof, inet_netof: Internet" "" inet(3N)
.xx "" "/inet_network, inet_ntoa, inet_makeaddr, inet_lnaof," "inet_netof: Internet address manipulation routines." "" inet(3N)
.xx "inet_netof: Internet address/" "inet_addr," "inet_network, inet_ntoa, inet_makeaddr, inet_lnaof," "" inet(3N)
.xx "Internet address/" "inet_addr, inet_network," "inet_ntoa, inet_makeaddr, inet_lnaof, inet_netof:" "" inet(3N)
.xx "on a VAX (temporary)." "" "infnan: signals invalid floating-point operations" "" infnan(3M)
.xx "" "bad144: read/write dec standard 144 bad sector" "information." "" bad144(8)
.xx "" "chfn, chsh, passwd: change password file" "information." "" chfn(1)
.xx "" "chfn, chsh, passwd: change password file" "information." "" chsh(1)
.xx "" "dbx: dbx symbol table" "information." "" dbx(5)
.xx "" "dumpfs: dump file system" "information." "" dumpfs(8)
.xx "" "pac: printer/plotter accounting" "information." "" pac(8)
.xx "" "chfn, chsh, passwd: change password file" "information." "" passwd(1)
.xx "" "getrusage: get" "information about resource utilization." "" getrusage(2)
.xx "" "vtimes: get" "information about resource utilization." "" vtimes(3C)
.xx "" "fstab: static" "information about the filesystems." "" fstab(5)
.xx "" "man: find manual" "information by keywords; print out the manual." "" man(1)
.xx "" "finger: user" "information lookup program." "" finger(1)
.xx "" "miscellaneous: miscellaneous useful" "information pages." "" intro(7)
.xx "" "XNSrouted: NS Routing" "Information Protocol daemon." "" XNSrouted(8C)
.xx "" "fingerd: remote user" "information server." "" fingerd(8C)
.xx "" "" "init: process control initialization." "" init(8)
.xx "" "" "initgroups: initialize group access list." "" initgroups(3)
.xx "" "init: process control" "initialization." "" init(8)
.xx "" "ioinit: change f77 I/O" "initialization." "" ioinit(3F)
.xx "" "tset: terminal dependent" "initialization." "" tset(1)
.xx "" "ttys: terminal" "initialization data." "" ttys(5)
.xx "" "initgroups:" "initialize group access list." "" initgroups(3)
.xx "" "connect:" "initiate a connection on a socket." "" connect(2)
.xx "" "popen, pclose:" "initiate I/O to/from a process." "" popen(3)
.xx "generator; routines for changing/" "random, srandom," "initstate, setstate: better random number" "" random(3)
.xx "" "flmin, flmax, ffrac, dflmin, dflmax, dffrac," "inmax: return extreme values." "" flmin(3F)
.xx "" "clri: clear" "i-node." "" clri(8)
.xx "" "fs," "inode: format of file system volume." "" fs(5)
.xx "" "read, readv: read" "input." "" read(2)
.xx "" "soelim: eliminate \&.so's from nroff" "input." "" soelim(1)
.xx "" "scanf, fscanf, sscanf: formatted" "input conversion." "" scanf(3S)
.xx "" "ungetc: push character back into" "input stream." "" ungetc(3S)
.xx "" "fread, fwrite: buffered binary" "input/output." "" fread(3S)
.xx "" "stdio: standard buffered" "input/output package." "" stdio(3S)
.xx "" "ferror, feof, clearerr, fileno: stream status" "inquiries." "" ferror(3S)
.xx "" "refer: find and" "insert literature references in documents." "" refer(1)
.xx "" "insque, remque:" "insert/remove element from a queue." "" insque(3)
.xx "" "" "insque, remque: insert/remove element from a queue." "" insque(3)
.xx "" "install:" "install binaries." "" install(1)
.xx "" "" "install: install binaries." "" install(1)
.xx "" "learn: computer aided" "instruction about UNIX." "" learn(1)
.xx "" "doctor:" "interact with a psychoanalyst." "" doctor(6)
.xx "" "jove: an" "interactive display-oriented text editor." "" jove(1)
.xx "" "fsck: file system consistency check and" "interactive repair." "" fsck(8)
.xx "" "fortune: print a random, hopefully" "interesting, adage." "" fortune(6)
.xx "" "acc: ACC LH/DH IMP" "interface." "" acc(4)
.xx "" "cons: VAX-11 console" "interface." "" cons(4)
.xx "" "crl: VAX 8600 console RL02" "interface." "" crl(4)
.xx "" "css: DEC IMP-11A LH/DH IMP" "interface." "" css(4)
.xx "" "ct: phototypesetter" "interface." "" ct(4)
.xx "" "ddn: DDN Standard Mode X.25 IMP" "interface." "" ddn(4)
.xx "" "de: DEC DEUNA 10 Mb/s Ethernet" "interface." "" de(4)
.xx "" "dn: DN-11 autocall unit" "interface." "" dn(4)
.xx "" "ec: 3Com 10 Mb/s Ethernet" "interface." "" ec(4)
.xx "" "en: Xerox 3 Mb/s Ethernet" "interface." "" en(4)
.xx "" "ex: Excelan 10 Mb/s Ethernet" "interface." "" ex(4)
.xx "" "fl: console floppy" "interface." "" fl(4)
.xx "" "hdh: ACC IF-11/HDH IMP" "interface." "" hdh(4)
.xx "" "hp: MASSBUS disk" "interface." "" hp(4)
.xx "" "ht: TM-03/TE-16,TU-45,TU-77 MASSBUS magtape" "interface." "" ht(4)
.xx "" "hy: Network Systems Hyperchannel" "interface." "" hy(4)
.xx "" "ik: Ikonas frame buffer, graphics device" "interface." "" ik(4)
.xx "" "il: Interlan NI1010 10 Mb/s Ethernet" "interface." "" il(4)
.xx "" "imp: 1822 network" "interface." "" imp(4)
.xx "" "imp: IMP raw socket" "interface." "" imp(4P)
.xx "" "ix: Interlan Np100 10 Mb/s Ethernet" "interface." "" ix(4)
.xx "" "lo: software loopback network" "interface." "" lo(4)
.xx "" "mt: TM78/TU-78 MASSBUS magtape" "interface." "" mt(4)
.xx "" "mtio: UNIX magtape" "interface." "" mtio(4)
.xx "" "np: Interlan Np100 10 Mb/s Ethernet" "interface." "" np(4)
.xx "" "pcl: DEC CSS PCL-11 B Network" "Interface." "" pcl(4)
.xx "" "cont, point, linemod, space, closepl: graphics" "interface." "/erase, label, line, circle, arc, move," plot(3X)
.xx "" "plot: graphics" "interface." "" plot(5)
.xx "" "and Sutherland Picture System 2 graphics device" "interface." "ps: Evans" ps(4)
.xx "" "qe: DEC DEQNA Q-bus 10 Mb/s Ethernet" "interface." "" qe(4)
.xx "" "rx: DEC RX02 floppy disk" "interface." "" rx(4)
.xx "" "tm: TM-11/TE-10 magtape" "interface." "" tm(4)
.xx "" "tmscp: DEC TMSCP magtape" "interface." "" tmscp(4)
.xx "" "ts: TS-11 magtape" "interface." "" ts(4)
.xx "" "tty: general terminal" "interface." "" tty(4)
.xx "" "tu: VAX-11/730 and VAX-11/750 TU58 console cassette" "interface." "" tu(4)
.xx "" "uda: UDA-50 disk controller" "interface." "" uda(4)
.xx "" "ut: UNIBUS TU45 tri-density tape drive" "interface." "" ut(4)
.xx "" "uu: TU58/DECtape II UNIBUS cassette" "interface." "" uu(4)
.xx "" "va: Benson-Varian" "interface." "" va(4)
.xx "" "vp: Versatec" "interface." "" vp(4)
.xx "" "nsip: software network" "interface encapsulating ns packets in ip packets.." "" nsip(4)
.xx "" "ifconfig: configure network" "interface parameters." "" ifconfig(8C)
.xx "" "plot: openpl et al.: f77 library" "interface to \fIplot\fR (3X) libraries.." "" plot(3F)
.xx "" "telnet: user" "interface to the TELNET protocol." "" telnet(1C)
.xx "" "slattach: attach serial lines as network" "interfaces." "" slattach(8C)
.xx "" "il:" "Interlan NI1010 10 Mb/s Ethernet interface." "" il(4)
.xx "" "ix:" "Interlan Np100 10 Mb/s Ethernet interface." "" ix(4)
.xx "" "np:" "Interlan Np100 10 Mb/s Ethernet interface." "" np(4)
.xx "" "swapon: add a swap device for" "interleaved paging/swapping." "" swapon(2)
.xx "" "sendmail: send mail over the" "internet." "" sendmail(8)
.xx "" "/inet_ntoa, inet_makeaddr, inet_lnaof, inet_netof:" "Internet address manipulation routines." "" inet(3N)
.xx "" "icmp:" "Internet Control Message Protocol." "" icmp(4P)
.xx "" "idp: Xerox" "Internet Datagram Protocol." "" idp(4P)
.xx "" "named:" "Internet domain name server." "" named(8)
.xx "" "ftpd: DARPA" "Internet File Transfer Protocol server." "" ftpd(8C)
.xx "" "ip:" "Internet Protocol." "" ip(4P)
.xx "" "inet:" "Internet protocol family." "" inet(4F)
.xx "" "inetd:" "internet ``super\-server''." "" inetd(8)
.xx "" "tcp:" "Internet Transmission Control Protocol." "" tcp(4P)
.xx "" "udp:" "Internet User Datagram Protocol." "" udp(4P)
.xx "" "whois: DARPA" "Internet user name directory service." "" whois(1)
.xx "" "spline:" "interpolate smooth curve." "" spline(1G)
.xx "" "implog: IMP log" "interpreter." "" implog(8C)
.xx "" "lisp: lisp" "interpreter." "" lisp(1)
.xx "" "px: Pascal" "interpreter." "" px(1)
.xx "" "uuxqt: UUCP execution file" "interpreter." "" uuxqt(8C)
.xx "" "pix: Pascal" "interpreter and executor." "" pix(1)
.xx "" "pi: Pascal" "interpreter code translator." "" pi(1)
.xx "" "csh: a shell (command" "interpreter) with C-like syntax." "" csh(1)
.xx "" "pipe: create an" "interprocess communication channel." "" pipe(2)
.xx "" "atomically release blocked signals and wait for" "interrupt." "sigpause:" sigpause(2)
.xx "" "siginterrupt: allow signals to" "interrupt system calls." "" siginterrupt(3)
.xx "" "onintr: process" "interrupts in command scripts." "" csh(1)
.xx "" "intro:" "introduction to C library functions." "" intro(3)
.xx "" "intro:" "introduction to commands." "" intro(1)
.xx "" "intro:" "introduction to FORTRAN library functions." "" intro(3F)
.xx "" "math:" "introduction to mathematical library functions." "" math(3M)
.xx "" "networking:" "introduction to networking facilities." "" intro(4N)
.xx "" "rcsintro:" "introduction to RCS commands." "" rcsintro(1)
.xx "" "intro:" "introduction to special files and hardware support." "" intro(4)
.xx "" "intro:" "introduction to system calls and error numbers." "" intro(2)
.xx "commands." "intro:" "introduction to system maintenance and operation" "" intro(8)
.xx "" "ncheck: generate names from" "i-numbers." "" ncheck(8)
.xx "(temporary)." "infnan: signals" "invalid floating-point operations on a VAX" "" infnan(3M)
.xx "" "asinh, acosh, atanh:" "inverse hyperbolic functions." "" asinh(3M)
.xx "" "atan, atan2: trigonometric functions and their" "inverses." "sin, cos, tan, asin, acos," sin(3M)
.xx "m_in, mout,/" "madd, msub, mult, mdiv, pow, gcd," "invert, rpow, msqrt, mcmp, move, min, omin, fmin," "" mp(3X)
.xx "in a bibliography." "indxbib, lookbib: build" "inverted index for a bibliography, find references" "" lookbib(1)
.xx "" "tread, twrite, trewin, tskipf, tstate: f77 tape" "I/O." "topen, tclose," topen(3F)
.xx "" "ioinit: change f77" "I/O initialization." "" ioinit(3F)
.xx "" "select: synchronous" "I/O multiplexing." "" select(2)
.xx "" "iostat: report" "I/O statistics." "" iostat(1)
.xx "" "popen, pclose: initiate" "I/O to/from a process." "" popen(3)
.xx "" "" "ioctl: control device." "" ioctl(2)
.xx "" "" "ioinit: change f77 I/O initialization." "" ioinit(3F)
.xx "" "" "iostat: report I/O statistics." "" iostat(1)
.xx "" "" "ip: Internet Protocol." "" ip(4P)
.xx "" "network interface encapsulating ns packets in" "ip packets.." "nsip: software" nsip(4)
.xx "" "rand, drand," "irand: return random values." "" rand(3F)
.xx "" "random, drandm," "irandm: better random number generator." "" random(3F)
.xx "" "sail: multi-user wooden ships and" "iron men." "" sail(6)
.xx "" "isalpha, isupper, islower, isdigit, isxdigit," "isalnum, isspace, ispunct, isprint, isgraph,/" "" ctype(3)
.xx "isalnum, isspace, ispunct, isprint, isgraph,/" "" "isalpha, isupper, islower, isdigit, isxdigit," "" ctype(3)
.xx "" "/isspace, ispunct, isprint, isgraph, iscntrl," "isascii, toupper, tolower, toascii: character/" "" ctype(3)
.xx "" "ttynam," "isatty: find name of a terminal port." "" ttynam(3F)
.xx "" "ttyname," "isatty, ttyslot: find name of a terminal." "" ttyname(3)
.xx "" "/isalnum, isspace, ispunct, isprint, isgraph," "iscntrl, isascii, toupper, tolower, toascii:/" "" ctype(3)
.xx "isprint, isgraph,/" "isalpha, isupper, islower," "isdigit, isxdigit, isalnum, isspace, ispunct," "" ctype(3)
.xx "" "/isxdigit, isalnum, isspace, ispunct, isprint," "isgraph, iscntrl, isascii, toupper, tolower,/" "" ctype(3)
.xx "ispunct, isprint, isgraph,/" "isalpha, isupper," "islower, isdigit, isxdigit, isalnum, isspace," "" ctype(3)
.xx "" "/isdigit, isxdigit, isalnum, isspace, ispunct," "isprint, isgraph, iscntrl, isascii, toupper,/" "" ctype(3)
.xx "" "/islower, isdigit, isxdigit, isalnum, isspace," "ispunct, isprint, isgraph, iscntrl, isascii,/" "" ctype(3)
.xx "" "/isupper, islower, isdigit, isxdigit, isalnum," "isspace, ispunct, isprint, isgraph, iscntrl,/" "" ctype(3)
.xx "" "system:" "issue a shell command." "" system(3)
.xx "isspace, ispunct, isprint, isgraph,/" "isalpha," "isupper, islower, isdigit, isxdigit, isalnum," "" ctype(3)
.xx "isgraph,/" "isalpha, isupper, islower, isdigit," "isxdigit, isalnum, isspace, ispunct, isprint," "" ctype(3)
.xx "" "formatter; list bibliographic reference" "items." "bib, listrefs: bibliographic" bib(1)
.xx "" "idate," "itime: return date or time in numerical form." "" idate(3F)
.xx "" "omin, fmin, m_in, mout, omout, fmout, m_out, sdiv," "itom: multiple precision integer arithmetic." "/min," mp(3X)
.xx "" "" "ix: Interlan Np100 10 Mb/s Ethernet interface." "" ix(4)
.xx "" "" "j0, j1, jn, y0, y1, yn: bessel functions." "" j0(3M)
.xx "" "j0," "j1, jn, y0, y1, yn: bessel functions." "" j0(3M)
.xx "" "j0, j1," "jn, y0, y1, yn: bessel functions." "" j0(3M)
.xx "" "bg: place" "job in background." "" csh(1)
.xx "" "fg: bring" "job into foreground." "" csh(1)
.xx "" "jobs: print current" "job list." "" csh(1)
.xx "" "stop: halt a" "job or process." "" csh(1)
.xx "" "kill: kill" "jobs and processes." "" csh(1)
.xx "" "lprm: remove" "jobs from the line printer spooling queue." "" lprm(1)
.xx "" "" "jobs: print current job list." "" csh(1)
.xx "" "atrm: remove" "jobs spooled by at." "" atrm(1)
.xx "" "atq: print the queue of" "jobs waiting to be run." "" atq(1)
.xx "" "" "join: relational database operator." "" join(1)
.xx "" "" "jove: an interactive display-oriented text editor." "" jove(1)
.xx "" "msgs: system messages and" "junk mail program." "" msgs(1)
.xx "" "makekey: generate encryption" "key." "" makekey(8)
.xx "" "mset: retrieve ASCII to IBM 3270" "keyboard map." "" mset(1)
.xx "" "database for mapping ascii keystrokes into IBM 3270" "keys." "map3270:" map3270(5)
.xx "" "map3270: database for mapping ascii" "keystrokes into IBM 3270 keys." "" map3270(5)
.xx "" "apropos: locate commands by" "keyword lookup." "" apropos(1)
.xx "" "man: find manual information by" "keywords; print out the manual." "" man(1)
.xx "" "" "kg: KL-11/DL-11W line clock." "" kg(4)
.xx "profile buffers." "" "kgmon: generate a dump of the operating system's" "" kgmon(8)
.xx "" "kill:" "kill jobs and processes." "" csh(1)
.xx "" "" "kill: kill jobs and processes." "" csh(1)
.xx "" "" "kill: send a signal to a process." "" kill(3F)
.xx "" "" "kill: send signal to a process." "" kill(2)
.xx "" "" "kill: terminate a process with extreme prejudice." "" kill(1)
.xx "" "" "killpg: send signal to a process group." "" killpg(2)
.xx "" "bessel functions: of two" "kinds for integer orders." "" bessel(3F)
.xx "" "kg:" "KL-11/DL-11W line clock." "" kg(4)
.xx "" "mem," "kmem: main memory." "" mem(4)
.xx "linemod, space, closepl:/" "plot: openpl, erase," "label, line, circle, arc, move, cont, point," "" plot(3X)
.xx "" "" "L.aliases: UUCP hostname alias file." "" L.aliases(5)
.xx "" "awk: pattern scanning and processing" "language." "" awk(1)
.xx "" "bc: arbitrary-precision arithmetic" "language." "" bc(1)
.xx "" "efl: Extended Fortran" "Language." "" efl(1)
.xx "" "set, shift, times, trap, umask, wait: command" "language." "/exit, export, login, read, readonly," sh(1)
.xx "" "fp: Functional Programming" "language compiler/interpreter." "" fp(1)
.xx "" "vgrindefs: vgrind's" "language definition data base." "" vgrindefs(5)
.xx "order." "" "lastcomm: show last commands executed in reverse" "" lastcomm(1)
.xx "" "" "L.cmds: UUCP remote command permissions file." "" L.cmds(5)
.xx "" "" "ld: link editor." "" ld(1)
.xx "" "" "L-devices: UUCP device description file." "" L-devices(5)
.xx "" "frexp," "ldexp, modf: split into mantissa and exponent." "" frexp(3)
.xx "" "" "L-dialcodes: UUCP phone number index file." "" L-dialcodes(5)
.xx "" "" "learn: computer aided instruction about UNIX." "" learn(1)
.xx "" "leave: remind you when you have to" "leave." "" leave(1)
.xx "" "" "leave: remind you when you have to leave." "" leave(1)
.xx "" "exit:" "leave shell." "" csh(1)
.xx "" "getusershell, setusershell, endusershell: get" "legal user shells." "" getusershell(3)
.xx "" "index, rindex, lnblnk," "len: tell about character objects." "" index(3F)
.xx "" "truncate: truncate a file to a specified" "length." "" truncate(2)
.xx "" "getopt: get option" "letter from argv." "" getopt(3)
.xx "" "" "lex: generator of lexical analysis programs." "" lex(1)
.xx "" "lex: generator of" "lexical analysis programs." "" lex(1)
.xx "" "" "lgamma: log gamma function." "" lgamma(3M)
.xx "" "acc: ACC" "LH/DH IMP interface." "" acc(4)
.xx "" "css: DEC IMP-11A" "LH/DH IMP interface." "" css(4)
.xx "terminal." "" "lib2648: subroutines for the HP 2648 graphics" "" lib2648(3X)
.xx "" "et al.: f77 library interface to \fIplot\fR (3X)" "libraries.." "plot: openpl" plot(3F)
.xx "" "ranlib: convert archives to random" "libraries." "" ranlib(1)
.xx "" "lorder: find ordering relation for an object" "library." "" lorder(1)
.xx "" "ar: archive" "(library) file format." "" ar(5)
.xx "" "intro: introduction to C" "library functions." "" intro(3)
.xx "" "intro: introduction to FORTRAN" "library functions." "" intro(3F)
.xx "" "math: introduction to mathematical" "library functions." "" math(3M)
.xx "" "plot: openpl et al.: f77" "library interface to \fIplot\fR (3X) libraries.." "" plot(3F)
.xx "" "ar: archive and" "library maintainer." "" ar(1)
.xx "" "" "limit: alter per-process resource limitations." "" csh(1)
.xx "" "limit: alter per-process resource" "limitations." "" csh(1)
.xx "" "unlimit: remove resource" "limitiations." "" csh(1)
.xx "" "quota: display disc usage and" "limits." "" quota(1)
.xx "" "getarg, iargc: return command" "line arguments." "" getarg(3F)
.xx "space, closepl:/" "plot: openpl, erase, label," "line, circle, arc, move, cont, point, linemod," "" plot(3X)
.xx "" "kg: KL-11/DL-11W" "line clock." "" kg(4)
.xx "" "tb:" "line discipline for digitizing devices." "" tb(4)
.xx "(obsolete)." "bk:" "line discipline for machine-machine communication" "" bk(4)
.xx "" "col: filter reverse" "line feeds." "" col(1)
.xx "" "sysline: display system status on status" "line of a terminal." "" sysline(1)
.xx "" "lpr: off" "line print." "" lpr(1)
.xx "" "lp:" "line printer." "" lp(4)
.xx "" "lpc:" "line printer control program." "" lpc(8)
.xx "" "lpd:" "line printer daemon." "" lpd(8)
.xx "" "lprm: remove jobs from the" "line printer spooling queue." "" lprm(1)
.xx "" "/erase, label, line, circle, arc, move, cont, point," "linemod, space, closepl: graphics interface." "" plot(3X)
.xx "" "lptest: generate" "lineprinter ripple pattern." "" lptest(1)
.xx "" "head: give first few" "lines." "" head(1)
.xx "" "unifdef: remove ifdef'ed" "lines." "" unifdef(1)
.xx "" "slattach: attach serial" "lines as network interfaces." "" slattach(8C)
.xx "" "comm: select or reject" "lines common to two sorted files." "" comm(1)
.xx "" "fold: fold long" "lines for finite width output device." "" fold(1)
.xx "" "uniq: report repeated" "lines in a file." "" uniq(1)
.xx "" "look: find" "lines in a sorted list." "" look(1)
.xx "" "rev: reverse" "lines of a file." "" rev(1)
.xx "" "readlink: read value of a symbolic" "link." "" readlink(2)
.xx "" "ld:" "link editor." "" ld(1)
.xx "" "a.out: assembler and" "link editor output." "" a.out(5)
.xx "" "" "link: make a hard link to a file." "" link(2)
.xx "" "" "link: make a link to an existing file." "" link(3F)
.xx "" "link: make a hard" "link to a file." "" link(2)
.xx "" "symlink: make symbolic" "link to a file." "" symlink(2)
.xx "" "link: make a" "link to an existing file." "" link(3F)
.xx "" "ln: make" "links." "" ln(1)
.xx "" "" "lint: a C program verifier." "" lint(1)
.xx "" "lxref:" "lisp cross reference program." "" lxref(1)
.xx "" "lisp:" "lisp interpreter." "" lisp(1)
.xx "" "" "lisp: lisp interpreter." "" lisp(1)
.xx "" "liszt: compile a Franz" "Lisp program." "" liszt(1)
.xx "troff." "vlp: Format" "Lisp programs to be printed with nroff, vtroff, or" "" vlp(1)
.xx "" "glob: filename expand argument" "list." "" csh(1)
.xx "" "history: print history event" "list." "" csh(1)
.xx "" "jobs: print current job" "list." "" csh(1)
.xx "" "shift: manipulate argument" "list." "" csh(1)
.xx "" "getgroups: get group access" "list." "" getgroups(2)
.xx "" "initgroups: initialize group access" "list." "" initgroups(3)
.xx "" "look: find lines in a sorted" "list." "" look(1)
.xx "" "nlist: get entries from name" "list." "" nlist(3)
.xx "" "nm: print name" "list." "" nm(1)
.xx "" "setgroups: set group access" "list." "" setgroups(2)
.xx "" "symorder: rearrange name" "list." "" symorder(1)
.xx "" "varargs: variable argument" "list." "" varargs(3)
.xx "" "bib, listrefs: bibliographic formatter;" "list bibliographic reference items." "" bib(1)
.xx "" "ls:" "list contents of directory." "" ls(1)
.xx "" "uuname:" "list names of UUCP hosts." "" uuname(1C)
.xx "" "foreach: loop over" "list of names." "" csh(1)
.xx "" "users: compact" "list of users who are on the system." "" users(1)
.xx "" "listen:" "listen for connections on a socket." "" listen(2)
.xx "" "" "listen: listen for connections on a socket." "" listen(2)
.xx "" "vgrind: grind nice" "listings of programs." "" vgrind(1)
.xx "bibliographic reference items." "bib," "listrefs: bibliographic formatter; list" "" bib(1)
.xx "" "" "liszt: compile a Franz Lisp program." "" liszt(1)
.xx "" "refer: find and insert" "literature references in documents." "" refer(1)
.xx "" "" "ln: make links." "" ln(1)
.xx "" "index, rindex," "lnblnk, len: tell about character objects." "" index(3F)
.xx "" "" "lo: software loopback network interface." "" lo(4)
.xx "" "" "loc: return the address of an object." "" loc(3F)
.xx "and time to ASCII." "ctime," "localtime, gmtime, asctime, timezone: convert date" "" ctime(3)
.xx "(\fIcsh\fR only)." "which:" "locate a program file including aliases and paths" "" which(1)
.xx "" "apropos:" "locate commands by keyword lookup." "" apropos(1)
.xx "" "whereis:" "locate source, binary, and or manual for program." "" whereis(1)
.xx "" "end, etext, edata: last" "locations in program." "" end(3)
.xx "" "flock: apply or remove an advisory" "lock on an open file." "" flock(2)
.xx "" "" "lock: reserve a terminal." "" lock(1)
.xx "" "collect system diagnostic messages to form error" "log." "dmesg:" dmesg(8)
.xx "" "logger: make entries in the system" "log." "" logger(1)
.xx "" "openlog, closelog, setlogmask: control system" "log." "syslog," syslog(3)
.xx "" "uulog: display UUCP" "log files." "" uulog(1C)
.xx "" "lgamma:" "log gamma function." "" lgamma(3M)
.xx "" "implog: IMP" "log interpreter." "" implog(8C)
.xx "power." "exp, expm1," "log, log10, log1p, pow: exponential, logarithm," "" exp(3M)
.xx "" "syslogd:" "log systems messages." "" syslogd(8)
.xx "" "exp, expm1, log," "log10, log1p, pow: exponential, logarithm, power." "" exp(3M)
.xx "" "exp, expm1, log, log10," "log1p, pow: exponential, logarithm, power." "" exp(3M)
.xx "" "exp, expm1, log, log10, log1p, pow: exponential," "logarithm, power." "" exp(3M)
.xx "manipulations." "copysign, drem, finite," "logb, scalb: copysign, remainder, exponent" "" ieee(3M)
.xx "" "rwho: who's" "logged in on local machines." "" rwho(1C)
.xx "" "" "logger: make entries in the system log." "" logger(1)
.xx "" "implogd: IMP" "logger process." "" implogd(8C)
.xx "" "flush: flush output to a" "logical unit." "" flush(3F)
.xx "" "fseek, ftell: reposition a file on a" "logical unit." "" fseek(3F)
.xx "" "getc, fgetc: get a character from a" "logical unit." "" getc(3F)
.xx "" "putc, fputc: write a character to a fortran" "logical unit." "" putc(3F)
.xx "" "rlogin: remote" "login." "" rlogin(1C)
.xx "" "ac:" "login accounting." "" ac(8)
.xx "" "" "login: login new user." "" csh(1)
.xx "" "getlog: get user's" "login name." "" getlog(3F)
.xx "" "getlogin: get" "login name." "" getlogin(3)
.xx "" "login:" "login new user." "" csh(1)
.xx "" "/break, continue, cd, eval, exec, exit, export," "login, read, readonly, set, shift, times, trap,/" "" sh(1)
.xx "" "utmp, wtmp:" "login records." "" utmp(5)
.xx "" "rlogind: remote" "login server." "" rlogind(8C)
.xx "" "" "login: sign on." "" login(1)
.xx "" "tn3270: full-screen remote" "login to IBM VM/CMS." "" tn3270(1)
.xx "" "last: indicate last" "logins of users and teletypes." "" last(1)
.xx "" "" "logout: end session." "" csh(1)
.xx "" "setjmp," "longjmp: non-local goto." "" setjmp(3)
.xx "" "" "look: find lines in a sorted list." "" look(1)
.xx "find references in a bibliography." "indxbib," "lookbib: build inverted index for a bibliography," "" lookbib(1)
.xx "" "apropos: locate commands by keyword" "lookup." "" apropos(1)
.xx "" "finger: user information" "lookup program." "" finger(1)
.xx "" "break: exit while/foreach" "loop." "" csh(1)
.xx "" "continue: cycle in" "loop." "" csh(1)
.xx "" "end: terminate" "loop." "" csh(1)
.xx "" "foreach:" "loop over list of names." "" csh(1)
.xx "" "lo: software" "loopback network interface." "" lo(4)
.xx "library." "" "lorder: find ordering relation for an object" "" lorder(1)
.xx "" "mklost+found: make a" "lost+found directory for fsck." "" mklost+found(8)
.xx "" "" "lp: line printer." "" lp(4)
.xx "" "" "lpc: line printer control program." "" lpc(8)
.xx "" "" "lpd: line printer daemon." "" lpd(8)
.xx "" "" "lpq: spool queue examination program." "" lpq(1)
.xx "" "" "lpr: off line print." "" lpr(1)
.xx "queue." "" "lprm: remove jobs from the line printer spooling" "" lprm(1)
.xx "" "" "lptest: generate lineprinter ripple pattern." "" lptest(1)
.xx "" "" "ls: list contents of directory." "" ls(1)
.xx "" "" "lseek: move read/write pointer." "" lseek(2)
.xx "" "bit: and, or, xor, not, rshift," "lshift bitwise functions." "" bit(3F)
.xx "" "stat," "lstat, fstat: get file status." "" stat(2)
.xx "" "stat," "lstat, fstat: get file status." "" stat(3F)
.xx "" "" "L.sys: UUCP remote host description file." "" L.sys(5)
.xx "" "time, ctime," "ltime, gmtime: return system time." "" time(3F)
.xx "" "" "lxref: lisp cross reference program." "" lxref(1)
.xx "" "" "m4: macro processor." "" m4(1)
.xx "" "bk: line discipline for" "machine-machine communication (obsolete)." "" bk(4)
.xx "" "ruptime: show host status of local" "machines." "" ruptime(1C)
.xx "" "rwho: who's logged in on local" "machines." "" rwho(1C)
.xx "" "m4:" "macro processor." "" m4(1)
.xx "" "alias: shell" "macros." "" csh(1)
.xx "" "toupper, tolower, toascii: character classification" "macros." "/isprint, isgraph, iscntrl, isascii," ctype(3)
.xx "" "ms: text formatting" "macros." "" ms(7)
.xx "" "me:" "macros for formatting papers." "" me(7)
.xx "" "man:" "macros to typeset manual." "" man(7)
.xx "msqrt, mcmp, move, min, omin, fmin, m_in, mout,/" "" "madd, msub, mult, mdiv, pow, gcd, invert, rpow," "" mp(3X)
.xx "" "tcopy: copy a" "mag tape." "" tcopy(1)
.xx "" "mt:" "magnetic tape manipulating program." "" mt(1)
.xx "" "ht: TM-03/TE-16,TU-45,TU-77 MASSBUS" "magtape interface." "" ht(4)
.xx "" "mt: TM78/TU-78 MASSBUS" "magtape interface." "" mt(4)
.xx "" "mtio: UNIX" "magtape interface." "" mtio(4)
.xx "" "tm: TM-11/TE-10" "magtape interface." "" tm(4)
.xx "" "tmscp: DEC TMSCP" "magtape interface." "" tmscp(4)
.xx "" "ts: TS-11" "magtape interface." "" ts(4)
.xx "" "rmt: remote" "magtape protocol module." "" rmt(8C)
.xx "" "mail: send and receive" "mail." "" mail(1)
.xx "" "encode/decode a binary file for transmission via" "mail." "uuencode, uudecode:" uuencode(1C)
.xx "" "xsend, xget, enroll: secret" "mail." "" xsend(1)
.xx "" "sendbug:" "mail a system bug report to 4bsd-bugs." "" sendbug(1)
.xx "" "mailaddr:" "mail addressing description." "" mailaddr(7)
.xx "" "newaliases: rebuild the data base for the" "mail aliases file." "" newaliases(1)
.xx "" "binmail: send or receive" "mail among users." "" binmail(1)
.xx "" "biff: be notified if" "mail arrives and who it is from." "" biff(1)
.xx "" "from: who is my" "mail from?." "" from(1)
.xx "" "sendmail: send" "mail over the internet." "" sendmail(8)
.xx "" "msgs: system messages and junk" "mail program." "" msgs(1)
.xx "" "rmail: handle remote" "mail received via uucp." "" rmail(1)
.xx "" "" "mail: send and receive mail." "" mail(1)
.xx "" "" "mailaddr: mail addressing description." "" mailaddr(7)
.xx "" "mem, kmem:" "main memory." "" mem(4)
.xx "" "make:" "maintain program groups." "" make(1)
.xx "" "ar: archive and library" "maintainer." "" ar(1)
.xx "" "intro: introduction to system" "maintenance and operation commands." "" intro(8)
.xx "" "mkdir:" "make a directory." "" mkdir(1)
.xx "" "mkdir:" "make a directory file." "" mkdir(2)
.xx "" "link:" "make a hard link to a file." "" link(2)
.xx "" "link:" "make a link to an existing file." "" link(3F)
.xx "" "mklost+found:" "make a lost+found directory for fsck." "" mklost+found(8)
.xx "" "mknod:" "make a special file." "" mknod(2)
.xx "" "mktemp:" "make a unique file name." "" mktemp(3)
.xx "" "logger:" "make entries in the system log." "" logger(1)
.xx "" "ln:" "make links." "" ln(1)
.xx "" "" "make: maintain program groups." "" make(1)
.xx "" "symlink:" "make symbolic link to a file." "" symlink(2)
.xx "" "makedev:" "make system special files." "" makedev(8)
.xx "" "vwidth:" "make troff width table for a font." "" vwidth(1)
.xx "" "script:" "make typescript of terminal session." "" script(1)
.xx "" "" "makedev: make system special files." "" makedev(8)
.xx "" "" "makekey: generate encryption key." "" makekey(8)
.xx "" "" "malloc, free, falloc: memory allocator." "" malloc(3F)
.xx "allocator." "" "malloc, free, realloc, calloc, alloca: memory" "" malloc(3)
.xx "the manual." "" "man: find manual information by keywords; print out" "" man(1)
.xx "" "" "man: macros to typeset manual." "" man(7)
.xx "" "shift:" "manipulate argument list." "" csh(1)
.xx "" "quota:" "manipulate disk quotas." "" quota(2)
.xx "" "tp:" "manipulate tape archive." "" tp(1)
.xx "" "route: manually" "manipulate the routing tables." "" route(8C)
.xx "" "uuq: examine or" "manipulate the uucp queue." "" uuq(1C)
.xx "" "mt: magnetic tape" "manipulating program." "" mt(1)
.xx "" "inet_lnaof, inet_netof: Internet address" "manipulation routines." "/inet_ntoa, inet_makeaddr," inet(3N)
.xx "" "finite, logb, scalb: copysign, remainder, exponent" "manipulations." "copysign, drem," ieee(3M)
.xx "" "frexp, ldexp, modf: split into" "mantissa and exponent." "" frexp(3)
.xx "" "catman: create the cat files for the" "manual." "" catman(8)
.xx "" "find manual information by keywords; print out the" "manual." "man:" man(1)
.xx "" "man: macros to typeset" "manual." "" man(7)
.xx "" "whereis: locate source, binary, and or" "manual for program." "" whereis(1)
.xx "manual." "man: find" "manual information by keywords; print out the" "" man(1)
.xx "" "route:" "manually manipulate the routing tables." "" route(8C)
.xx "IBM 3270 keys." "" "map3270: database for mapping ascii keystrokes into" "" map3270(5)
.xx "" "map3270: database for" "mapping ascii keystrokes into IBM 3270 keys." "" map3270(5)
.xx "" "umask: change or display file creation" "mask." "" csh(1)
.xx "" "sigsetmask: set current signal" "mask." "" sigsetmask(2)
.xx "" "umask: set file creation mode" "mask." "" umask(2)
.xx "" "mkstr: create an error message file by" "massaging C source." "" mkstr(1)
.xx "" "hp:" "MASSBUS disk interface." "" hp(4)
.xx "" "ht: TM-03/TE-16,TU-45,TU-77" "MASSBUS magtape interface." "" ht(4)
.xx "" "mt: TM78/TU-78" "MASSBUS magtape interface." "" mt(4)
.xx "functions." "" "math: introduction to mathematical library" "" math(3M)
.xx "" "math: introduction to" "mathematical library functions." "" math(3M)
.xx "" "eqn, neqn, checkeq: typeset" "mathematics." "" eqn(1)
.xx "" "getrlimit, setrlimit: control" "maximum system resource consumption." "" getrlimit(2)
.xx "" "vlimit: control" "maximum system resource consumption." "" vlimit(3C)
.xx "" "de: DEC DEUNA 10" "Mb/s Ethernet interface." "" de(4)
.xx "" "ec: 3Com 10" "Mb/s Ethernet interface." "" ec(4)
.xx "" "en: Xerox 3" "Mb/s Ethernet interface." "" en(4)
.xx "" "ex: Excelan 10" "Mb/s Ethernet interface." "" ex(4)
.xx "" "il: Interlan NI1010 10" "Mb/s Ethernet interface." "" il(4)
.xx "" "ix: Interlan Np100 10" "Mb/s Ethernet interface." "" ix(4)
.xx "" "np: Interlan Np100 10" "Mb/s Ethernet interface." "" np(4)
.xx "" "qe: DEC DEQNA Q-bus 10" "Mb/s Ethernet interface." "" qe(4)
.xx "" "/msub, mult, mdiv, pow, gcd, invert, rpow, msqrt," "mcmp, move, min, omin, fmin, m_in, mout, omout,/" "" mp(3X)
.xx "min, omin, fmin, m_in, mout,/" "madd, msub, mult," "mdiv, pow, gcd, invert, rpow, msqrt, mcmp, move," "" mp(3X)
.xx "" "" "me: macros for formatting papers." "" me(7)
.xx "" "bcd: convert to antique" "media." "" bcd(6)
.xx "" "vv: Proteon proNET 10" "Megabit ring." "" vv(4)
.xx "" "" "mem, kmem: main memory." "" mem(4)
.xx "" "groups: show group" "memberships." "" groups(1)
.xx "" "mem, kmem: main" "memory." "" mem(4)
.xx "" "malloc, free, realloc, calloc, alloca:" "memory allocator." "" malloc(3)
.xx "" "malloc, free, falloc:" "memory allocator." "" malloc(3F)
.xx "" "valloc: aligned" "memory allocator." "" valloc(3C)
.xx "" "vfork: spawn new process in a virtual" "memory efficient way." "" vfork(2)
.xx "" "core: format of" "memory image file." "" core(5)
.xx "" "vmstat: report virtual" "memory statistics." "" vmstat(1)
.xx "" "sail: multi-user wooden ships and iron" "men." "" sail(6)
.xx "" "sort: sort or" "merge files." "" sort(1)
.xx "" "pmerge: pascal file" "merger." "" pmerge(1)
.xx "" "" "mesg: permit or deny messages." "" mesg(1)
.xx "" "mkstr: create an error" "message file by massaging C source." "" mkstr(1)
.xx "" "recv, recvfrom, recvmsg: receive a" "message from a socket." "" recv(2)
.xx "" "send, sendto, sendmsg: send a" "message from a socket." "" send(2)
.xx "" "mh:" "Message Handler." "" mh(1)
.xx "" "icmp: Internet Control" "Message Protocol." "" icmp(4P)
.xx "" "error: analyze and disperse compiler error" "messages." "" error(1)
.xx "" "mesg: permit or deny" "messages." "" mesg(1)
.xx "" "perror, sys_errlist, sys_nerr: system error" "messages." "" perror(3)
.xx "" "perror, gerror, ierrno: get system error" "messages." "" perror(3F)
.xx "" "psignal, sys_siglist: system signal" "messages." "" psignal(3)
.xx "" "syslogd: log systems" "messages." "" syslogd(8)
.xx "" "msgs: system" "messages and junk mail program." "" msgs(1)
.xx "" "dmesg: collect system diagnostic" "messages to form error log." "" dmesg(8)
.xx "" "" "mh: Message Handler." "" mh(1)
.xx "" "mille: play" "Mille Bournes." "" mille(6)
.xx "" "" "mille: play Mille Bournes." "" mille(6)
.xx "" "invert, rpow, msqrt, mcmp, move, min, omin, fmin," "m_in, mout, omout, fmout, m_out, sdiv, itom:/" "/gcd," mp(3X)
.xx "" "/mdiv, pow, gcd, invert, rpow, msqrt, mcmp, move," "min, omin, fmin, m_in, mout, omout, fmout, m_out,/" "" mp(3X)
.xx "pages." "" "miscellaneous: miscellaneous useful information" "" intro(7)
.xx "" "miscellaneous:" "miscellaneous useful information pages." "" intro(7)
.xx "" "" "mkdir: make a directory." "" mkdir(1)
.xx "" "" "mkdir: make a directory file." "" mkdir(2)
.xx "" "" "mkfs: construct a file system." "" mkfs(8)
.xx "" "" "mkhosts: generate hashed host table." "" mkhosts(8)
.xx "" "" "mklost+found: make a lost+found directory for fsck." "" mklost+found(8)
.xx "" "" "mknod: build special file." "" mknod(8)
.xx "" "" "mknod: make a special file." "" mknod(2)
.xx "" "" "mkpasswd: generate hashed password table." "" mkpasswd(8)
.xx "" "" "mkproto: construct a prototype file system." "" mkproto(8)
.xx "source." "" "mkstr: create an error message file by massaging C" "" mkstr(1)
.xx "" "" "mktemp: make a unique file name." "" mktemp(3)
.xx "" "chmod: change" "mode." "" chmod(1)
.xx "" "getty: set terminal" "mode." "" getty(8)
.xx "" "umask: set file creation" "mode mask." "" umask(2)
.xx "" "chmod: change" "mode of a file." "" chmod(3F)
.xx "" "chmod: change" "mode of file." "" chmod(2)
.xx "" "ddn: DDN Standard" "Mode X.25 IMP interface." "" ddn(4)
.xx "" "frexp, ldexp," "modf: split into mantissa and exponent." "" frexp(3)
.xx "" "touch: update date last" "modified of a file." "" touch(1)
.xx "" "rmt: remote magtape protocol" "module." "" rmt(8C)
.xx "" "up: unibus storage" "module controller/drives." "" up(4)
.xx "" "what: show what versions of object" "modules were used to construct a file." "" what(1)
.xx "" "monitor, monstartup," "moncontrol: prepare execution profile." "" monitor(3)
.xx "profile." "" "monitor, monstartup, moncontrol: prepare execution" "" monitor(3)
.xx "" "" "monop: Monopoly game." "" monop(6)
.xx "" "monop:" "Monopoly game." "" monop(6)
.xx "" "monitor," "monstartup, moncontrol: prepare execution profile." "" monitor(3)
.xx "" "" "more, page: file perusal filter for crt viewing." "" more(1)
.xx "" "curses: screen functions with ``optimal'' cursor" "motion." "" curses(3X)
.xx "" "mount, umount:" "mount and dismount file system." "" mount(8)
.xx "" "mount, umount:" "mount or remove file system." "" mount(2)
.xx "" "" "mount, umount: mount and dismount file system." "" mount(8)
.xx "" "" "mount, umount: mount or remove file system." "" mount(2)
.xx "" "mtab:" "mounted file system table." "" mtab(5)
.xx "" "/rpow, msqrt, mcmp, move, min, omin, fmin, m_in," "mout, omout, fmout, m_out, sdiv, itom: multiple/" "" mp(3X)
.xx "" "/move, min, omin, fmin, m_in, mout, omout, fmout," "m_out, sdiv, itom: multiple precision integer/" "" mp(3X)
.xx "" "plot: openpl, erase, label, line, circle, arc," "move, cont, point, linemod, space, closepl:/" "" plot(3X)
.xx "" "/mult, mdiv, pow, gcd, invert, rpow, msqrt, mcmp," "move, min, omin, fmin, m_in, mout, omout, fmout,/" "" mp(3X)
.xx "" "mv:" "move or rename files." "" mv(1)
.xx "" "lseek:" "move read/write pointer." "" lseek(2)
.xx "" "hk: RK6-11/RK06 and RK07" "moving head disk." "" hk(4)
.xx "" "" "ms: text formatting macros." "" ms(7)
.xx "" "" "mset: retrieve ASCII to IBM 3270 keyboard map." "" mset(1)
.xx "" "" "msgs: system messages and junk mail program." "" msgs(1)
.xx "" "madd, msub, mult, mdiv, pow, gcd, invert, rpow," "msqrt, mcmp, move, min, omin, fmin, m_in, mout,/" "" mp(3X)
.xx "mcmp, move, min, omin, fmin, m_in, mout,/" "madd," "msub, mult, mdiv, pow, gcd, invert, rpow, msqrt," "" mp(3X)
.xx "" "" "mt: magnetic tape manipulating program." "" mt(1)
.xx "" "" "mt: TM78/TU-78 MASSBUS magtape interface." "" mt(4)
.xx "" "" "mtab: mounted file system table." "" mtab(5)
.xx "" "" "mtio: UNIX magtape interface." "" mtio(4)
.xx "move, min, omin, fmin, m_in, mout,/" "madd, msub," "mult, mdiv, pow, gcd, invert, rpow, msqrt, mcmp," "" mp(3X)
.xx "" "hunt: a" "multi-player multi-terminal game." "" hunt(6)
.xx "" "fmin, m_in, mout, omout, fmout, m_out, sdiv, itom:" "multiple precision integer arithmetic." "/min, omin," mp(3X)
.xx "" "dh: DH-11/DM-11 communications" "multiplexer." "" dh(4)
.xx "" "dhu: DHU-11 communications" "multiplexer." "" dhu(4)
.xx "" "dz: DZ-11 communications" "multiplexer." "" dz(4)
.xx "" "select: synchronous I/O" "multiplexing." "" select(2)
.xx "" "dmf: DMF-32, terminal" "multiplexor." "" dmf(4)
.xx "" "dmz: DMZ-32 terminal" "multiplexor." "" dmz(4)
.xx "" "fsplit: split a" "multi-routine Fortran file into individual files." "" fsplit(1)
.xx "" "hunt: a multi-player" "multi-terminal game." "" hunt(6)
.xx "" "sail:" "multi-user wooden ships and iron men." "" sail(6)
.xx "" "switch:" "multi-way command branch." "" csh(1)
.xx "" "" "mv: move or rename files." "" mv(1)
.xx "" "from: who is" "my mail from?." "" from(1)
.xx "" "getdiskbyname: get disk description by its" "name." "" getdisk(3)
.xx "" "getenv: value for environment" "name." "" getenv(3)
.xx "" "getlog: get user's login" "name." "" getlog(3F)
.xx "" "getlogin: get login" "name." "" getlogin(3)
.xx "" "getsockname: get socket" "name." "" getsockname(2)
.xx "" "mktemp: make a unique file" "name." "" mktemp(3)
.xx "" "pwd: working directory" "name." "" pwd(1)
.xx "" "tty: get terminal" "name." "" tty(1)
.xx "" "hosts: host" "name data base." "" hosts(5)
.xx "" "networks: network" "name data base." "" networks(5)
.xx "" "protocols: protocol" "name data base." "" protocols(5)
.xx "" "services: service" "name data base." "" services(5)
.xx "" "whois: DARPA Internet user" "name directory service." "" whois(1)
.xx "" "getpw: get" "name from uid." "" getpw(3C)
.xx "" "nlist: get entries from" "name list." "" nlist(3)
.xx "" "nm: print" "name list." "" nm(1)
.xx "" "symorder: rearrange" "name list." "" symorder(1)
.xx "" "rename: change the" "name of a file." "" rename(2)
.xx "" "ttyname, isatty, ttyslot: find" "name of a terminal." "" ttyname(3)
.xx "" "ttynam, isatty: find" "name of a terminal port." "" ttynam(3F)
.xx "" "getpeername: get" "name of connected peer." "" getpeername(2)
.xx "" "gethostname, sethostname: get/set" "name of current host." "" gethostname(2)
.xx "" "hostnm: get" "name of current host." "" hostnm(3F)
.xx "" "hostname: set or print" "name of current host system." "" hostname(1)
.xx "" "named: Internet domain" "name server." "" named(8)
.xx "" "bind: bind a" "name to a socket." "" bind(2)
.xx "" "" "named: Internet domain name server." "" named(8)
.xx "" "foreach: loop over list of" "names." "" csh(1)
.xx "" "term: conventional" "names for terminals." "" term(7)
.xx "" "ncheck: generate" "names from i-numbers." "" ncheck(8)
.xx "" "uuname: list" "names of UUCP hosts." "" uuname(1C)
.xx "" "" "ncheck: generate names from i-numbers." "" ncheck(8)
.xx "" "eqn," "neqn, checkeq: typeset mathematics." "" eqn(1)
.xx "" "" "netstat: show network status." "" netstat(1)
.xx "" "rdump: file system dump across the" "network." "" rdump(8C)
.xx "" "rrestore: restore a file system dump across the" "network." "" rrestore(8C)
.xx "" "ntohl, ntohs: convert values between host and" "network byte order." "htonl, htons," byteorder(3N)
.xx "" "getnetbyname, setnetent, endnetent: get" "network entry." "getnetent, getnetbyaddr," getnetent(3N)
.xx "" "gethostent, sethostent, endhostent: get" "network host entry." "gethostbyname, gethostbyaddr," gethostbyname(3N)
.xx "" "ping: send ICMP ECHO_REQUEST packets to" "network hosts." "" ping(8)
.xx "" "imp: 1822" "network interface." "" imp(4)
.xx "" "lo: software loopback" "network interface." "" lo(4)
.xx "" "pcl: DEC CSS PCL-11 B" "Network Interface." "" pcl(4)
.xx "packets.." "nsip: software" "network interface encapsulating ns packets in ip" "" nsip(4)
.xx "" "ifconfig: configure" "network interface parameters." "" ifconfig(8C)
.xx "" "slattach: attach serial lines as" "network interfaces." "" slattach(8C)
.xx "" "networks:" "network name data base." "" networks(5)
.xx "" "routed:" "network routing daemon." "" routed(8C)
.xx "" "netstat: show" "network status." "" netstat(1)
.xx "" "hy:" "Network Systems Hyperchannel interface." "" hy(4)
.xx "" "ns: Xerox" "Network Systems(tm) protocol family." "" ns(4F)
.xx "" "networking: introduction to" "networking facilities." "" intro(4N)
.xx "" "" "networking: introduction to networking facilities." "" intro(4N)
.xx "" "" "networks: network name data base." "" networks(5)
.xx "" "creat: create a" "new file." "" creat(2)
.xx "" "open a file for reading or writing, or create a" "new file." "open:" open(2)
.xx "" "newfs: construct a" "new file system." "" newfs(8)
.xx "" "fork: create a" "new process." "" fork(2)
.xx "" "vfork: spawn" "new process in a virtual memory efficient way." "" vfork(2)
.xx "" "login: login" "new user." "" csh(1)
.xx "" "adduser: procedure for adding" "new users." "" adduser(8)
.xx "aliases file." "" "newaliases: rebuild the data base for the mail" "" newaliases(1)
.xx "" "" "newfs: construct a new file system." "" newfs(8)
.xx "" "readnews: read" "news articles." "" readnews(1)
.xx "" "vnews: read" "news articles." "" vnews(1)
.xx "" "notes, autoseq, readnotes: a" "news system." "" notes(1)
.xx "" "dbminit, fetch, store, delete, firstkey," "nextkey: data base subroutines." "" dbm(3X)
.xx "" "il: Interlan" "NI1010 10 Mb/s Ethernet interface." "" il(4)
.xx "" "gettable: get" "NIC format host tables from a host." "" gettable(8C)
.xx "" "htable: convert" "NIC standard format host tables." "" htable(8)
.xx "" "vgrind: grind" "nice listings of programs." "" vgrind(1)
.xx "(\fIsh\fR only)." "" "nice, nohup: run a command at low priority" "" nice(1)
.xx "" "" "nice: run low priority process." "" csh(1)
.xx "" "" "nice: set program priority." "" nice(3C)
.xx "" "" "nlist: get entries from name list." "" nlist(3)
.xx "" "" "nm: print name list." "" nm(1)
.xx "only)." "nice," "nohup: run a command at low priority (\fIsh\fR" "" nice(1)
.xx "" "" "nohup: run command immune to hangups." "" csh(1)
.xx "" "setjmp, longjmp:" "non-local goto." "" setjmp(3)
.xx "" "bit: and, or, xor," "not, rshift, lshift bitwise functions." "" bit(3F)
.xx "" "" "notes, autoseq, readnotes: a news system." "" notes(1)
.xx "" "notify: request immediate" "notification." "" csh(1)
.xx "" "biff: be" "notified if mail arrives and who it is from." "" biff(1)
.xx "" "" "notify: request immediate notification." "" csh(1)
.xx "" "" "np: Interlan Np100 10 Mb/s Ethernet interface." "" np(4)
.xx "" "ix: Interlan" "Np100 10 Mb/s Ethernet interface." "" ix(4)
.xx "" "np: Interlan" "Np100 10 Mb/s Ethernet interface." "" np(4)
.xx "" "soelim: eliminate \&.so's from" "nroff input." "" soelim(1)
.xx "" "tbl: format tables for" "nroff or troff." "" tbl(1)
.xx "" "colcrt: filter" "nroff output for CRT previewing." "" colcrt(1)
.xx "" "" "nroff: text formatting." "" nroff(1)
.xx "" "troff," "nroff: text formatting and typesetting." "" troff(1)
.xx "" "deroff: remove" "nroff, troff, tbl and eqn constructs." "" deroff(1)
.xx "" "vlp: Format Lisp programs to be printed with" "nroff, vtroff, or troff." "" vlp(1)
.xx "" "checknr: check" "nroff/troff files." "" checknr(1)
.xx "" "nsip: software network interface encapsulating" "ns packets in ip packets.." "" nsip(4)
.xx "" "XNSrouted:" "NS Routing Information Protocol daemon." "" XNSrouted(8C)
.xx "" "" "ns: Xerox Network Systems(tm) protocol family." "" ns(4F)
.xx "routines." "" "ns_addr, ns_ntoa: Xerox NS(tm)  address conversion" "" ns(3N)
.xx "packets in ip packets.." "" "nsip: software network interface encapsulating ns" "" nsip(4)
.xx "" "ns_addr," "ns_ntoa: Xerox NS(tm)  address conversion routines." "" ns(3N)
.xx "" "ns_addr, ns_ntoa: Xerox" "NS(tm)  address conversion routines." "" ns(3N)
.xx "network byte order." "htonl, htons," "ntohl, ntohs: convert values between host and" "" byteorder(3N)
.xx "order." "htonl, htons, ntohl," "ntohs: convert values between host and network byte" "" byteorder(3N)
.xx "" "" "null: data sink." "" null(4)
.xx "" "" "number: convert Arabic numerals to English." "" number(6)
.xx "" "phones: remote host phone" "number data base." "" phones(5)
.xx "" "arithmetic: provide drill in" "number facts." "" arithmetic(6)
.xx "" "rand, srand: random" "number generator." "" rand(3C)
.xx "" "random, drandm, irandm: better random" "number generator." "" random(3F)
.xx "" "random, srandom, initstate, setstate: better random" "number generator; routines for changing generators." "" random(3)
.xx "" "L-dialcodes: UUCP phone" "number index file." "" L-dialcodes(5)
.xx "" "atof, atoi, atol: convert ASCII to" "numbers." "" atof(3)
.xx "" "intro: introduction to system calls and error" "numbers." "" intro(2)
.xx "" "number: convert Arabic" "numerals to English." "" number(6)
.xx "" "idate, itime: return date or time in" "numerical form." "" idate(3F)
.xx "" "loc: return the address of an" "object." "" loc(3F)
.xx "" "long, short: integer" "object conversion." "" long(3F)
.xx "" "size: size of an" "object file." "" size(1)
.xx "" "lorder: find ordering relation for an" "object library." "" lorder(1)
.xx "" "what: show what versions of" "object modules were used to construct a file." "" what(1)
.xx "" "strings: find the printable strings in a" "object, or other binary, file." "" strings(1)
.xx "" "index, rindex, lnblnk, len: tell about character" "objects." "" index(3F)
.xx "" "line discipline for machine-machine communication" "(obsolete)." "bk:" bk(4)
.xx "" "od:" "octal, decimal, hex, ascii dump." "" od(1)
.xx "" "" "od: octal, decimal, hex, ascii dump." "" od(1)
.xx "" "/pow, gcd, invert, rpow, msqrt, mcmp, move, min," "omin, fmin, m_in, mout, omout, fmout, m_out, sdiv,/" "" mp(3X)
.xx "" "/msqrt, mcmp, move, min, omin, fmin, m_in, mout," "omout, fmout, m_out, sdiv, itom: multiple precision/" "" mp(3X)
.xx "" "" "onintr: process interrupts in command scripts." "" csh(1)
.xx "" "nohup: run a command at low priority (\fIsh\fR" "only)." "nice," nice(1)
.xx "" "program file including aliases and paths (\fIcsh\fR" "only)." "which: locate a" which(1)
.xx "file." "open:" "open a file for reading or writing, or create a new" "" open(2)
.xx "" "fopen, freopen, fdopen:" "open a stream." "" fopen(3S)
.xx "" "flock: apply or remove an advisory lock on an" "open file." "" flock(2)
.xx "a new file." "" "open: open a file for reading or writing, or create" "" open(2)
.xx "closedir: directory operations." "" "opendir, readdir, telldir, seekdir, rewinddir," "" directory(3)
.xx "" "syslog," "openlog, closelog, setlogmask: control system log." "" syslog(3)
.xx "cont, point, linemod, space, closepl:/" "plot:" "openpl, erase, label, line, circle, arc, move," "" plot(3X)
.xx "(3X) libraries.." "plot:" "openpl et al.: f77 library interface to \fIplot\fR" "" plot(3F)
.xx "" "savecore: save a core dump of the" "operating system." "" savecore(8)
.xx "" "kgmon: generate a dump of the" "operating system's profile buffers." "" kgmon(8)
.xx "" "intro: introduction to system maintenance and" "operation commands." "" intro(8)
.xx "" "tgetstr, tgoto, tputs: terminal independent" "operation routines." "tgetent, tgetnum, tgetflag," termcap(3X)
.xx "" "bcopy, bcmp, bzero, ffs: bit and byte string" "operations." "" bstring(3)
.xx "" "telldir, seekdir, rewinddir, closedir: directory" "operations." "opendir, readdir," directory(3)
.xx "" "strcpy, strncpy, strlen, index, rindex: string" "operations." "strcat, strncat, strcmp, strncmp," string(3)
.xx "" "infnan: signals invalid floating-point" "operations on a VAX (temporary)." "" infnan(3M)
.xx "" "join: relational database" "operator." "" join(1)
.xx "" "curses: screen functions with" "``optimal'' cursor motion." "" curses(3X)
.xx "" "getopt: get" "option letter from argv." "" getopt(3)
.xx "" "stty: set terminal" "options." "" stty(1)
.xx "" "getsockopt, setsockopt: get and set" "options on sockets." "" getsockopt(2)
.xx "" "ntohs: convert values between host and network byte" "order." "htonl, htons, ntohl," byteorder(3N)
.xx "" "lastcomm: show last commands executed in reverse" "order." "" lastcomm(1)
.xx "" "lorder: find" "ordering relation for an object library." "" lorder(1)
.xx "" "bessel functions: of two kinds for integer" "orders." "" bessel(3F)
.xx "" "vi: screen" "oriented (visual) display editor based on ex." "" vi(1)
.xx "" "patch: a program for applying a diff file to an" "original." "" patch(1)
.xx "" "a.out: assembler and link editor" "output." "" a.out(5)
.xx "" "terminate a process after flushing any pending" "output." "exit:" exit(3)
.xx "" "write, writev: write" "output." "" write(2)
.xx "" "ecvt, fcvt, gcvt:" "output conversion." "" ecvt(3)
.xx "" "printf, fprintf, sprintf: formatted" "output conversion." "" printf(3S)
.xx "" "fold: fold long lines for finite width" "output device." "" fold(1)
.xx "" "colcrt: filter nroff" "output for CRT previewing." "" colcrt(1)
.xx "" "flush: flush" "output to a logical unit." "" flush(3F)
.xx "" "foreach: loop" "over list of names." "" csh(1)
.xx "" "sendmail: send mail" "over the internet." "" sendmail(8)
.xx "" "trapov: trap and repair floating point" "overflow." "" trapov(3F)
.xx "" "exec:" "overlay shell with specified command." "" csh(1)
.xx "" "chown: change" "owner." "" chown(8)
.xx "" "chown: change" "owner and group of a file." "" chown(2)
.xx "" "quot: summarize file system" "ownership." "" quot(8)
.xx "" "" "pac: printer/plotter accounting information." "" pac(8)
.xx "" "spp: Xerox Sequenced" "Packet Protocol." "" spp(4P)
.xx "" "trsp: transliterate sequenced" "packet protocol trace." "" trsp(8C)
.xx "" "network interface encapsulating ns packets in ip" "packets.." "nsip: software" nsip(4)
.xx "" "nsip: software network interface encapsulating ns" "packets in ip packets.." "" nsip(4)
.xx "" "ping: send ICMP ECHO_REQUEST" "packets to network hosts." "" ping(8)
.xx "" "format: how to format disk" "packs." "" format(8V)
.xx "" "more," "page: file perusal filter for crt viewing." "" more(1)
.xx "" "getpagesize: get system" "page size." "" getpagesize(2)
.xx "" "pagesize: print system" "page size." "" pagesize(1)
.xx "" "miscellaneous: miscellaneous useful information" "pages." "" intro(7)
.xx "" "" "pagesize: print system page size." "" pagesize(1)
.xx "" "tk:" "paginator for the Tektronix 4014." "" tk(1)
.xx "" "swapon: specify additional device for" "paging and swapping." "" swapon(8)
.xx "" "drum:" "paging device." "" drum(4)
.xx "" "swapon: add a swap device for interleaved" "paging/swapping." "" swapon(2)
.xx "" "socketpair: create a" "pair of connected sockets." "" socketpair(2)
.xx "" "me: macros for formatting" "papers." "" me(7)
.xx "" "ifconfig: configure network interface" "parameters." "" ifconfig(8C)
.xx "" "diskpart: calculate default disk" "partition sizes." "" diskpart(8)
.xx "" "pc:" "Pascal compiler." "" pc(1)
.xx "" "pxref:" "Pascal cross-reference program." "" pxref(1)
.xx "" "pdx:" "pascal debugger." "" pdx(1)
.xx "" "pxp:" "Pascal execution profiler." "" pxp(1)
.xx "" "pmerge:" "pascal file merger." "" pmerge(1)
.xx "" "px:" "Pascal interpreter." "" px(1)
.xx "" "pix:" "Pascal interpreter and executor." "" pix(1)
.xx "" "pi:" "Pascal interpreter code translator." "" pi(1)
.xx "" "chfn, chsh," "passwd: change password file information." "" chfn(1)
.xx "" "chfn, chsh," "passwd: change password file information." "" chsh(1)
.xx "" "chfn, chsh," "passwd: change password file information." "" passwd(1)
.xx "" "" "passwd: password file." "" passwd(5)
.xx "" "getpass: read a" "password." "" getpass(3)
.xx "" "passwd:" "password file." "" passwd(5)
.xx "" "vipw: edit the" "password file." "" vipw(8)
.xx "" "getpwnam, setpwent, endpwent, setpwfile: get" "password file entry." "getpwent, getpwuid," getpwent(3)
.xx "" "chfn, chsh, passwd: change" "password file information." "" chfn(1)
.xx "" "chfn, chsh, passwd: change" "password file information." "" chsh(1)
.xx "" "chfn, chsh, passwd: change" "password file information." "" passwd(1)
.xx "" "mkpasswd: generate hashed" "password table." "" mkpasswd(8)
.xx "original." "" "patch: a program for applying a diff file to an" "" patch(1)
.xx "" "getwd: get current working directory" "pathname." "" getwd(3)
.xx "" "getcwd: get" "pathname of current working directory." "" getcwd(3F)
.xx "" "USERFILE: UUCP" "pathname permissions file." "" USERFILE(5)
.xx "" "which: locate a program file including aliases and" "paths (\fIcsh\fR only)." "" which(1)
.xx "" "grep, egrep, fgrep: search a file for a" "pattern." "" grep(1)
.xx "" "lptest: generate lineprinter ripple" "pattern." "" lptest(1)
.xx "" "awk:" "pattern scanning and processing language." "" awk(1)
.xx "" "" "pause: stop until signal." "" pause(3C)
.xx "" "" "pc: Pascal compiler." "" pc(1)
.xx "" "" "pcl: DEC CSS PCL-11 B Network Interface." "" pcl(4)
.xx "" "pcl: DEC CSS" "PCL-11 B Network Interface." "" pcl(4)
.xx "" "popen," "pclose: initiate I/O to/from a process." "" popen(3)
.xx "" "" "pdx: pascal debugger." "" pdx(1)
.xx "" "getpeername: get name of connected" "peer." "" getpeername(2)
.xx "" "exit: terminate a process after flushing any" "pending output." "" exit(3)
.xx "" "L.cmds: UUCP remote command" "permissions file." "" L.cmds(5)
.xx "" "USERFILE: UUCP pathname" "permissions file." "" USERFILE(5)
.xx "" "mesg:" "permit or deny messages." "" mesg(1)
.xx "" "ptx:" "permuted index." "" ptx(1)
.xx "" "limit: alter" "per-process resource limitations." "" csh(1)
.xx "" "" "perror, gerror, ierrno: get system error messages." "" perror(3F)
.xx "messages." "" "perror, sys_errlist, sys_nerr: system error" "" perror(3)
.xx "" "sticky:" "persistent text and append-only directories." "" sticky(8)
.xx "" "more, page: file" "perusal filter for crt viewing." "" more(1)
.xx "" "phones: remote host" "phone number data base." "" phones(5)
.xx "" "L-dialcodes: UUCP" "phone number index file." "" L-dialcodes(5)
.xx "" "" "phones: remote host phone number data base." "" phones(5)
.xx "" "ct:" "phototypesetter interface." "" ct(4)
.xx "" "tc:" "photoypesetter simulator." "" tc(1)
.xx "" "" "pi: Pascal interpreter code translator." "" pi(1)
.xx "" "ps: Evans and Sutherland" "Picture System 2 graphics device interface." "" ps(4)
.xx "hosts." "" "ping: send ICMP ECHO_REQUEST packets to network" "" ping(8)
.xx "" "" "pipe: create an interprocess communication channel." "" pipe(2)
.xx "" "tee:" "pipe fitting." "" tee(1)
.xx "" "" "pix: Pascal interpreter and executor." "" pix(1)
.xx "" "bg:" "place job in background." "" csh(1)
.xx "" "fish:" "play ``Go Fish''." "" fish(6)
.xx "" "mille:" "play Mille Bournes." "" mille(6)
.xx "" "boggle:" "play the game of boggle." "" boggle(6)
.xx "" "worm:" "Play the growing worm game." "" worm(6)
.xx "" "" "plot: graphics filters." "" plot(1G)
.xx "" "" "plot: graphics interface." "" plot(5)
.xx "move, cont, point, linemod, space, closepl:/" "" "plot: openpl, erase, label, line, circle, arc," "" plot(3X)
.xx "\fIplot\fR (3X) libraries.." "" "plot: openpl et al.: f77 library interface to" "" plot(3F)
.xx "" "" "pmerge: pascal file merger." "" pmerge(1)
.xx "" "trpfpe, fpecnt: trap and repair floating" "point faults." "" trpfpe(3F)
.xx "" "/erase, label, line, circle, arc, move, cont," "point, linemod, space, closepl: graphics interface." "" plot(3X)
.xx "" "trapov: trap and repair floating" "point overflow." "" trapov(3F)
.xx "" "lseek: move read/write" "pointer." "" lseek(2)
.xx "" "dmc: DEC DMC-11/DMR-11" "point-to-point communications device." "" dmc(4)
.xx "" "uupoll:" "poll a remote UUCP site." "" uupoll(8C)
.xx "" "popd:" "pop shell directory stack." "" csh(1)
.xx "" "" "popd: pop shell directory stack." "" csh(1)
.xx "" "" "popen, pclose: initiate I/O to/from a process." "" popen(3)
.xx "" "ttynam, isatty: find name of a terminal" "port." "" ttynam(3F)
.xx "" "exp, expm1, log, log10, log1p," "pow: exponential, logarithm, power." "" exp(3M)
.xx "omin, fmin, m_in, mout,/" "madd, msub, mult, mdiv," "pow, gcd, invert, rpow, msqrt, mcmp, move, min," "" mp(3X)
.xx "" "log, log10, log1p, pow: exponential, logarithm," "power." "exp, expm1," exp(3M)
.xx "" "" "pr: print file." "" pr(1)
.xx "" "mout, omout, fmout, m_out, sdiv, itom: multiple" "precision integer arithmetic." "/omin, fmin, m_in," mp(3X)
.xx "" "monitor, monstartup, moncontrol:" "prepare execution profile." "" monitor(3)
.xx "" "colcrt: filter nroff output for CRT" "previewing." "" colcrt(1)
.xx "" "types:" "primitive system data types." "" types(5)
.xx "" "cat: catenate and" "print." "" cat(1)
.xx "" "lpr: off line" "print." "" lpr(1)
.xx "" "fortune:" "print a random, hopefully interesting, adage." "" fortune(6)
.xx "" "date:" "print and set the date." "" date(1)
.xx "" "cal:" "print calendar." "" cal(1)
.xx "" "hashstat:" "print command hashing statistics." "" csh(1)
.xx "" "jobs:" "print current job list." "" csh(1)
.xx "" "whoami:" "print effective current user id." "" whoami(1)
.xx "" "pr:" "print file." "" pr(1)
.xx "" "fpr:" "print Fortran file." "" fpr(1)
.xx "" "history:" "print history event list." "" csh(1)
.xx "" "hostid: set or" "print identifier of current host system." "" hostid(1)
.xx "" "banner:" "print large banner on printer." "" banner(6)
.xx "" "nm:" "print name list." "" nm(1)
.xx "" "hostname: set or" "print name of current host system." "" hostname(1)
.xx "" "printenv:" "print out the environment." "" printenv(1)
.xx "" "man: find manual information by keywords;" "print out the manual." "" man(1)
.xx "" "pstat:" "print system facts." "" pstat(8)
.xx "" "pagesize:" "print system page size." "" pagesize(1)
.xx "" "atq:" "print the queue of jobs waiting to be run." "" atq(1)
.xx "" "diction, explain:" "print wordy sentences; thesaurus for diction." "" diction(1)
.xx "file." "strings: find the" "printable strings in a object, or other binary," "" strings(1)
.xx "" "" "printcap: printer capability data base." "" printcap(5)
.xx "" "vlp: Format Lisp programs to be" "printed with nroff, vtroff, or troff." "" vlp(1)
.xx "" "" "printenv: print out the environment." "" printenv(1)
.xx "" "banner: print large banner on" "printer." "" banner(6)
.xx "" "lp: line" "printer." "" lp(4)
.xx "" "printcap:" "printer capability data base." "" printcap(5)
.xx "" "lpc: line" "printer control program." "" lpc(8)
.xx "" "lpd: line" "printer daemon." "" lpd(8)
.xx "" "lprm: remove jobs from the line" "printer spooling queue." "" lprm(1)
.xx "" "pac:" "printer/plotter accounting information." "" pac(8)
.xx "conversion." "" "printf, fprintf, sprintf: formatted output" "" printf(3S)
.xx "" "setpriority: get/set program scheduling" "priority." "getpriority," getpriority(2)
.xx "" "nice: set program" "priority." "" nice(3C)
.xx "" "nice, nohup: run a command at low" "priority (\fIsh\fR only)." "" nice(1)
.xx "" "renice: alter" "priority of running processes." "" renice(8)
.xx "" "nice: run low" "priority process." "" csh(1)
.xx "" "adduser:" "procedure for adding new users." "" adduser(8)
.xx "" "reboot: UNIX bootstrapping" "procedures." "" reboot(8)
.xx "" "nice: run low priority" "process." "" csh(1)
.xx "" "stop: halt a job or" "process." "" csh(1)
.xx "" "_exit: terminate a" "process." "" exit(2)
.xx "" "fork: create a new" "process." "" fork(2)
.xx "" "fork: create a copy of this" "process." "" fork(3F)
.xx "" "implogd: IMP logger" "process." "" implogd(8C)
.xx "" "kill: send signal to a" "process." "" kill(2)
.xx "" "kill: send a signal to a" "process." "" kill(3F)
.xx "" "popen, pclose: initiate I/O to/from a" "process." "" popen(3)
.xx "" "wait: await completion of" "process." "" wait(1)
.xx "" "exit: terminate a" "process after flushing any pending output." "" exit(3)
.xx "" "init:" "process control initialization." "" init(8)
.xx "" "getpgrp: get" "process group." "" getpgrp(2)
.xx "" "killpg: send signal to a" "process group." "" killpg(2)
.xx "" "setpgrp: set" "process group." "" setpgrp(2)
.xx "" "getpid: get" "process id." "" getpid(3F)
.xx "" "getpid, getppid: get" "process identification." "" getpid(2)
.xx "" "vfork: spawn new" "process in a virtual memory efficient way." "" vfork(2)
.xx "" "onintr:" "process interrupts in command scripts." "" csh(1)
.xx "" "ps:" "process status." "" ps(1)
.xx "" "times: get" "process times." "" times(3C)
.xx "" "wait, wait3: wait for" "process to terminate." "" wait(2)
.xx "" "wait: wait for a" "process to terminate." "" wait(3F)
.xx "" "ptrace:" "process trace." "" ptrace(2)
.xx "" "kill: terminate a" "process with extreme prejudice." "" kill(1)
.xx "" "exit: terminate" "process with status." "" exit(3F)
.xx "" "kill: kill jobs and" "processes." "" csh(1)
.xx "" "gcore: get core images of running" "processes." "" gcore(1)
.xx "" "renice: alter priority of running" "processes." "" renice(8)
.xx "" "wait: wait for background" "processes to complete." "" csh(1)
.xx "" "awk: pattern scanning and" "processing language." "" awk(1)
.xx "" "halt: stop the" "processor." "" halt(8)
.xx "" "m4: macro" "processor." "" m4(1)
.xx "" "reboot: reboot system or halt" "processor." "" reboot(2)
.xx "" "" "prof: display profile data." "" prof(1)
.xx "" "" "profil: execution time profile." "" profil(2)
.xx "" "monitor, monstartup, moncontrol: prepare execution" "profile." "" monitor(3)
.xx "" "profil: execution time" "profile." "" profil(2)
.xx "" "kgmon: generate a dump of the operating system's" "profile buffers." "" kgmon(8)
.xx "" "gprof: display call graph" "profile data." "" gprof(1)
.xx "" "prof: display" "profile data." "" prof(1)
.xx "" "pxp: Pascal execution" "profiler." "" pxp(1)
.xx "" "drtest: standalone disk test" "program." "" drtest(8)
.xx "" "end, etext, edata: last locations in" "program." "" end(3)
.xx "" "finger: user information lookup" "program." "" finger(1)
.xx "" "ftp: ARPANET file transfer" "program." "" ftp(1C)
.xx "" "liszt: compile a Franz Lisp" "program." "" liszt(1)
.xx "" "lpc: line printer control" "program." "" lpc(8)
.xx "" "lpq: spool queue examination" "program." "" lpq(1)
.xx "" "lxref: lisp cross reference" "program." "" lxref(1)
.xx "" "msgs: system messages and junk mail" "program." "" msgs(1)
.xx "" "mt: magnetic tape manipulating" "program." "" mt(1)
.xx "" "pxref: Pascal cross-reference" "program." "" pxref(1)
.xx "" "rdist: remote file distribution" "program." "" rdist(1)
.xx "" "tftp: trivial file transfer" "program." "" tftp(1C)
.xx "" "timedc: timed control" "program." "" timedc(8)
.xx "" "units: conversion" "program." "" units(1)
.xx "" "whereis: locate source, binary, and or manual for" "program." "" whereis(1)
.xx "" "cb: C" "program beautifier." "" cb(1)
.xx "only)." "which: locate a" "program file including aliases and paths (\fIcsh\fR" "" which(1)
.xx "" "patch: a" "program for applying a diff file to an original." "" patch(1)
.xx "" "make: maintain" "program groups." "" make(1)
.xx "" "nice: set" "program priority." "" nice(3C)
.xx "" "getpriority, setpriority: get/set" "program scheduling priority." "" getpriority(2)
.xx "" "indent: indent and format C" "program source." "" indent(1)
.xx "" "assert:" "program verification." "" assert(3)
.xx "" "lint: a C" "program verifier." "" lint(1)
.xx "" "fp: Functional" "Programming language compiler/interpreter." "" fp(1)
.xx "" "lex: generator of lexical analysis" "programs." "" lex(1)
.xx "" "struct: structure Fortran" "programs." "" struct(1)
.xx "" "vgrind: grind nice listings of" "programs." "" vgrind(1)
.xx "troff." "vlp: Format Lisp" "programs to be printed with nroff, vtroff, or" "" vlp(1)
.xx "" "xstr: extract strings from C" "programs to implement shared strings." "" xstr(1)
.xx "" "vv: Proteon" "proNET 10 Megabit ring." "" vv(4)
.xx "" "vv:" "Proteon proNET 10 Megabit ring." "" vv(4)
.xx "" "arp: Address Resolution" "Protocol." "" arp(4P)
.xx "" "icmp: Internet Control Message" "Protocol." "" icmp(4P)
.xx "" "idp: Xerox Internet Datagram" "Protocol." "" idp(4P)
.xx "" "ip: Internet" "Protocol." "" ip(4P)
.xx "" "spp: Xerox Sequenced Packet" "Protocol." "" spp(4P)
.xx "" "tcp: Internet Transmission Control" "Protocol." "" tcp(4P)
.xx "" "telnet: user interface to the TELNET" "protocol." "" telnet(1C)
.xx "" "udp: Internet User Datagram" "Protocol." "" udp(4P)
.xx "" "XNSrouted: NS Routing Information" "Protocol daemon." "" XNSrouted(8C)
.xx "" "getprotobyname, setprotoent, endprotoent: get" "protocol entry." "getprotoent, getprotobynumber," getprotoent(3N)
.xx "" "inet: Internet" "protocol family." "" inet(4F)
.xx "" "ns: Xerox Network Systems(tm)" "protocol family." "" ns(4F)
.xx "" "rmt: remote magtape" "protocol module." "" rmt(8C)
.xx "" "protocols:" "protocol name data base." "" protocols(5)
.xx "" "ftpd: DARPA Internet File Transfer" "Protocol server." "" ftpd(8C)
.xx "" "telnetd: DARPA TELNET" "protocol server." "" telnetd(8C)
.xx "" "tftpd: DARPA Trivial File Transfer" "Protocol server." "" tftpd(8C)
.xx "" "trpt: transliterate" "protocol trace." "" trpt(8C)
.xx "" "trsp: transliterate sequenced packet" "protocol trace." "" trsp(8C)
.xx "" "" "protocols: protocol name data base." "" protocols(5)
.xx "" "mkproto: construct a" "prototype file system." "" mkproto(8)
.xx "" "arithmetic:" "provide drill in number facts." "" arithmetic(6)
.xx "" "false, true:" "provide truth values." "" false(1)
.xx "" "true, false:" "provide truth values." "" true(1)
.xx "device interface." "" "ps: Evans and Sutherland Picture System 2 graphics" "" ps(4)
.xx "" "" "ps: process status." "" ps(1)
.xx "" "pty:" "pseudo terminal driver." "" pty(4)
.xx "" "" "psignal, sys_siglist: system signal messages." "" psignal(3)
.xx "" "" "pstat: print system facts." "" pstat(8)
.xx "" "doctor: interact with a" "psychoanalyst." "" doctor(6)
.xx "" "" "ptrace: process trace." "" ptrace(2)
.xx "" "" "ptx: permuted index." "" ptx(1)
.xx "" "" "pty: pseudo terminal driver." "" pty(4)
.xx "" "ungetc:" "push character back into input stream." "" ungetc(3S)
.xx "" "pushd:" "push shell directory stack." "" csh(1)
.xx "" "" "pushd: push shell directory stack." "" csh(1)
.xx "" "puts, fputs:" "put a string on a stream." "" puts(3S)
.xx "" "putc, putchar, fputc, putw:" "put character or word on a stream." "" putc(3S)
.xx "unit." "" "putc, fputc: write a character to a fortran logical" "" putc(3F)
.xx "on a stream." "" "putc, putchar, fputc, putw: put character or word" "" putc(3S)
.xx "stream." "putc," "putchar, fputc, putw: put character or word on a" "" putc(3S)
.xx "" "" "puts, fputs: put a string on a stream." "" puts(3S)
.xx "" "putc, putchar, fputc," "putw: put character or word on a stream." "" putc(3S)
.xx "" "" "pwd: working directory name." "" pwd(1)
.xx "" "" "px: Pascal interpreter." "" px(1)
.xx "" "" "pxp: Pascal execution profiler." "" pxp(1)
.xx "" "" "pxref: Pascal cross-reference program." "" pxref(1)
.xx "" "qe: DEC DEQNA" "Q-bus 10 Mb/s Ethernet interface." "" qe(4)
.xx "" "" "qe: DEC DEQNA Q-bus 10 Mb/s Ethernet interface." "" qe(4)
.xx "" "" "qsort: quick sort." "" qsort(3F)
.xx "" "" "qsort: quicker sort." "" qsort(3)
.xx "" "insque, remque: insert/remove element from a" "queue." "" insque(3)
.xx "" "lprm: remove jobs from the line printer spooling" "queue." "" lprm(1)
.xx "" "uuq: examine or manipulate the uucp" "queue." "" uuq(1C)
.xx "" "lpq: spool" "queue examination program." "" lpq(1)
.xx "" "atq: print the" "queue of jobs waiting to be run." "" atq(1)
.xx "" "uucico, uucpd: transfer files" "queued by uucp or uux." "" uucico(8C)
.xx "" "qsort:" "quick sort." "" qsort(3F)
.xx "" "qsort:" "quicker sort." "" qsort(3)
.xx "" "" "quiz: test your knowledge." "" quiz(6)
.xx "" "" "quot: summarize file system ownership." "" quot(8)
.xx "" "quotacheck: file system" "quota consistency checker." "" quotacheck(8)
.xx "" "" "quota: display disc usage and limits." "" quota(1)
.xx "" "" "quota: manipulate disk quotas." "" quota(2)
.xx "" "" "quotacheck: file system quota consistency checker." "" quotacheck(8)
.xx "" "quotaon," "quotaoff: turn file system quotas on and off." "" quotaon(8)
.xx "off." "" "quotaon, quotaoff: turn file system quotas on and" "" quotaon(8)
.xx "" "edquota: edit user" "quotas." "" edquota(8)
.xx "" "quota: manipulate disk" "quotas." "" quota(2)
.xx "" "repquota: summarize" "quotas for a file system." "" repquota(8)
.xx "" "setquota: enable/disable" "quotas on a file system." "" setquota(2)
.xx "" "quotaon, quotaoff: turn file system" "quotas on and off." "" quotaon(8)
.xx "" "" "rain: animated raindrops display." "" rain(6)
.xx "" "rain: animated" "raindrops display." "" rain(6)
.xx "" "" "rand, drand, irand: return random values." "" rand(3F)
.xx "" "" "rand, srand: random number generator." "" rand(3C)
.xx "generator." "" "random, drandm, irandm: better random number" "" random(3F)
.xx "" "fortune: print a" "random, hopefully interesting, adage." "" fortune(6)
.xx "" "ranlib: convert archives to" "random libraries." "" ranlib(1)
.xx "" "rand, srand:" "random number generator." "" rand(3C)
.xx "" "random, drandm, irandm: better" "random number generator." "" random(3F)
.xx "" "random, srandom, initstate, setstate: better" "random number generator; routines for changing/" "" random(3)
.xx "number generator; routines for changing/" "" "random, srandom, initstate, setstate: better random" "" random(3)
.xx "" "rand, drand, irand: return" "random values." "" rand(3F)
.xx "" "" "ranlib: convert archives to random libraries." "" ranlib(1)
.xx "" "" "ratfor: rational Fortran dialect." "" ratfor(1)
.xx "" "ratfor:" "rational Fortran dialect." "" ratfor(1)
.xx "" "imp: IMP" "raw socket interface." "" imp(4P)
.xx "" "" "rc: command script for auto-reboot and daemons." "" rc(8)
.xx "stream to a remote command." "" "rcmd, rresvport, ruserok: routines for returning a" "" rcmd(3)
.xx "" "" "rcp: remote file copy." "" rcp(1C)
.xx "" "rcsintro: introduction to" "RCS commands." "" rcsintro(1)
.xx "" "" "rcsintro: introduction to RCS commands." "" rcsintro(1)
.xx "" "" "rdist: remote file distribution program." "" rdist(1)
.xx "" "" "rdump: file system dump across the network." "" rdump(8C)
.xx "" "getpass:" "read a password." "" getpass(3)
.xx "" "source:" "read commands from file." "" csh(1)
.xx "" "read, readv:" "read input." "" read(2)
.xx "" "readnews:" "read news articles." "" readnews(1)
.xx "" "vnews:" "read news articles." "" vnews(1)
.xx "" "/continue, cd, eval, exec, exit, export, login," "read, readonly, set, shift, times, trap, umask,/" "" sh(1)
.xx "" "" "read, readv: read input." "" read(2)
.xx "" "readlink:" "read value of a symbolic link." "" readlink(2)
.xx "directory operations." "opendir," "readdir, telldir, seekdir, rewinddir, closedir:" "" directory(3)
.xx "" "open: open a file for" "reading or writing, or create a new file." "" open(2)
.xx "" "" "readlink: read value of a symbolic link." "" readlink(2)
.xx "" "" "readnews: read news articles." "" readnews(1)
.xx "" "notes, autoseq," "readnotes: a news system." "" notes(1)
.xx "command/" "/cd, eval, exec, exit, export, login, read," "readonly, set, shift, times, trap, umask, wait:" "" sh(1)
.xx "" "read," "readv: read input." "" read(2)
.xx "" "bad144:" "read/write dec standard 144 bad sector information." "" bad144(8)
.xx "" "lseek: move" "read/write pointer." "" lseek(2)
.xx "" "setregid: set" "real and effective group ID." "" setregid(2)
.xx "" "setreuid: set" "real and effective user ID's." "" setreuid(2)
.xx "" "malloc, free," "realloc, calloc, alloca: memory allocator." "" malloc(3)
.xx "" "symorder:" "rearrange name list." "" symorder(1)
.xx "" "" "reboot: reboot system or halt processor." "" reboot(2)
.xx "" "reboot:" "reboot system or halt processor." "" reboot(2)
.xx "" "" "reboot: UNIX bootstrapping procedures." "" reboot(8)
.xx "" "fastboot, fasthalt:" "reboot/halt the system without checking the disks." "" fastboot(8)
.xx "" "newaliases:" "rebuild the data base for the mail aliases file." "" newaliases(1)
.xx "" "recv, recvfrom, recvmsg:" "receive a message from a socket." "" recv(2)
.xx "" "mail: send and" "receive mail." "" mail(1)
.xx "" "binmail: send or" "receive mail among users." "" binmail(1)
.xx "" "rmail: handle remote mail" "received via uucp." "" rmail(1)
.xx "" "" "re_comp, re_exec: regular expression handler." "" regex(3)
.xx "" "rehash:" "recompute command hash table." "" csh(1)
.xx "" "utmp, wtmp: login" "records." "" utmp(5)
.xx "socket." "" "recv, recvfrom, recvmsg: receive a message from a" "" recv(2)
.xx "" "recv," "recvfrom, recvmsg: receive a message from a socket." "" recv(2)
.xx "" "recv, recvfrom," "recvmsg: receive a message from a socket." "" recv(2)
.xx "" "eval:" "re-evaluate shell data." "" csh(1)
.xx "" "re_comp," "re_exec: regular expression handler." "" regex(3)
.xx "documents." "" "refer: find and insert literature references in" "" refer(1)
.xx "" "bibliographic formatter; list bibliographic" "reference items." "bib, listrefs:" bib(1)
.xx "" "lxref: lisp cross" "reference program." "" lxref(1)
.xx "" "build inverted index for a bibliography, find" "references in a bibliography." "indxbib, lookbib:" lookbib(1)
.xx "" "refer: find and insert literature" "references in documents." "" refer(1)
.xx "" "re_comp, re_exec:" "regular expression handler." "" regex(3)
.xx "" "" "rehash: recompute command hash table." "" csh(1)
.xx "" "comm: select or" "reject lines common to two sorted files." "" comm(1)
.xx "" "lorder: find ordering" "relation for an object library." "" lorder(1)
.xx "" "join:" "relational database operator." "" join(1)
.xx "" "sigpause: atomically" "release blocked signals and wait for interrupt." "" sigpause(2)
.xx "" "strip: remove symbols and" "relocation bits." "" strip(1)
.xx "" "copysign, drem, finite, logb, scalb: copysign," "remainder, exponent manipulations." "" ieee(3M)
.xx "" "leave:" "remind you when you have to leave." "" leave(1)
.xx "" "calendar:" "reminder service." "" calendar(1)
.xx "" "ruserok: routines for returning a stream to a" "remote command." "rcmd, rresvport," rcmd(3)
.xx "" "rexec: return stream to a" "remote command." "" rexec(3)
.xx "" "L.cmds: UUCP" "remote command permissions file." "" L.cmds(5)
.xx "" "rexecd:" "remote execution server." "" rexecd(8C)
.xx "" "rcp:" "remote file copy." "" rcp(1C)
.xx "" "rdist:" "remote file distribution program." "" rdist(1)
.xx "" "uusend: send a file to a" "remote host." "" uusend(1C)
.xx "" "L.sys: UUCP" "remote host description file." "" L.sys(5)
.xx "" "remote:" "remote host description file." "" remote(5)
.xx "" "phones:" "remote host phone number data base." "" phones(5)
.xx "" "rlogin:" "remote login." "" rlogin(1C)
.xx "" "rlogind:" "remote login server." "" rlogind(8C)
.xx "" "tn3270: full-screen" "remote login to IBM VM/CMS." "" tn3270(1)
.xx "" "rmt:" "remote magtape protocol module." "" rmt(8C)
.xx "" "rmail: handle" "remote mail received via uucp." "" rmail(1)
.xx "" "" "remote: remote host description file." "" remote(5)
.xx "" "rsh:" "remote shell." "" rsh(1C)
.xx "" "rshd:" "remote shell server." "" rshd(8C)
.xx "" "tip, cu: connect to a" "remote system." "" tip(1C)
.xx "" "talkd:" "remote user communication server." "" talkd(8C)
.xx "" "fingerd:" "remote user information server." "" fingerd(8C)
.xx "" "uupoll: poll a" "remote UUCP site." "" uupoll(8C)
.xx "" "unlink:" "remove a directory entry." "" unlink(3F)
.xx "" "rmdir:" "remove a directory file." "" rmdir(2)
.xx "" "unalias:" "remove aliases." "" csh(1)
.xx "" "flock: apply or" "remove an advisory lock on an open file." "" flock(2)
.xx "" "colrm:" "remove columns from a file." "" colrm(1)
.xx "" "unlink:" "remove directory entry." "" unlink(2)
.xx "" "unsetenv:" "remove environment variables." "" csh(1)
.xx "" "mount, umount: mount or" "remove file system." "" mount(2)
.xx "" "unifdef:" "remove ifdef'ed lines." "" unifdef(1)
.xx "" "lprm:" "remove jobs from the line printer spooling queue." "" lprm(1)
.xx "" "atrm:" "remove jobs spooled by at." "" atrm(1)
.xx "" "deroff:" "remove nroff, troff, tbl and eqn constructs." "" deroff(1)
.xx "" "unlimit:" "remove resource limitiations." "" csh(1)
.xx "" "strip:" "remove symbols and relocation bits." "" strip(1)
.xx "" "rmdir, rm:" "remove (unlink) directories or files." "" rmdir(1)
.xx "" "rm, rmdir:" "remove (unlink) files or directories." "" rm(1)
.xx "" "insque," "remque: insert/remove element from a queue." "" insque(3)
.xx "" "rename:" "rename a file." "" rename(3F)
.xx "" "" "rename: change the name of a file." "" rename(2)
.xx "" "mv: move or" "rename files." "" mv(1)
.xx "" "" "rename: rename a file." "" rename(3F)
.xx "" "" "renice: alter priority of running processes." "" renice(8)
.xx "" "fsck: file system consistency check and interactive" "repair." "" fsck(8)
.xx "" "trpfpe, fpecnt: trap and" "repair floating point faults." "" trpfpe(3F)
.xx "" "trapov: trap and" "repair floating point overflow." "" trapov(3F)
.xx "" "while:" "repeat commands conditionally." "" csh(1)
.xx "" "" "repeat: execute command repeatedly." "" csh(1)
.xx "" "uniq: report" "repeated lines in a file." "" uniq(1)
.xx "" "repeat: execute command" "repeatedly." "" csh(1)
.xx "" "yes: be" "repetitively affirmative." "" yes(1)
.xx "" "iostat:" "report I/O statistics." "" iostat(1)
.xx "" "uniq:" "report repeated lines in a file." "" uniq(1)
.xx "" "sendbug: mail a system bug" "report to 4bsd-bugs." "" sendbug(1)
.xx "" "vmstat:" "report virtual memory statistics." "" vmstat(1)
.xx "" "bugfiler: file bug" "reports in folders automatically." "" bugfiler(8)
.xx "" "fseek, ftell:" "reposition a file on a logical unit." "" fseek(3F)
.xx "" "fseek, ftell, rewind:" "reposition a stream." "" fseek(3S)
.xx "" "" "repquota: summarize quotas for a file system." "" repquota(8)
.xx "" "notify:" "request immediate notification." "" csh(1)
.xx "" "lock:" "reserve a terminal." "" lock(1)
.xx "" "res_mkquery, res_send," "res_init, dn_comp, dn_expand: resolver routines." "" resolver(3)
.xx "dn_expand: resolver routines." "" "res_mkquery, res_send, res_init, dn_comp," "" resolver(3)
.xx "" "arp: address" "resolution display and control." "" arp(8C)
.xx "" "arp: Address" "Resolution Protocol." "" arp(4P)
.xx "" "" "resolver configuration file." "" resolver(5)
.xx "" "res_send, res_init, dn_comp, dn_expand:" "resolver routines." "res_mkquery," resolver(3)
.xx "" "getrlimit, setrlimit: control maximum system" "resource consumption." "" getrlimit(2)
.xx "" "vlimit: control maximum system" "resource consumption." "" vlimit(3C)
.xx "" "limit: alter per-process" "resource limitations." "" csh(1)
.xx "" "unlimit: remove" "resource limitiations." "" csh(1)
.xx "" "getrusage: get information about" "resource utilization." "" getrusage(2)
.xx "" "vtimes: get information about" "resource utilization." "" vtimes(3C)
.xx "routines." "res_mkquery," "res_send, res_init, dn_comp, dn_expand: resolver" "" resolver(3)
.xx "" "restore: incremental file system" "restore." "" restore(8)
.xx "" "rrestore:" "restore a file system dump across the network." "" rrestore(8C)
.xx "" "" "restore: incremental file system restore." "" restore(8)
.xx "" "suspend: suspend a shell," "resuming its superior." "" csh(1)
.xx "" "mset:" "retrieve ASCII to IBM 3270 keyboard map." "" mset(1)
.xx "" "getarg, iargc:" "return command line arguments." "" getarg(3F)
.xx "" "fdate:" "return date and time in an ASCII string." "" fdate(3F)
.xx "" "idate, itime:" "return date or time in numerical form." "" idate(3F)
.xx "" "etime, dtime:" "return elapsed execution time." "" etime(3F)
.xx "" "flmin, flmax, ffrac, dflmin, dflmax, dffrac, inmax:" "return extreme values." "" flmin(3F)
.xx "" "sigreturn:" "return from signal." "" sigreturn(2)
.xx "" "vacation:" "return ``I am on vacation'' indication." "" vacation(1)
.xx "" "rand, drand, irand:" "return random values." "" rand(3F)
.xx "" "rexec:" "return stream to a remote command." "" rexec(3)
.xx "" "time, ctime, ltime, gmtime:" "return system time." "" time(3F)
.xx "" "loc:" "return the address of an object." "" loc(3F)
.xx "" "rcmd, rresvport, ruserok: routines for" "returning a stream to a remote command." "" rcmd(3)
.xx "" "" "rev: reverse lines of a file." "" rev(1)
.xx "" "col: filter" "reverse line feeds." "" col(1)
.xx "" "rev:" "reverse lines of a file." "" rev(1)
.xx "" "lastcomm: show last commands executed in" "reverse order." "" lastcomm(1)
.xx "" "fseek, ftell," "rewind: reposition a stream." "" fseek(3S)
.xx "" "opendir, readdir, telldir, seekdir," "rewinddir, closedir: directory operations." "" directory(3)
.xx "" "" "rexec: return stream to a remote command." "" rexec(3)
.xx "" "" "rexecd: remote execution server." "" rexecd(8C)
.xx "" "index," "rindex, lnblnk, len: tell about character objects." "" index(3F)
.xx "" "strcmp, strncmp, strcpy, strncpy, strlen, index," "rindex: string operations." "strcat, strncat," string(3)
.xx "" "vv: Proteon proNET 10 Megabit" "ring." "" vv(4)
.xx "round-to-nearest functions." "fabs, floor, ceil," "rint: absolute value, floor, ceiling, and" "" floor(3M)
.xx "" "lptest: generate lineprinter" "ripple pattern." "" lptest(1)
.xx "" "hk: RK6-11/RK06 and" "RK07 moving head disk." "" hk(4)
.xx "" "hk:" "RK6-11/RK06 and RK07 moving head disk." "" hk(4)
.xx "" "crl: VAX 8600 console" "RL02 interface." "" crl(4)
.xx "" "" "rlogin: remote login." "" rlogin(1C)
.xx "" "" "rlogind: remote login server." "" rlogind(8C)
.xx "" "rmdir," "rm: remove (unlink) directories or files." "" rmdir(1)
.xx "" "" "rm, rmdir: remove (unlink) files or directories." "" rm(1)
.xx "" "" "rmail: handle remote mail received via uucp." "" rmail(1)
.xx "" "" "rmdir: remove a directory file." "" rmdir(2)
.xx "" "rm," "rmdir: remove (unlink) files or directories." "" rm(1)
.xx "" "" "rmdir, rm: remove (unlink) directories or files." "" rmdir(1)
.xx "" "" "rmt: remote magtape protocol module." "" rmt(8C)
.xx "" "robots: fight off villainous" "robots." "" robots(6)
.xx "" "" "robots: fight off villainous robots." "" robots(6)
.xx "" "" "roffbib: run off bibliographic database." "" roffbib(1)
.xx "" "" "rogue: Exploring The Dungeons of Doom." "" rogue(6)
.xx "" "cbrt, sqrt: cube root, square" "root." "" sqrt(3M)
.xx "" "chroot: change" "root directory." "" chroot(2)
.xx "" "cbrt, sqrt: cube" "root, square root." "" sqrt(3M)
.xx "" "ceil, rint: absolute value, floor, ceiling, and" "round-to-nearest functions." "fabs, floor," floor(3M)
.xx "" "" "route: manually manipulate the routing tables." "" route(8C)
.xx "" "" "routed: network routing daemon." "" routed(8C)
.xx "" "inet_netof: Internet address manipulation" "routines." "/inet_ntoa, inet_makeaddr, inet_lnaof," inet(3N)
.xx "" "ns_addr, ns_ntoa: Xerox NS(tm)  address conversion" "routines." "" ns(3N)
.xx "" "res_send, res_init, dn_comp, dn_expand: resolver" "routines." "res_mkquery," resolver(3)
.xx "" "tgoto, tputs: terminal independent operation" "routines." "tgetent, tgetnum, tgetflag, tgetstr," termcap(3X)
.xx "" "setstate: better random number generator;" "routines for changing generators." "/initstate," random(3)
.xx "command." "rcmd, rresvport, ruserok:" "routines for returning a stream to a remote" "" rcmd(3)
.xx "" "routed: network" "routing daemon." "" routed(8C)
.xx "" "XNSrouted: NS" "Routing Information Protocol daemon." "" XNSrouted(8C)
.xx "" "route: manually manipulate the" "routing tables." "" route(8C)
.xx "mout,/" "madd, msub, mult, mdiv, pow, gcd, invert," "rpow, msqrt, mcmp, move, min, omin, fmin, m_in," "" mp(3X)
.xx "network." "" "rrestore: restore a file system dump across the" "" rrestore(8C)
.xx "to a remote command." "rcmd," "rresvport, ruserok: routines for returning a stream" "" rcmd(3)
.xx "" "" "rsh: remote shell." "" rsh(1C)
.xx "" "" "rshd: remote shell server." "" rshd(8C)
.xx "" "bit: and, or, xor, not," "rshift, lshift bitwise functions." "" bit(3F)
.xx "" "atq: print the queue of jobs waiting to be" "run." "" atq(1)
.xx "" "nice, nohup:" "run a command at low priority (\fIsh\fR only)." "" nice(1)
.xx "" "nohup:" "run command immune to hangups." "" csh(1)
.xx "" "nice:" "run low priority process." "" csh(1)
.xx "" "roffbib:" "run off bibliographic database." "" roffbib(1)
.xx "" "gcore: get core images of" "running processes." "" gcore(1)
.xx "" "renice: alter priority of" "running processes." "" renice(8)
.xx "" "" "ruptime: show host status of local machines." "" ruptime(1C)
.xx "remote command." "rcmd, rresvport," "ruserok: routines for returning a stream to a" "" rcmd(3)
.xx "" "" "rwho: who's logged in on local machines." "" rwho(1C)
.xx "" "" "rwhod: system status server." "" rwhod(8C)
.xx "" "" "rx: DEC RX02 floppy disk interface." "" rx(4)
.xx "" "rx: DEC" "RX02 floppy disk interface." "" rx(4)
.xx "" "" "rxformat: format floppy disks." "" rxformat(8V)
.xx "" "" "sa, accton: system accounting." "" sa(8)
.xx "" "" "sail: multi-user wooden ships and iron men." "" sail(6)
.xx "" "savecore:" "save a core dump of the operating system." "" savecore(8)
.xx "" "" "savecore: save a core dump of the operating system." "" savecore(8)
.xx "" "brk," "sbrk: change data segment size." "" brk(2)
.xx "" "copysign, drem, finite, logb," "scalb: copysign, remainder, exponent manipulations." "" ieee(3M)
.xx "" "scandir, alphasort:" "scan a directory." "" scandir(3)
.xx "" "" "scandir, alphasort: scan a directory." "" scandir(3)
.xx "" "" "scanf, fscanf, sscanf: formatted input conversion." "" scanf(3S)
.xx "" "awk: pattern" "scanning and processing language." "" awk(1)
.xx "" "" "sccs: front end for the SCCS subsystem." "" sccs(1)
.xx "" "sccs: front end for the" "SCCS subsystem." "" sccs(1)
.xx "" "alarm:" "schedule signal after specified time." "" alarm(3C)
.xx "" "ualarm:" "schedule signal after specified time." "" ualarm(3)
.xx "" "getpriority, setpriority: get/set program" "scheduling priority." "" getpriority(2)
.xx "" "clear: clear terminal" "screen." "" clear(1)
.xx "" "curses:" "screen functions with ``optimal'' cursor motion." "" curses(3X)
.xx "ex." "vi:" "screen oriented (visual) display editor based on" "" vi(1)
.xx "" "rc: command" "script for auto-reboot and daemons." "" rc(8)
.xx "" "" "script: make typescript of terminal session." "" script(1)
.xx "" "onintr: process interrupts in command" "scripts." "" csh(1)
.xx "" "/min, omin, fmin, m_in, mout, omout, fmout, m_out," "sdiv, itom: multiple precision integer arithmetic." "" mp(3X)
.xx "" "grep, egrep, fgrep:" "search a file for a pattern." "" grep(1)
.xx "" "xsend, xget, enroll:" "secret mail." "" xsend(1)
.xx "" "bad144: read/write dec standard 144 bad" "sector information." "" bad144(8)
.xx "" "badsect: create files to contain bad" "sectors." "" badsect(8)
.xx "" "" "sed: stream editor." "" sed(1)
.xx "" "opendir, readdir, telldir," "seekdir, rewinddir, closedir: directory operations." "" directory(3)
.xx "" "brk, sbrk: change data" "segment size." "" brk(2)
.xx "" "comm:" "select or reject lines common to two sorted files." "" comm(1)
.xx "" "" "select: synchronous I/O multiplexing." "" select(2)
.xx "" "case:" "selector in switch." "" csh(1)
.xx "" "uusend:" "send a file to a remote host." "" uusend(1C)
.xx "" "send, sendto, sendmsg:" "send a message from a socket." "" send(2)
.xx "" "kill:" "send a signal to a process." "" kill(3F)
.xx "" "mail:" "send and receive mail." "" mail(1)
.xx "" "ping:" "send ICMP ECHO_REQUEST packets to network hosts." "" ping(8)
.xx "" "sendmail:" "send mail over the internet." "" sendmail(8)
.xx "" "binmail:" "send or receive mail among users." "" binmail(1)
.xx "socket." "" "send, sendto, sendmsg: send a message from a" "" send(2)
.xx "" "kill:" "send signal to a process." "" kill(2)
.xx "" "killpg:" "send signal to a process group." "" killpg(2)
.xx "" "" "sendbug: mail a system bug report to 4bsd-bugs." "" sendbug(1)
.xx "" "aliases: aliases file for" "sendmail." "" aliases(5)
.xx "" "" "sendmail: send mail over the internet." "" sendmail(8)
.xx "" "send, sendto," "sendmsg: send a message from a socket." "" send(2)
.xx "" "send," "sendto, sendmsg: send a message from a socket." "" send(2)
.xx "" "diction, explain: print wordy" "sentences; thesaurus for diction." "" diction(1)
.xx "" "spp: Xerox" "Sequenced Packet Protocol." "" spp(4P)
.xx "" "trsp: transliterate" "sequenced packet protocol trace." "" trsp(8C)
.xx "" "slattach: attach" "serial lines as network interfaces." "" slattach(8C)
.xx "" "comsat: biff" "server." "" comsat(8C)
.xx "" "fingerd: remote user information" "server." "" fingerd(8C)
.xx "" "ftpd: DARPA Internet File Transfer Protocol" "server." "" ftpd(8C)
.xx "" "named: Internet domain name" "server." "" named(8)
.xx "" "rexecd: remote execution" "server." "" rexecd(8C)
.xx "" "rlogind: remote login" "server." "" rlogind(8C)
.xx "" "rshd: remote shell" "server." "" rshd(8C)
.xx "" "rwhod: system status" "server." "" rwhod(8C)
.xx "" "talkd: remote user communication" "server." "" talkd(8C)
.xx "" "telnetd: DARPA TELNET protocol" "server." "" telnetd(8C)
.xx "" "tftpd: DARPA Trivial File Transfer Protocol" "server." "" tftpd(8C)
.xx "" "timed: time" "server daemon." "" timed(8)
.xx "" "" "services: service name data base." "" services(5)
.xx "" "logout: end" "session." "" csh(1)
.xx "" "script: make typescript of terminal" "session." "" script(1)
.xx "" "ascii: map of ASCII character" "set." "" ascii(7)
.xx "" "stty, gtty:" "set and get terminal state (defunct)." "" stty(3C)
.xx "" "sigstack:" "set and/or get signal stack context." "" sigstack(2)
.xx "" "" "set: change value of shell variable." "" csh(1)
.xx "" "sigsetmask:" "set current signal mask." "" sigsetmask(2)
.xx "" "umask:" "set file creation mode mask." "" umask(2)
.xx "" "utime:" "set file times." "" utime(3C)
.xx "" "utimes:" "set file times." "" utimes(2)
.xx "" "setgroups:" "set group access list." "" setgroups(2)
.xx "" "apply: apply a command to a" "set of arguments." "" apply(1)
.xx "" "getsockopt, setsockopt: get and" "set options on sockets." "" getsockopt(2)
.xx "" "hostid:" "set or print identifier of current host system." "" hostid(1)
.xx "" "hostname:" "set or print name of current host system." "" hostname(1)
.xx "" "setpgrp:" "set process group." "" setpgrp(2)
.xx "" "nice:" "set program priority." "" nice(3C)
.xx "" "setregid:" "set real and effective group ID." "" setregid(2)
.xx "" "setreuid:" "set real and effective user ID's." "" setreuid(2)
.xx "" "eval, exec, exit, export, login, read, readonly," "set, shift, times, trap, umask, wait: command/" "/cd," sh(1)
.xx "" "getty:" "set terminal mode." "" getty(8)
.xx "" "stty:" "set terminal options." "" stty(1)
.xx "" "tabs:" "set terminal tabs." "" tabs(1)
.xx "" "date: print and" "set the date." "" date(1)
.xx "" "setuid, seteuid, setruid, setgid, setegid, setrgid:" "set user and group ID." "" setuid(3)
.xx "" "setenv:" "set variable in environment." "" csh(1)
.xx "a stream." "" "setbuf, setbuffer, setlinebuf: assign buffering to" "" setbuf(3S)
.xx "stream." "setbuf," "setbuffer, setlinebuf: assign buffering to a" "" setbuf(3S)
.xx "" "setuid, seteuid, setruid, setgid," "setegid, setrgid: set user and group ID." "" setuid(3)
.xx "" "" "setenv: set variable in environment." "" csh(1)
.xx "user and group ID." "setuid," "seteuid, setruid, setgid, setegid, setrgid: set" "" setuid(3)
.xx "entry." "getfsent, getfsspec, getfsfile, getfstype," "setfsent, endfsent: get file system descriptor file" "" getfsent(3)
.xx "" "setuid, seteuid, setruid," "setgid, setegid, setrgid: set user and group ID." "" setuid(3)
.xx "" "getgrent, getgrgid, getgrnam," "setgrent, endgrent: get group file entry." "" getgrent(3)
.xx "" "" "setgroups: set group access list." "" setgroups(2)
.xx "" "gethostbyname, gethostbyaddr, gethostent," "sethostent, endhostent: get network host entry." "" gethostbyname(3N)
.xx "host." "gethostid," "sethostid: get/set unique identifier of current" "" gethostid(2)
.xx "" "gethostname," "sethostname: get/set name of current host." "" gethostname(2)
.xx "" "getitimer," "setitimer: get/set value of interval timer." "" getitimer(2)
.xx "" "" "setjmp, longjmp: non-local goto." "" setjmp(3)
.xx "" "crypt," "setkey, encrypt: DES encryption." "" crypt(3)
.xx "" "setbuf, setbuffer," "setlinebuf: assign buffering to a stream." "" setbuf(3S)
.xx "" "syslog, openlog, closelog," "setlogmask: control system log." "" syslog(3)
.xx "" "getnetent, getnetbyaddr, getnetbyname," "setnetent, endnetent: get network entry." "" getnetent(3N)
.xx "" "" "setpgrp: set process group." "" setpgrp(2)
.xx "" "getpriority," "setpriority: get/set program scheduling priority." "" getpriority(2)
.xx "" "getprotoent, getprotobynumber, getprotobyname," "setprotoent, endprotoent: get protocol entry." "" getprotoent(3N)
.xx "entry." "getpwent, getpwuid, getpwnam," "setpwent, endpwent, setpwfile: get password file" "" getpwent(3)
.xx "" "getpwent, getpwuid, getpwnam, setpwent, endpwent," "setpwfile: get password file entry." "" getpwent(3)
.xx "" "" "setquota: enable/disable quotas on a file system." "" setquota(2)
.xx "" "" "setregid: set real and effective group ID." "" setregid(2)
.xx "" "" "setreuid: set real and effective user ID's." "" setreuid(2)
.xx "" "setuid, seteuid, setruid, setgid, setegid," "setrgid: set user and group ID." "" setuid(3)
.xx "consumption." "getrlimit," "setrlimit: control maximum system resource" "" getrlimit(2)
.xx "group ID." "setuid, seteuid," "setruid, setgid, setegid, setrgid: set user and" "" setuid(3)
.xx "" "getservent, getservbyport, getservbyname," "setservent, endservent: get service entry." "" getservent(3N)
.xx "" "getsockopt," "setsockopt: get and set options on sockets." "" getsockopt(2)
.xx "for changing/" "random, srandom, initstate," "setstate: better random number generator; routines" "" random(3)
.xx "" "gettimeofday," "settimeofday: get/set date and time." "" gettimeofday(2)
.xx "" "getttyent, getttynam," "setttyent, endttyent: get ttys file entry." "" getttyent(3)
.xx "set user and group ID." "" "setuid, seteuid, setruid, setgid, setegid, setrgid:" "" setuid(3)
.xx "" "getusershell," "setusershell, endusershell: get legal user shells." "" getusershell(3)
.xx "continue, cd, eval, exec, exit, export, login,/" "" "sh, for, case, if, while, \fB:\fP, \fB.\fP, break," "" sh(1)
.xx "" "xstr: extract strings from C programs to implement" "shared strings." "" xstr(1)
.xx "" "exit: leave" "shell." "" csh(1)
.xx "" "rsh: remote" "shell." "" rsh(1C)
.xx "" "system: issue a" "shell command." "" system(3)
.xx "" "csh: a" "shell (command interpreter) with C-like syntax." "" csh(1)
.xx "" "eval: re-evaluate" "shell data." "" csh(1)
.xx "" "popd: pop" "shell directory stack." "" csh(1)
.xx "" "pushd: push" "shell directory stack." "" csh(1)
.xx "" "alias:" "shell macros." "" csh(1)
.xx "" "suspend: suspend a" "shell, resuming its superior." "" csh(1)
.xx "" "rshd: remote" "shell server." "" rshd(8C)
.xx "" "set: change value of" "shell variable." "" csh(1)
.xx "" "@: arithmetic on" "shell variables." "" csh(1)
.xx "" "unset: discard" "shell variables." "" csh(1)
.xx "" "exec: overlay" "shell with specified command." "" csh(1)
.xx "" "setusershell, endusershell: get legal user" "shells." "getusershell," getusershell(3)
.xx "" "" "shift: manipulate argument list." "" csh(1)
.xx "" "/exec, exit, export, login, read, readonly, set," "shift, times, trap, umask, wait: command language." "" sh(1)
.xx "" "sail: multi-user wooden" "ships and iron men." "" sail(6)
.xx "" "long," "short: integer object conversion." "" long(3F)
.xx "" "groups:" "show group memberships." "" groups(1)
.xx "" "ruptime:" "show host status of local machines." "" ruptime(1C)
.xx "" "uptime:" "show how long system has been up." "" uptime(1)
.xx "" "lastcomm:" "show last commands executed in reverse order." "" lastcomm(1)
.xx "" "netstat:" "show network status." "" netstat(1)
.xx "" "uusnap:" "show snapshot of the UUCP system." "" uusnap(8C)
.xx "construct a file." "what:" "show what versions of object modules were used to" "" what(1)
.xx "" "shutdown:" "shut down part of a full-duplex connection." "" shutdown(2)
.xx "" "" "shutdown: close down the system at a given time." "" shutdown(8)
.xx "connection." "" "shutdown: shut down part of a full-duplex" "" shutdown(2)
.xx "" "" "sigblock: block signals." "" sigblock(2)
.xx "calls." "" "siginterrupt: allow signals to interrupt system" "" siginterrupt(3)
.xx "" "login:" "sign on." "" login(1)
.xx "" "pause: stop until" "signal." "" pause(3C)
.xx "" "signal: change the action for a" "signal." "" signal(3F)
.xx "" "sigreturn: return from" "signal." "" sigreturn(2)
.xx "" "alarm: schedule" "signal after specified time." "" alarm(3C)
.xx "" "ualarm: schedule" "signal after specified time." "" ualarm(3)
.xx "" "" "signal: change the action for a signal." "" signal(3F)
.xx "" "signal: simplified software" "signal facilities." "" signal(3C)
.xx "" "sigvec: software" "signal facilities." "" sigvec(2)
.xx "" "sigsetmask: set current" "signal mask." "" sigsetmask(2)
.xx "" "psignal, sys_siglist: system" "signal messages." "" psignal(3)
.xx "" "" "signal: simplified software signal facilities." "" signal(3C)
.xx "" "sigstack: set and/or get" "signal stack context." "" sigstack(2)
.xx "" "kill: send" "signal to a process." "" kill(2)
.xx "" "kill: send a" "signal to a process." "" kill(3F)
.xx "" "killpg: send" "signal to a process group." "" killpg(2)
.xx "" "sigblock: block" "signals." "" sigblock(2)
.xx "" "sigpause: atomically release blocked" "signals and wait for interrupt." "" sigpause(2)
.xx "(temporary)." "infnan:" "signals invalid floating-point operations on a VAX" "" infnan(3M)
.xx "" "siginterrupt: allow" "signals to interrupt system calls." "" siginterrupt(3)
.xx "wait for interrupt." "" "sigpause: atomically release blocked signals and" "" sigpause(2)
.xx "" "" "sigreturn: return from signal." "" sigreturn(2)
.xx "" "" "sigsetmask: set current signal mask." "" sigsetmask(2)
.xx "" "" "sigstack: set and/or get signal stack context." "" sigstack(2)
.xx "" "" "sigvec: software signal facilities." "" sigvec(2)
.xx "" "signal:" "simplified software signal facilities." "" signal(3C)
.xx "" "tc: photoypesetter" "simulator." "" tc(1)
.xx "trigonometric functions and their inverses." "" "sin, cos, tan, asin, acos, atan, atan2:" "" sin(3M)
.xx "" "" "sinh, cosh, tanh: hyperbolic functions." "" sinh(3M)
.xx "" "null: data" "sink." "" null(4)
.xx "" "uupoll: poll a remote UUCP" "site." "" uupoll(8C)
.xx "" "brk, sbrk: change data segment" "size." "" brk(2)
.xx "" "getdtablesize: get descriptor table" "size." "" getdtablesize(2)
.xx "" "getpagesize: get system page" "size." "" getpagesize(2)
.xx "" "pagesize: print system page" "size." "" pagesize(1)
.xx "" "size:" "size of an object file." "" size(1)
.xx "" "" "size: size of an object file." "" size(1)
.xx "" "diskpart: calculate default disk partition" "sizes." "" diskpart(8)
.xx "interfaces." "" "slattach: attach serial lines as network" "" slattach(8C)
.xx "" "" "sleep: suspend execution for an interval." "" sleep(1)
.xx "" "" "sleep: suspend execution for an interval." "" sleep(3F)
.xx "" "" "sleep: suspend execution for interval." "" sleep(3)
.xx "" "spline: interpolate" "smooth curve." "" spline(1G)
.xx "" "" "snake, snscore: display chase game." "" snake(6)
.xx "" "uusnap: show" "snapshot of the UUCP system." "" uusnap(8C)
.xx "" "snake," "snscore: display chase game." "" snake(6)
.xx "" "accept: accept a connection on a" "socket." "" accept(2)
.xx "" "bind: bind a name to a" "socket." "" bind(2)
.xx "" "connect: initiate a connection on a" "socket." "" connect(2)
.xx "" "listen: listen for connections on a" "socket." "" listen(2)
.xx "" "recv, recvfrom, recvmsg: receive a message from a" "socket." "" recv(2)
.xx "" "send, sendto, sendmsg: send a message from a" "socket." "" send(2)
.xx "" "" "socket: create an endpoint for communication." "" socket(2)
.xx "" "imp: IMP raw" "socket interface." "" imp(4P)
.xx "" "getsockname: get" "socket name." "" getsockname(2)
.xx "" "" "socketpair: create a pair of connected sockets." "" socketpair(2)
.xx "" "getsockopt, setsockopt: get and set options on" "sockets." "" getsockopt(2)
.xx "" "socketpair: create a pair of connected" "sockets." "" socketpair(2)
.xx "" "" "soelim: eliminate \&.so's from nroff input." "" soelim(1)
.xx "" "lo:" "software loopback network interface." "" lo(4)
.xx "in ip packets.." "nsip:" "software network interface encapsulating ns packets" "" nsip(4)
.xx "" "signal: simplified" "software signal facilities." "" signal(3C)
.xx "" "sigvec:" "software signal facilities." "" sigvec(2)
.xx "" "canfield, cfscores: the" "solitaire card game canfield." "" canfield(6)
.xx "" "qsort: quicker" "sort." "" qsort(3)
.xx "" "qsort: quick" "sort." "" qsort(3F)
.xx "" "tsort: topological" "sort." "" tsort(1)
.xx "" "sortbib:" "sort bibliographic database." "" sortbib(1)
.xx "" "sort:" "sort or merge files." "" sort(1)
.xx "" "" "sort: sort or merge files." "" sort(1)
.xx "" "" "sortbib: sort bibliographic database." "" sortbib(1)
.xx "" "comm: select or reject lines common to two" "sorted files." "" comm(1)
.xx "" "look: find lines in a" "sorted list." "" look(1)
.xx "" "soelim: eliminate" "\&.so's from nroff input." "" soelim(1)
.xx "" "soelim: eliminate \&." "so's from nroff input." "" soelim(1)
.xx "" "indent: indent and format C program" "source." "" indent(1)
.xx "" "mkstr: create an error message file by massaging C" "source." "" mkstr(1)
.xx "" "whereis: locate" "source, binary, and or manual for program." "" whereis(1)
.xx "" "" "source: read commands from file." "" csh(1)
.xx "" "line, circle, arc, move, cont, point, linemod," "space, closepl: graphics interface." "/erase, label," plot(3X)
.xx "" "expand, unexpand: expand tabs to" "spaces, and vice versa." "" expand(1)
.xx "way." "vfork:" "spawn new process in a virtual memory efficient" "" vfork(2)
.xx "" "exec: overlay shell with" "specified command." "" csh(1)
.xx "" "truncate: truncate a file to a" "specified length." "" truncate(2)
.xx "" "alarm: schedule signal after" "specified time." "" alarm(3C)
.xx "" "alarm: execute a subroutine after a" "specified time." "" alarm(3F)
.xx "" "ualarm: schedule signal after" "specified time." "" ualarm(3)
.xx "" "swapon:" "specify additional device for paging and swapping." "" swapon(8)
.xx "" "" "spell, spellin, spellout: find spelling errors." "" spell(1)
.xx "" "spell," "spellin, spellout: find spelling errors." "" spell(1)
.xx "" "spell, spellin, spellout: find" "spelling errors." "" spell(1)
.xx "" "spell, spellin," "spellout: find spelling errors." "" spell(1)
.xx "" "" "spline: interpolate smooth curve." "" spline(1G)
.xx "" "split:" "split a file into pieces." "" split(1)
.xx "files." "fsplit:" "split a multi-routine Fortran file into individual" "" fsplit(1)
.xx "" "frexp, ldexp, modf:" "split into mantissa and exponent." "" frexp(3)
.xx "" "" "split: split a file into pieces." "" split(1)
.xx "" "uuclean: uucp" "spool directory clean-up." "" uuclean(8C)
.xx "" "lpq:" "spool queue examination program." "" lpq(1)
.xx "" "atrm: remove jobs" "spooled by at." "" atrm(1)
.xx "" "lprm: remove jobs from the line printer" "spooling queue." "" lprm(1)
.xx "" "" "spp: Xerox Sequenced Packet Protocol." "" spp(4P)
.xx "" "printf, fprintf," "sprintf: formatted output conversion." "" printf(3S)
.xx "" "cbrt," "sqrt: cube root, square root." "" sqrt(3M)
.xx "" "cbrt, sqrt: cube root," "square root." "" sqrt(3M)
.xx "" "rand," "srand: random number generator." "" rand(3C)
.xx "generator; routines for changing/" "random," "srandom, initstate, setstate: better random number" "" random(3)
.xx "" "scanf, fscanf," "sscanf: formatted input conversion." "" scanf(3S)
.xx "" "" "stab: symbol table types." "" stab(5)
.xx "" "popd: pop shell directory" "stack." "" csh(1)
.xx "" "pushd: push shell directory" "stack." "" csh(1)
.xx "" "sigstack: set and/or get signal" "stack context." "" sigstack(2)
.xx "" "drtest:" "standalone disk test program." "" drtest(8)
.xx "" "bad144: read/write dec" "standard 144 bad sector information." "" bad144(8)
.xx "" "stdio:" "standard buffered input/output package." "" stdio(3S)
.xx "" "htable: convert NIC" "standard format host tables." "" htable(8)
.xx "" "ddn: DDN" "Standard Mode X.25 IMP interface." "" ddn(4)
.xx "" "" "stat, lstat, fstat: get file status." "" stat(2)
.xx "" "" "stat, lstat, fstat: get file status." "" stat(3F)
.xx "" "stty, gtty: set and get terminal" "state (defunct)." "" stty(3C)
.xx "" "fsync: synchronize a file's in-core" "state with that on disk." "" fsync(2)
.xx "" "if: conditional" "statement." "" csh(1)
.xx "" "fstab:" "static information about the filesystems." "" fstab(5)
.xx "" "hashstat: print command hashing" "statistics." "" csh(1)
.xx "" "iostat: report I/O" "statistics." "" iostat(1)
.xx "" "vmstat: report virtual memory" "statistics." "" vmstat(1)
.xx "" "systat: display system" "statistics on a crt." "" systat(1)
.xx "" "exit: terminate process with" "status." "" exit(3F)
.xx "" "netstat: show network" "status." "" netstat(1)
.xx "" "ps: process" "status." "" ps(1)
.xx "" "stat, lstat, fstat: get file" "status." "" stat(2)
.xx "" "stat, lstat, fstat: get file" "status." "" stat(3F)
.xx "" "ferror, feof, clearerr, fileno: stream" "status inquiries." "" ferror(3S)
.xx "" "sysline: display system status on" "status line of a terminal." "" sysline(1)
.xx "" "ruptime: show host" "status of local machines." "" ruptime(1C)
.xx "" "sysline: display system" "status on status line of a terminal." "" sysline(1)
.xx "" "rwhod: system" "status server." "" rwhod(8C)
.xx "" "" "stdio: standard buffered input/output package." "" stdio(3S)
.xx "directories." "" "sticky: persistent text and append-only" "" sticky(8)
.xx "" "" "stop: halt a job or process." "" csh(1)
.xx "" "halt:" "stop the processor." "" halt(8)
.xx "" "pause:" "stop until signal." "" pause(3C)
.xx "" "icheck: file system" "storage consistency check." "" icheck(8)
.xx "" "up: unibus" "storage module controller/drives." "" up(4)
.xx "subroutines." "dbminit, fetch," "store, delete, firstkey, nextkey: data base" "" dbm(3X)
.xx "strlen, index, rindex: string operations." "" "strcat, strncat, strcmp, strncmp, strcpy, strncpy," "" string(3)
.xx "rindex: string operations." "strcat, strncat," "strcmp, strncmp, strcpy, strncpy, strlen, index," "" string(3)
.xx "operations." "strcat, strncat, strcmp, strncmp," "strcpy, strncpy, strlen, index, rindex: string" "" string(3)
.xx "" "fclose, fflush: close or flush a" "stream." "" fclose(3S)
.xx "" "fopen, freopen, fdopen: open a" "stream." "" fopen(3S)
.xx "" "fseek, ftell, rewind: reposition a" "stream." "" fseek(3S)
.xx "" "getchar, fgetc, getw: get character or word from" "stream." "getc," getc(3S)
.xx "" "gets, fgets: get a string from a" "stream." "" gets(3S)
.xx "" "putchar, fputc, putw: put character or word on a" "stream." "putc," putc(3S)
.xx "" "puts, fputs: put a string on a" "stream." "" puts(3S)
.xx "" "setbuffer, setlinebuf: assign buffering to a" "stream." "setbuf," setbuf(3S)
.xx "" "ungetc: push character back into input" "stream." "" ungetc(3S)
.xx "" "sed:" "stream editor." "" sed(1)
.xx "" "ferror, feof, clearerr, fileno:" "stream status inquiries." "" ferror(3S)
.xx "" "rcmd, rresvport, ruserok: routines for returning a" "stream to a remote command." "" rcmd(3)
.xx "" "rexec: return" "stream to a remote command." "" rexec(3)
.xx "" "fdate: return date and time in an ASCII" "string." "" fdate(3F)
.xx "" "gets, fgets: get a" "string from a stream." "" gets(3S)
.xx "" "puts, fputs: put a" "string on a stream." "" puts(3S)
.xx "" "bcopy, bcmp, bzero, ffs: bit and byte" "string operations." "" bstring(3)
.xx "" "strncmp, strcpy, strncpy, strlen, index, rindex:" "string operations." "strcat, strncat, strcmp," string(3)
.xx "" "extract strings from C programs to implement shared" "strings." "xstr:" xstr(1)
.xx "other binary, file." "" "strings: find the printable strings in a object, or" "" strings(1)
.xx "strings." "xstr: extract" "strings from C programs to implement shared" "" xstr(1)
.xx "" "strings: find the printable" "strings in a object, or other binary, file." "" strings(1)
.xx "" "basename:" "strip filename affixes." "" basename(1)
.xx "" "" "strip: remove symbols and relocation bits." "" strip(1)
.xx "" "strcat, strncat, strcmp, strncmp, strcpy, strncpy," "strlen, index, rindex: string operations." "" string(3)
.xx "index, rindex: string operations." "strcat," "strncat, strcmp, strncmp, strcpy, strncpy, strlen," "" string(3)
.xx "string operations." "strcat, strncat, strcmp," "strncmp, strcpy, strncpy, strlen, index, rindex:" "" string(3)
.xx "" "strcat, strncat, strcmp, strncmp, strcpy," "strncpy, strlen, index, rindex: string operations." "" string(3)
.xx "" "" "struct: structure Fortran programs." "" struct(1)
.xx "" "struct:" "structure Fortran programs." "" struct(1)
.xx "" "" "stty, gtty: set and get terminal state (defunct)." "" stty(3C)
.xx "" "" "stty: set terminal options." "" stty(1)
.xx "document." "" "style: analyze surface characteristics of a" "" style(1)
.xx "" "" "su: substitute user id temporarily." "" su(1)
.xx "" "alarm: execute a" "subroutine after a specified time." "" alarm(3F)
.xx "" "fetch, store, delete, firstkey, nextkey: data base" "subroutines." "dbminit," dbm(3X)
.xx "" "dbm_nextkey, dbm_error, dbm_clearerr: data base" "subroutines." "/dbm_store, dbm_delete, dbm_firstkey," ndbm(3)
.xx "" "lib2648:" "subroutines for the HP 2648 graphics terminal." "" lib2648(3X)
.xx "" "su:" "substitute user id temporarily." "" su(1)
.xx "" "sccs: front end for the SCCS" "subsystem." "" sccs(1)
.xx "" "sum:" "sum and count blocks in a file." "" sum(1)
.xx "" "" "sum: sum and count blocks in a file." "" sum(1)
.xx "" "du:" "summarize disk usage." "" du(1)
.xx "" "quot:" "summarize file system ownership." "" quot(8)
.xx "" "repquota:" "summarize quotas for a file system." "" repquota(8)
.xx "" "sync: update the" "super block." "" sync(8)
.xx "" "update: periodically update the" "super block." "" update(8)
.xx "" "sync: update" "super-block." "" sync(2)
.xx "" "suspend: suspend a shell, resuming its" "superior." "" csh(1)
.xx "" "inetd: internet" "``super\-server''." "" inetd(8)
.xx "" "intro: introduction to special files and hardware" "support." "" intro(4)
.xx "" "style: analyze" "surface characteristics of a document." "" style(1)
.xx "" "suspend:" "suspend a shell, resuming its superior." "" csh(1)
.xx "" "sleep:" "suspend execution for an interval." "" sleep(1)
.xx "" "sleep:" "suspend execution for an interval." "" sleep(3F)
.xx "" "sleep:" "suspend execution for interval." "" sleep(3)
.xx "" "usleep:" "suspend execution for interval." "" usleep(3)
.xx "" "" "suspend: suspend a shell, resuming its superior." "" csh(1)
.xx "interface." "ps: Evans and" "Sutherland Picture System 2 graphics device" "" ps(4)
.xx "" "" "swab: swap bytes." "" swab(3)
.xx "" "swab:" "swap bytes." "" swab(3)
.xx "" "swapon: add a" "swap device for interleaved paging/swapping." "" swapon(2)
.xx "paging/swapping." "" "swapon: add a swap device for interleaved" "" swapon(2)
.xx "swapping." "" "swapon: specify additional device for paging and" "" swapon(8)
.xx "" "swapon: specify additional device for paging and" "swapping." "" swapon(8)
.xx "" "breaksw: exit from" "switch." "" csh(1)
.xx "" "case: selector in" "switch." "" csh(1)
.xx "" "default: catchall clause in" "switch." "" csh(1)
.xx "" "endsw: terminate" "switch." "" csh(1)
.xx "" "" "switch: multi-way command branch." "" csh(1)
.xx "" "dbx: dbx" "symbol table information." "" dbx(5)
.xx "" "stab:" "symbol table types." "" stab(5)
.xx "" "readlink: read value of a" "symbolic link." "" readlink(2)
.xx "" "symlink: make" "symbolic link to a file." "" symlink(2)
.xx "" "strip: remove" "symbols and relocation bits." "" strip(1)
.xx "" "" "symlink: make symbolic link to a file." "" symlink(2)
.xx "" "" "symorder: rearrange name list." "" symorder(1)
.xx "" "" "sync: update super-block." "" sync(2)
.xx "" "" "sync: update the super block." "" sync(8)
.xx "" "adjtime: correct the time to allow" "synchronization of the system clock." "" adjtime(2)
.xx "disk." "fsync:" "synchronize a file's in-core state with that on" "" fsync(2)
.xx "" "select:" "synchronous I/O multiplexing." "" select(2)
.xx "" "csh: a shell (command interpreter) with C-like" "syntax." "" csh(1)
.xx "" "L." "sys: UUCP remote host description file." "" L.sys(5)
.xx "" "" "syscall: indirect system call." "" syscall(2)
.xx "" "perror," "sys_errlist, sys_nerr: system error messages." "" perror(3)
.xx "terminal." "" "sysline: display system status on status line of a" "" sysline(1)
.xx "system log." "" "syslog, openlog, closelog, setlogmask: control" "" syslog(3)
.xx "" "" "syslogd: log systems messages." "" syslogd(8)
.xx "" "perror, sys_errlist," "sys_nerr: system error messages." "" perror(3)
.xx "" "psignal," "sys_siglist: system signal messages." "" psignal(3)
.xx "" "" "systat: display system statistics on a crt." "" systat(1)
.xx "" "hy: Network" "Systems Hyperchannel interface." "" hy(4)
.xx "" "syslogd: log" "systems messages." "" syslogd(8)
.xx "" "kgmon: generate a dump of the operating" "system's profile buffers." "" kgmon(8)
.xx "" "ns: Xerox Network" "Systems(tm) protocol family." "" ns(4F)
.xx "" "rehash: recompute command hash" "table." "" csh(1)
.xx "" "unhash: discard command hash" "table." "" csh(1)
.xx "" "mkhosts: generate hashed host" "table." "" mkhosts(8)
.xx "" "mkpasswd: generate hashed password" "table." "" mkpasswd(8)
.xx "" "mtab: mounted file system" "table." "" mtab(5)
.xx "" "vwidth: make troff width" "table for a font." "" vwidth(1)
.xx "" "dbx: dbx symbol" "table information." "" dbx(5)
.xx "" "getdtablesize: get descriptor" "table size." "" getdtablesize(2)
.xx "" "stab: symbol" "table types." "" stab(5)
.xx "" "htable: convert NIC standard format host" "tables." "" htable(8)
.xx "" "route: manually manipulate the routing" "tables." "" route(8C)
.xx "" "tbl: format" "tables for nroff or troff." "" tbl(1)
.xx "" "gettable: get NIC format host" "tables from a host." "" gettable(8C)
.xx "" "tabs: set terminal" "tabs." "" tabs(1)
.xx "" "" "tabs: set terminal tabs." "" tabs(1)
.xx "" "expand, unexpand: expand" "tabs to spaces, and vice versa." "" expand(1)
.xx "" "ctags: create a" "tags file." "" ctags(1)
.xx "" "" "tail: deliver the last part of a file." "" tail(1)
.xx "" "" "talk: talk to another user." "" talk(1)
.xx "" "talk:" "talk to another user." "" talk(1)
.xx "" "" "talkd: remote user communication server." "" talkd(8C)
.xx "functions and their inverses." "sin, cos," "tan, asin, acos, atan, atan2: trigonometric" "" sin(3M)
.xx "" "sinh, cosh," "tanh: hyperbolic functions." "" sinh(3M)
.xx "" "tcopy: copy a mag" "tape." "" tcopy(1)
.xx "" "tp: manipulate" "tape archive." "" tp(1)
.xx "" "tar:" "tape archive file format." "" tar(5)
.xx "" "tar:" "tape archiver." "" tar(1)
.xx "" "ut: UNIBUS TU45 tri-density" "tape drive interface." "" ut(4)
.xx "" "tp: DEC/mag" "tape formats." "" tp(5)
.xx "" "tclose, tread, twrite, trewin, tskipf, tstate: f77" "tape I/O." "topen," topen(3F)
.xx "" "mt: magnetic" "tape manipulating program." "" mt(1)
.xx "" "" "tar: tape archive file format." "" tar(5)
.xx "" "" "tar: tape archiver." "" tar(1)
.xx "" "" "tb: line discipline for digitizing devices." "" tb(4)
.xx "" "deroff: remove nroff, troff," "tbl and eqn constructs." "" deroff(1)
.xx "" "" "tbl: format tables for nroff or troff." "" tbl(1)
.xx "" "" "tc: photoypesetter simulator." "" tc(1)
.xx "tape I/O." "topen," "tclose, tread, twrite, trewin, tskipf, tstate: f77" "" topen(3F)
.xx "" "" "tcopy: copy a mag tape." "" tcopy(1)
.xx "" "" "tcp: Internet Transmission Control Protocol." "" tcp(4P)
.xx "" "" "tee: pipe fitting." "" tee(1)
.xx "" "tk: paginator for the" "Tektronix 4014." "" tk(1)
.xx "" "last: indicate last logins of users and" "teletypes." "" last(1)
.xx "" "index, rindex, lnblnk, len:" "tell about character objects." "" index(3F)
.xx "operations." "opendir, readdir," "telldir, seekdir, rewinddir, closedir: directory" "" directory(3)
.xx "" "telnet: user interface to the" "TELNET protocol." "" telnet(1C)
.xx "" "telnetd: DARPA" "TELNET protocol server." "" telnetd(8C)
.xx "" "" "telnet: user interface to the TELNET protocol." "" telnet(1C)
.xx "" "" "telnetd: DARPA TELNET protocol server." "" telnetd(8C)
.xx "" "su: substitute user id" "temporarily." "" su(1)
.xx "" "signals invalid floating-point operations on a VAX" "(temporary)." "infnan:" infnan(3M)
.xx "" "" "term: conventional names for terminals." "" term(7)
.xx "" "" "termcap: terminal capability data base." "" termcap(5)
.xx "" "lib2648: subroutines for the HP 2648 graphics" "terminal." "" lib2648(3X)
.xx "" "lock: reserve a" "terminal." "" lock(1)
.xx "" "sysline: display system status on status line of a" "terminal." "" sysline(1)
.xx "" "ttyname, isatty, ttyslot: find name of a" "terminal." "" ttyname(3)
.xx "" "vhangup: virtually ``hangup'' the current control" "terminal." "" vhangup(2)
.xx "" "worms: animate worms on a display" "terminal." "" worms(6)
.xx "" "termcap:" "terminal capability data base." "" termcap(5)
.xx "" "gettytab:" "terminal configuration data base." "" gettytab(5)
.xx "" "tset:" "terminal dependent initialization." "" tset(1)
.xx "" "pty: pseudo" "terminal driver." "" pty(4)
.xx "" "tgetent, tgetnum, tgetflag, tgetstr, tgoto, tputs:" "terminal independent operation routines." "" termcap(3X)
.xx "" "ttys:" "terminal initialization data." "" ttys(5)
.xx "" "tty: general" "terminal interface." "" tty(4)
.xx "" "getty: set" "terminal mode." "" getty(8)
.xx "" "dmf: DMF-32," "terminal multiplexor." "" dmf(4)
.xx "" "dmz: DMZ-32" "terminal multiplexor." "" dmz(4)
.xx "" "tty: get" "terminal name." "" tty(1)
.xx "" "stty: set" "terminal options." "" stty(1)
.xx "" "ttynam, isatty: find name of a" "terminal port." "" ttynam(3F)
.xx "" "clear: clear" "terminal screen." "" clear(1)
.xx "" "script: make typescript of" "terminal session." "" script(1)
.xx "" "stty, gtty: set and get" "terminal state (defunct)." "" stty(3C)
.xx "" "tabs: set" "terminal tabs." "" tabs(1)
.xx "" "term: conventional names for" "terminals." "" term(7)
.xx "" "wait, wait3: wait for process to" "terminate." "" wait(2)
.xx "" "wait: wait for a process to" "terminate." "" wait(3F)
.xx "" "_exit:" "terminate a process." "" exit(2)
.xx "output." "exit:" "terminate a process after flushing any pending" "" exit(3)
.xx "" "kill:" "terminate a process with extreme prejudice." "" kill(1)
.xx "" "endif:" "terminate conditional." "" csh(1)
.xx "" "end:" "terminate loop." "" csh(1)
.xx "" "exit:" "terminate process with status." "" exit(3F)
.xx "" "endsw:" "terminate switch." "" csh(1)
.xx "" "abort: abnormal" "termination." "" abort(3F)
.xx "" "" "test: condition command." "" test(1)
.xx "" "drtest: standalone disk" "test program." "" drtest(8)
.xx "" "quiz:" "test your knowledge." "" quiz(6)
.xx "" "sticky: persistent" "text and append-only directories." "" sticky(8)
.xx "" "ed:" "text editor." "" ed(1)
.xx "" "ex, edit:" "text editor." "" ex(1)
.xx "" "jove: an interactive display-oriented" "text editor." "" jove(1)
.xx "" "fmt: simple" "text formatter." "" fmt(1)
.xx "" "nroff:" "text formatting." "" nroff(1)
.xx "" "troff, nroff:" "text formatting and typesetting." "" troff(1)
.xx "" "ms:" "text formatting macros." "" ms(7)
.xx "" "" "tftp: trivial file transfer program." "" tftp(1C)
.xx "" "" "tftpd: DARPA Trivial File Transfer Protocol server." "" tftpd(8C)
.xx "terminal independent operation routines." "" "tgetent, tgetnum, tgetflag, tgetstr, tgoto, tputs:" "" termcap(3X)
.xx "independent operation routines." "tgetent, tgetnum," "tgetflag, tgetstr, tgoto, tputs: terminal" "" termcap(3X)
.xx "independent operation routines." "tgetent," "tgetnum, tgetflag, tgetstr, tgoto, tputs: terminal" "" termcap(3X)
.xx "operation routines." "tgetent, tgetnum, tgetflag," "tgetstr, tgoto, tputs: terminal independent" "" termcap(3X)
.xx "routines." "tgetent, tgetnum, tgetflag, tgetstr," "tgoto, tputs: terminal independent operation" "" termcap(3X)
.xx "" "acos, atan, atan2: trigonometric functions and" "their inverses." "sin, cos, tan, asin," sin(3M)
.xx "" "diction, explain: print wordy sentences;" "thesaurus for diction." "" diction(1)
.xx "" "alarm: schedule signal after specified" "time." "" alarm(3C)
.xx "" "alarm: execute a subroutine after a specified" "time." "" alarm(3F)
.xx "" "at: execute commands at a later" "time." "" at(1)
.xx "" "etime, dtime: return elapsed execution" "time." "" etime(3F)
.xx "" "gettimeofday, settimeofday: get/set date and" "time." "" gettimeofday(2)
.xx "" "shutdown: close down the system at a given" "time." "" shutdown(8)
.xx "" "time, ftime: get date and" "time." "" time(3C)
.xx "" "time, ctime, ltime, gmtime: return system" "time." "" time(3F)
.xx "" "ualarm: schedule signal after specified" "time." "" ualarm(3)
.xx "" "time:" "time a command." "" time(1)
.xx "" "time:" "time command." "" csh(1)
.xx "" "" "time, ctime, ltime, gmtime: return system time." "" time(3F)
.xx "" "" "time, ftime: get date and time." "" time(3C)
.xx "" "fdate: return date and" "time in an ASCII string." "" fdate(3F)
.xx "" "idate, itime: return date or" "time in numerical form." "" idate(3F)
.xx "" "profil: execution" "time profile." "" profil(2)
.xx "" "timed:" "time server daemon." "" timed(8)
.xx "" "" "time: time a command." "" time(1)
.xx "" "" "time: time command." "" csh(1)
.xx "" "adjtime: correct the" "time to allow synchronization of the system clock." "" adjtime(2)
.xx "" "gmtime, asctime, timezone: convert date and" "time to ASCII." "ctime, localtime," ctime(3)
.xx "" "timedc:" "timed control program." "" timedc(8)
.xx "" "" "timed: time server daemon." "" timed(8)
.xx "" "" "timedc: timed control program." "" timedc(8)
.xx "" "getitimer, setitimer: get/set value of interval" "timer." "" getitimer(2)
.xx "" "times: get process" "times." "" times(3C)
.xx "" "utime: set file" "times." "" utime(3C)
.xx "" "utimes: set file" "times." "" utimes(2)
.xx "" "" "times: get process times." "" times(3C)
.xx "" "exit, export, login, read, readonly, set, shift," "times, trap, umask, wait: command language." "/exec," sh(1)
.xx "" "ctime, localtime, gmtime, asctime," "timezone: convert date and time to ASCII." "" ctime(3)
.xx "" "" "tip, cu: connect to a remote system." "" tip(1C)
.xx "" "" "tk: paginator for the Tektronix 4014." "" tk(1)
.xx "" "" "tm: TM-11/TE-10 magtape interface." "" tm(4)
.xx "" "ht:" "TM-03/TE-16,TU-45,TU-77 MASSBUS magtape interface." "" ht(4)
.xx "" "tm:" "TM-11/TE-10 magtape interface." "" tm(4)
.xx "" "mt:" "TM78/TU-78 MASSBUS magtape interface." "" mt(4)
.xx "" "" "tmscp: DEC TMSCP magtape interface." "" tmscp(4)
.xx "" "tmscp: DEC" "TMSCP magtape interface." "" tmscp(4)
.xx "" "" "tn3270: full-screen remote login to IBM VM/CMS." "" tn3270(1)
.xx "" "isgraph, iscntrl, isascii, toupper, tolower," "toascii: character classification macros." "/isprint," ctype(3)
.xx "" "popen, pclose: initiate I/O" "to/from a process." "" popen(3)
.xx "" "/isprint, isgraph, iscntrl, isascii, toupper," "tolower, toascii: character classification macros." "" ctype(3)
.xx "tstate: f77 tape I/O." "" "topen, tclose, tread, twrite, trewin, tskipf," "" topen(3F)
.xx "" "tsort:" "topological sort." "" tsort(1)
.xx "" "" "touch: update date last modified of a file." "" touch(1)
.xx "" "/ispunct, isprint, isgraph, iscntrl, isascii," "toupper, tolower, toascii: character classification/" "" ctype(3)
.xx "" "" "tp: DEC/mag tape formats." "" tp(5)
.xx "" "" "tp: manipulate tape archive." "" tp(1)
.xx "" "tgetent, tgetnum, tgetflag, tgetstr, tgoto," "tputs: terminal independent operation routines." "" termcap(3X)
.xx "" "" "tr: translate characters." "" tr(1)
.xx "" "ptrace: process" "trace." "" ptrace(2)
.xx "" "trpt: transliterate protocol" "trace." "" trpt(8C)
.xx "" "trsp: transliterate sequenced packet protocol" "trace." "" trsp(8C)
.xx "" "goto: command" "transfer." "" csh(1)
.xx "" "uucico, uucpd:" "transfer files queued by uucp or uux." "" uucico(8C)
.xx "" "ftp: ARPANET file" "transfer program." "" ftp(1C)
.xx "" "tftp: trivial file" "transfer program." "" tftp(1C)
.xx "" "ftpd: DARPA Internet File" "Transfer Protocol server." "" ftpd(8C)
.xx "" "tftpd: DARPA Trivial File" "Transfer Protocol server." "" tftpd(8C)
.xx "" "tr:" "translate characters." "" tr(1)
.xx "" "ad: Data" "Translation A/D converter." "" ad(4)
.xx "" "pi: Pascal interpreter code" "translator." "" pi(1)
.xx "" "trpt:" "transliterate protocol trace." "" trpt(8C)
.xx "" "trsp:" "transliterate sequenced packet protocol trace." "" trsp(8C)
.xx "" "tcp: Internet" "Transmission Control Protocol." "" tcp(4P)
.xx "" "uuencode, uudecode: encode/decode a binary file for" "transmission via mail." "" uuencode(1C)
.xx "" "trpfpe, fpecnt:" "trap and repair floating point faults." "" trpfpe(3F)
.xx "" "trapov:" "trap and repair floating point overflow." "" trapov(3F)
.xx "" "traper:" "trap arithmetic errors." "" traper(3F)
.xx "" "export, login, read, readonly, set, shift, times," "trap, umask, wait: command language." "/exec, exit," sh(1)
.xx "" "" "traper: trap arithmetic errors." "" traper(3F)
.xx "" "" "trapov: trap and repair floating point overflow." "" trapov(3F)
.xx "I/O." "topen, tclose," "tread, twrite, trewin, tskipf, tstate: f77 tape" "" topen(3F)
.xx "" "" "trek: trekkie game." "" trek(6)
.xx "" "trek:" "trekkie game." "" trek(6)
.xx "" "topen, tclose, tread, twrite," "trewin, tskipf, tstate: f77 tape I/O." "" topen(3F)
.xx "" "ut: UNIBUS TU45" "tri-density tape drive interface." "" ut(4)
.xx "" "sin, cos, tan, asin, acos, atan, atan2:" "trigonometric functions and their inverses." "" sin(3M)
.xx "" "tftp:" "trivial file transfer program." "" tftp(1C)
.xx "" "tftpd: DARPA" "Trivial File Transfer Protocol server." "" tftpd(8C)
.xx "" "tbl: format tables for nroff or" "troff." "" tbl(1)
.xx "" "Lisp programs to be printed with nroff, vtroff, or" "troff." "vlp: Format" vlp(1)
.xx "" "" "troff, nroff: text formatting and typesetting." "" troff(1)
.xx "" "deroff: remove nroff," "troff, tbl and eqn constructs." "" deroff(1)
.xx "" "vwidth: make" "troff width table for a font." "" vwidth(1)
.xx "" "battlestar: a" "tropical adventure game." "" battlestar(6)
.xx "faults." "" "trpfpe, fpecnt: trap and repair floating point" "" trpfpe(3F)
.xx "" "" "trpt: transliterate protocol trace." "" trpt(8C)
.xx "trace." "" "trsp: transliterate sequenced packet protocol" "" trsp(8C)
.xx "" "" "true, false: provide truth values." "" true(1)
.xx "" "false," "true: provide truth values." "" false(1)
.xx "" "truncate:" "truncate a file to a specified length." "" truncate(2)
.xx "" "" "truncate: truncate a file to a specified length." "" truncate(2)
.xx "" "false, true: provide" "truth values." "" false(1)
.xx "" "true, false: provide" "truth values." "" true(1)
.xx "" "" "ts: TS-11 magtape interface." "" ts(4)
.xx "" "ts:" "TS-11 magtape interface." "" ts(4)
.xx "" "" "tset: terminal dependent initialization." "" tset(1)
.xx "" "topen, tclose, tread, twrite, trewin," "tskipf, tstate: f77 tape I/O." "" topen(3F)
.xx "" "" "tsort: topological sort." "" tsort(1)
.xx "" "topen, tclose, tread, twrite, trewin, tskipf," "tstate: f77 tape I/O." "" topen(3F)
.xx "" "" "tty: general terminal interface." "" tty(4)
.xx "" "" "tty: get terminal name." "" tty(1)
.xx "" "" "ttynam, isatty: find name of a terminal port." "" ttynam(3F)
.xx "" "" "ttyname, isatty, ttyslot: find name of a terminal." "" ttyname(3)
.xx "" "getttyent, getttynam, setttyent, endttyent: get" "ttys file entry." "" getttyent(3)
.xx "" "" "ttys: terminal initialization data." "" ttys(5)
.xx "" "ttyname, isatty," "ttyslot: find name of a terminal." "" ttyname(3)
.xx "interface." "" "tu: VAX-11/730 and VAX-11/750 TU58 console cassette" "" tu(4)
.xx "" "ut: UNIBUS" "TU45 tri-density tape drive interface." "" ut(4)
.xx "" "ht: TM-03/TE-16," "TU-45,TU-77 MASSBUS magtape interface." "" ht(4)
.xx "" "tu: VAX-11/730 and VAX-11/750" "TU58 console cassette interface." "" tu(4)
.xx "" "uu:" "TU58/DECtape II UNIBUS cassette interface." "" uu(4)
.xx "" "ht: TM-03/TE-16,TU-45," "TU-77 MASSBUS magtape interface." "" ht(4)
.xx "" "tunefs:" "tune up an existing file system." "" tunefs(8)
.xx "" "" "tunefs: tune up an existing file system." "" tunefs(8)
.xx "" "topen, tclose, tread," "twrite, trewin, tskipf, tstate: f77 tape I/O." "" topen(3F)
.xx "" "file: determine file" "type." "" file(1)
.xx "" "stab: symbol table" "types." "" stab(5)
.xx "" "types: primitive system data" "types." "" types(5)
.xx "" "" "types: primitive system data types." "" types(5)
.xx "" "script: make" "typescript of terminal session." "" script(1)
.xx "" "man: macros to" "typeset manual." "" man(7)
.xx "" "eqn, neqn, checkeq:" "typeset mathematics." "" eqn(1)
.xx "" "troff, nroff: text formatting and" "typesetting." "" troff(1)
.xx "" "" "ualarm: schedule signal after specified time." "" ualarm(3)
.xx "" "" "uda: UDA-50 disk controller interface." "" uda(4)
.xx "" "uda:" "UDA-50 disk controller interface." "" uda(4)
.xx "" "" "udp: Internet User Datagram Protocol." "" udp(4P)
.xx "" "getpw: get name from" "uid." "" getpw(3C)
.xx "" "" "ul: do underlining." "" ul(1)
.xx "" "" "umask: change or display file creation mask." "" csh(1)
.xx "" "" "umask: set file creation mode mask." "" umask(2)
.xx "" "login, read, readonly, set, shift, times, trap," "umask, wait: command language." "/exec, exit, export," sh(1)
.xx "" "mount," "umount: mount and dismount file system." "" mount(8)
.xx "" "mount," "umount: mount or remove file system." "" mount(2)
.xx "" "" "unalias: remove aliases." "" csh(1)
.xx "" "compress," "uncompress, zcat: compress and expand data." "" compress(1)
.xx "" "ul: do" "underlining." "" ul(1)
.xx "" "expand," "unexpand: expand tabs to spaces, and vice versa." "" expand(1)
.xx "" "" "ungetc: push character back into input stream." "" ungetc(3S)
.xx "" "" "unhash: discard command hash table." "" csh(1)
.xx "" "uu: TU58/DECtape II" "UNIBUS cassette interface." "" uu(4)
.xx "" "up:" "unibus storage module controller/drives." "" up(4)
.xx "" "ut:" "UNIBUS TU45 tri-density tape drive interface." "" ut(4)
.xx "" "" "unifdef: remove ifdef'ed lines." "" unifdef(1)
.xx "" "" "uniq: report repeated lines in a file." "" uniq(1)
.xx "" "mktemp: make a" "unique file name." "" mktemp(3)
.xx "" "gethostid, sethostid: get/set" "unique identifier of current host." "" gethostid(2)
.xx "" "flush: flush output to a logical" "unit." "" flush(3F)
.xx "" "fseek, ftell: reposition a file on a logical" "unit." "" fseek(3F)
.xx "" "getc, fgetc: get a character from a logical" "unit." "" getc(3F)
.xx "" "putc, fputc: write a character to a fortran logical" "unit." "" putc(3F)
.xx "" "dn: DN-11 autocall" "unit interface." "" dn(4)
.xx "" "" "units: conversion program." "" units(1)
.xx "" "learn: computer aided instruction about" "UNIX." "" learn(1)
.xx "" "reboot:" "UNIX bootstrapping procedures." "" reboot(8)
.xx "" "system: execute a" "UNIX command." "" system(3F)
.xx "" "uux: unix to" "unix command execution." "" uux(1C)
.xx "" "uucp: unix to" "unix copy." "" uucp(1C)
.xx "" "mtio:" "UNIX magtape interface." "" mtio(4)
.xx "" "uux:" "unix to unix command execution." "" uux(1C)
.xx "" "uucp:" "unix to unix copy." "" uucp(1C)
.xx "" "" "unlimit: remove resource limitiations." "" csh(1)
.xx "" "rmdir, rm: remove" "(unlink) directories or files." "" rmdir(1)
.xx "" "rm, rmdir: remove" "(unlink) files or directories." "" rm(1)
.xx "" "" "unlink: remove a directory entry." "" unlink(3F)
.xx "" "" "unlink: remove directory entry." "" unlink(2)
.xx "" "" "unset: discard shell variables." "" csh(1)
.xx "" "" "unsetenv: remove environment variables." "" csh(1)
.xx "" "uptime: show how long system has been" "up." "" uptime(1)
.xx "" "tunefs: tune" "up an existing file system." "" tunefs(8)
.xx "" "" "up: unibus storage module controller/drives." "" up(4)
.xx "" "touch:" "update date last modified of a file." "" touch(1)
.xx "" "" "update: periodically update the super block." "" update(8)
.xx "" "sync:" "update super-block." "" sync(2)
.xx "" "sync:" "update the super block." "" sync(8)
.xx "" "update: periodically" "update the super block." "" update(8)
.xx "" "" "uptime: show how long system has been up." "" uptime(1)
.xx "" "du: summarize disk" "usage." "" du(1)
.xx "" "quota: display disc" "usage and limits." "" quota(1)
.xx "" "what: show what versions of object modules were" "used to construct a file." "" what(1)
.xx "" "miscellaneous: miscellaneous" "useful information pages." "" intro(7)
.xx "" "login: login new" "user." "" csh(1)
.xx "" "talk: talk to another" "user." "" talk(1)
.xx "" "write: write to another" "user." "" write(1)
.xx "" "seteuid, setruid, setgid, setegid, setrgid: set" "user and group ID." "setuid," setuid(3)
.xx "" "talkd: remote" "user communication server." "" talkd(8C)
.xx "" "udp: Internet" "User Datagram Protocol." "" udp(4P)
.xx "" "environ:" "user environment." "" environ(7)
.xx "" "whoami: print effective current" "user id." "" whoami(1)
.xx "" "su: substitute" "user id temporarily." "" su(1)
.xx "" "getuid, geteuid: get" "user identity." "" getuid(2)
.xx "" "setreuid: set real and effective" "user ID's." "" setreuid(2)
.xx "" "finger:" "user information lookup program." "" finger(1)
.xx "" "fingerd: remote" "user information server." "" fingerd(8C)
.xx "" "telnet:" "user interface to the TELNET protocol." "" telnet(1C)
.xx "" "whois: DARPA Internet" "user name directory service." "" whois(1)
.xx "" "getuid, getgid: get" "user or group ID of the caller." "" getuid(3F)
.xx "" "edquota: edit" "user quotas." "" edquota(8)
.xx "" "getusershell, setusershell, endusershell: get legal" "user shells." "" getusershell(3)
.xx "" "" "USERFILE: UUCP pathname permissions file." "" USERFILE(5)
.xx "" "adduser: procedure for adding new" "users." "" adduser(8)
.xx "" "binmail: send or receive mail among" "users." "" binmail(1)
.xx "" "wall: write to all" "users." "" wall(1)
.xx "" "last: indicate last logins of" "users and teletypes." "" last(1)
.xx "" "" "users: compact list of users who are on the system." "" users(1)
.xx "" "getlog: get" "user's login name." "" getlog(3F)
.xx "" "users: compact list of" "users who are on the system." "" users(1)
.xx "" "" "usleep: suspend execution for interval." "" usleep(3)
.xx "" "" "ut: UNIBUS TU45 tri-density tape drive interface." "" ut(4)
.xx "" "getrusage: get information about resource" "utilization." "" getrusage(2)
.xx "" "vtimes: get information about resource" "utilization." "" vtimes(3C)
.xx "" "" "utime: set file times." "" utime(3C)
.xx "" "" "utimes: set file times." "" utimes(2)
.xx "" "" "utmp, wtmp: login records." "" utmp(5)
.xx "" "" "uu: TU58/DECtape II UNIBUS cassette interface." "" uu(4)
.xx "uux." "" "uucico, uucpd: transfer files queued by uucp or" "" uucico(8C)
.xx "" "" "uuclean: uucp spool directory clean-up." "" uuclean(8C)
.xx "" "rmail: handle remote mail received via" "uucp." "" rmail(1)
.xx "" "L-devices:" "UUCP device description file." "" L-devices(5)
.xx "" "uuxqt:" "UUCP execution file interpreter." "" uuxqt(8C)
.xx "" "L.aliases:" "UUCP hostname alias file." "" L.aliases(5)
.xx "" "uuname: list names of" "UUCP hosts." "" uuname(1C)
.xx "" "uulog: display" "UUCP log files." "" uulog(1C)
.xx "" "uucico, uucpd: transfer files queued by" "uucp or uux." "" uucico(8C)
.xx "" "USERFILE:" "UUCP pathname permissions file." "" USERFILE(5)
.xx "" "L-dialcodes:" "UUCP phone number index file." "" L-dialcodes(5)
.xx "" "uuq: examine or manipulate the" "uucp queue." "" uuq(1C)
.xx "" "L.cmds:" "UUCP remote command permissions file." "" L.cmds(5)
.xx "" "L.sys:" "UUCP remote host description file." "" L.sys(5)
.xx "" "uupoll: poll a remote" "UUCP site." "" uupoll(8C)
.xx "" "uuclean:" "uucp spool directory clean-up." "" uuclean(8C)
.xx "" "uusnap: show snapshot of the" "UUCP system." "" uusnap(8C)
.xx "" "" "uucp: unix to unix copy." "" uucp(1C)
.xx "" "uucico," "uucpd: transfer files queued by uucp or uux." "" uucico(8C)
.xx "transmission via mail." "uuencode," "uudecode: encode/decode a binary file for" "" uuencode(1C)
.xx "" "uuencode: format of an encoded" "uuencode file." "" uuencode(5)
.xx "" "" "uuencode: format of an encoded uuencode file." "" uuencode(5)
.xx "transmission via mail." "" "uuencode, uudecode: encode/decode a binary file for" "" uuencode(1C)
.xx "" "" "uulog: display UUCP log files." "" uulog(1C)
.xx "" "" "uuname: list names of UUCP hosts." "" uuname(1C)
.xx "" "" "uupoll: poll a remote UUCP site." "" uupoll(8C)
.xx "" "" "uuq: examine or manipulate the uucp queue." "" uuq(1C)
.xx "" "" "uusend: send a file to a remote host." "" uusend(1C)
.xx "" "" "uusnap: show snapshot of the UUCP system." "" uusnap(8C)
.xx "" "uucico, uucpd: transfer files queued by uucp or" "uux." "" uucico(8C)
.xx "" "" "uux: unix to unix command execution." "" uux(1C)
.xx "" "" "uuxqt: UUCP execution file interpreter." "" uuxqt(8C)
.xx "" "" "va: Benson-Varian interface." "" va(4)
.xx "" "vacation: return ``I am on" "vacation'' indication." "" vacation(1)
.xx "" "" "vacation: return ``I am on vacation'' indication." "" vacation(1)
.xx "" "" "valloc: aligned memory allocator." "" valloc(3C)
.xx "" "abs: integer absolute" "value." "" abs(3)
.xx "" "hypot, cabs: Euclidean distance, complex absolute" "value." "" hypot(3M)
.xx "functions." "fabs, floor, ceil, rint: absolute" "value, floor, ceiling, and round-to-nearest" "" floor(3M)
.xx "" "getenv:" "value for environment name." "" getenv(3)
.xx "" "readlink: read" "value of a symbolic link." "" readlink(2)
.xx "" "getenv: get" "value of environment variables." "" getenv(3F)
.xx "" "getitimer, setitimer: get/set" "value of interval timer." "" getitimer(2)
.xx "" "set: change" "value of shell variable." "" csh(1)
.xx "" "false, true: provide truth" "values." "" false(1)
.xx "" "dflmin, dflmax, dffrac, inmax: return extreme" "values." "flmin, flmax, ffrac," flmin(3F)
.xx "" "rand, drand, irand: return random" "values." "" rand(3F)
.xx "" "true, false: provide truth" "values." "" true(1)
.xx "" "htonl, htons, ntohl, ntohs: convert" "values between host and network byte order." "" byteorder(3N)
.xx "" "" "varargs: variable argument list." "" varargs(3)
.xx "" "set: change value of shell" "variable." "" csh(1)
.xx "" "varargs:" "variable argument list." "" varargs(3)
.xx "" "setenv: set" "variable in environment." "" csh(1)
.xx "" "@: arithmetic on shell" "variables." "" csh(1)
.xx "" "unset: discard shell" "variables." "" csh(1)
.xx "" "unsetenv: remove environment" "variables." "" csh(1)
.xx "" "getenv: get value of environment" "variables." "" getenv(3F)
.xx "" "crl:" "VAX 8600 console RL02 interface." "" crl(4)
.xx "" "signals invalid floating-point operations on a" "VAX (temporary)." "infnan:" infnan(3M)
.xx "" "as:" "VAX-11 assembler." "" as(1)
.xx "" "cons:" "VAX-11 console interface." "" cons(4)
.xx "interface." "tu:" "VAX-11/730 and VAX-11/750 TU58 console cassette" "" tu(4)
.xx "" "tu: VAX-11/730 and" "VAX-11/750 TU58 console cassette interface." "" tu(4)
.xx "" "assert: program" "verification." "" assert(3)
.xx "" "lint: a C program" "verifier." "" lint(1)
.xx "" "expand, unexpand: expand tabs to spaces, and vice" "versa." "" expand(1)
.xx "" "vfont: font formats for the Benson-Varian or" "Versatec." "" vfont(5)
.xx "" "vp:" "Versatec interface." "" vp(4)
.xx "" "hangman: Computer" "version of the game hangman." "" hangman(6)
.xx "file." "what: show what" "versions of object modules were used to construct a" "" what(1)
.xx "Versatec." "" "vfont: font formats for the Benson-Varian or" "" vfont(5)
.xx "efficient way." "" "vfork: spawn new process in a virtual memory" "" vfork(2)
.xx "" "" "vgrind: grind nice listings of programs." "" vgrind(1)
.xx "" "" "vgrindefs: vgrind's language definition data base." "" vgrindefs(5)
.xx "" "vgrindefs:" "vgrind's language definition data base." "" vgrindefs(5)
.xx "terminal." "" "vhangup: virtually ``hangup'' the current control" "" vhangup(2)
.xx "on ex." "" "vi: screen oriented (visual) display editor based" "" vi(1)
.xx "" "encode/decode a binary file for transmission" "via mail." "uuencode, uudecode:" uuencode(1C)
.xx "" "rmail: handle remote mail received" "via uucp." "" rmail(1)
.xx "" "expand, unexpand: expand tabs to spaces, and" "vice versa." "" expand(1)
.xx "" "more, page: file perusal filter for crt" "viewing." "" more(1)
.xx "" "robots: fight off" "villainous robots." "" robots(6)
.xx "" "" "vipw: edit the password file." "" vipw(8)
.xx "" "vfork: spawn new process in a" "virtual memory efficient way." "" vfork(2)
.xx "" "vmstat: report" "virtual memory statistics." "" vmstat(1)
.xx "" "vhangup:" "virtually ``hangup'' the current control terminal." "" vhangup(2)
.xx "" "vi: screen oriented" "(visual) display editor based on ex." "" vi(1)
.xx "consumption." "" "vlimit: control maximum system resource" "" vlimit(3C)
.xx "vtroff, or troff." "" "vlp: Format Lisp programs to be printed with nroff," "" vlp(1)
.xx "" "tn3270: full-screen remote login to IBM" "VM/CMS." "" tn3270(1)
.xx "" "" "vmstat: report virtual memory statistics." "" vmstat(1)
.xx "" "" "vnews: read news articles." "" vnews(1)
.xx "" "fs, inode: format of file system" "volume." "" fs(5)
.xx "" "" "vp: Versatec interface." "" vp(4)
.xx "" "" "vtimes: get information about resource utilization." "" vtimes(3C)
.xx "" "vlp: Format Lisp programs to be printed with nroff," "vtroff, or troff." "" vlp(1)
.xx "" "" "vv: Proteon proNET 10 Megabit ring." "" vv(4)
.xx "" "" "vwidth: make troff width table for a font." "" vwidth(1)
.xx "" "" "w: who is on and what they are doing." "" w(1)
.xx "" "" "wait: await completion of process." "" wait(1)
.xx "" "read, readonly, set, shift, times, trap, umask," "wait: command language." "/exec, exit, export, login," sh(1)
.xx "" "wait:" "wait for a process to terminate." "" wait(3F)
.xx "" "wait:" "wait for background processes to complete." "" csh(1)
.xx "" "sigpause: atomically release blocked signals and" "wait for interrupt." "" sigpause(2)
.xx "" "wait, wait3:" "wait for process to terminate." "" wait(2)
.xx "" "" "wait: wait for a process to terminate." "" wait(3F)
.xx "" "" "wait: wait for background processes to complete." "" csh(1)
.xx "" "" "wait, wait3: wait for process to terminate." "" wait(2)
.xx "" "wait," "wait3: wait for process to terminate." "" wait(2)
.xx "" "atq: print the queue of jobs" "waiting to be run." "" atq(1)
.xx "" "" "wall: write to all users." "" wall(1)
.xx "" "" "wc: word count." "" wc(1)
.xx "" "what: show what versions of object modules" "were used to construct a file." "" what(1)
.xx "" "whatis: describe" "what a command is." "" whatis(1)
.xx "" "crash:" "what happens when the system crashes." "" crash(8V)
.xx "used to construct a file." "" "what: show what versions of object modules were" "" what(1)
.xx "" "w: who is on and" "what they are doing." "" w(1)
.xx "construct a file." "what: show" "what versions of object modules were used to" "" what(1)
.xx "" "" "whatis: describe what a command is." "" whatis(1)
.xx "" "crash: what happens" "when the system crashes." "" crash(8V)
.xx "" "leave: remind you" "when you have to leave." "" leave(1)
.xx "program." "" "whereis: locate source, binary, and or manual for" "" whereis(1)
.xx "paths (\fIcsh\fR only)." "" "which: locate a program file including aliases and" "" which(1)
.xx "exec, exit, export, login,/" "sh, for, case, if," "while, \fB:\fP, \fB.\fP, break, continue, cd, eval," "" sh(1)
.xx "" "" "while: repeat commands conditionally." "" csh(1)
.xx "" "break: exit" "while/foreach loop." "" csh(1)
.xx "" "users: compact list of users" "who are on the system." "" users(1)
.xx "" "from:" "who is my mail from?." "" from(1)
.xx "" "w:" "who is on and what they are doing." "" w(1)
.xx "" "who:" "who is on the system." "" who(1)
.xx "" "biff: be notified if mail arrives and" "who it is from." "" biff(1)
.xx "" "" "who: who is on the system." "" who(1)
.xx "" "" "whoami: print effective current user id." "" whoami(1)
.xx "" "" "whois: DARPA Internet user name directory service." "" whois(1)
.xx "" "rwho:" "who's logged in on local machines." "" rwho(1C)
.xx "" "fold: fold long lines for finite" "width output device." "" fold(1)
.xx "" "vwidth: make troff" "width table for a font." "" vwidth(1)
.xx "" "window:" "window environment." "" window(1)
.xx "" "" "window: window environment." "" window(1)
.xx "" "fastboot, fasthalt: reboot/halt the system" "without checking the disks." "" fastboot(8)
.xx "" "sail: multi-user" "wooden ships and iron men." "" sail(6)
.xx "" "wc:" "word count." "" wc(1)
.xx "" "getc, getchar, fgetc, getw: get character or" "word from stream." "" getc(3S)
.xx "" "putc, putchar, fputc, putw: put character or" "word on a stream." "" putc(3S)
.xx "" "diction, explain: print" "wordy sentences; thesaurus for diction." "" diction(1)
.xx "" "cd: change" "working directory." "" cd(1)
.xx "" "chdir: change current" "working directory." "" chdir(2)
.xx "" "getcwd: get pathname of current" "working directory." "" getcwd(3F)
.xx "" "pwd:" "working directory name." "" pwd(1)
.xx "" "getwd: get current" "working directory pathname." "" getwd(3)
.xx "" "worm: Play the growing" "worm game." "" worm(6)
.xx "" "" "worm: Play the growing worm game." "" worm(6)
.xx "" "" "worms: animate worms on a display terminal." "" worms(6)
.xx "" "worms: animate" "worms on a display terminal." "" worms(6)
.xx "" "putc, fputc:" "write a character to a fortran logical unit." "" putc(3F)
.xx "" "write, writev:" "write output." "" write(2)
.xx "" "wall:" "write to all users." "" wall(1)
.xx "" "write:" "write to another user." "" write(1)
.xx "" "" "write: write to another user." "" write(1)
.xx "" "" "write, writev: write output." "" write(2)
.xx "" "write," "writev: write output." "" write(2)
.xx "" "open: open a file for reading or" "writing, or create a new file." "" open(2)
.xx "" "utmp," "wtmp: login records." "" utmp(5)
.xx "" "" "wump: the game of hunt-the-wumpus." "" wump(6)
.xx "" "ddn: DDN Standard Mode" "X.25 IMP interface." "" ddn(4)
.xx "" "en:" "Xerox 3 Mb/s Ethernet interface." "" en(4)
.xx "" "idp:" "Xerox Internet Datagram Protocol." "" idp(4P)
.xx "" "ns:" "Xerox Network Systems(tm) protocol family." "" ns(4F)
.xx "" "ns_addr, ns_ntoa:" "Xerox NS(tm)  address conversion routines." "" ns(3N)
.xx "" "spp:" "Xerox Sequenced Packet Protocol." "" spp(4P)
.xx "" "xsend," "xget, enroll: secret mail." "" xsend(1)
.xx "" "" "XNSrouted: NS Routing Information Protocol daemon." "" XNSrouted(8C)
.xx "" "bit: and, or," "xor, not, rshift, lshift bitwise functions." "" bit(3F)
.xx "" "" "xsend, xget, enroll: secret mail." "" xsend(1)
.xx "shared strings." "" "xstr: extract strings from C programs to implement" "" xstr(1)
.xx "" "j0, j1, jn," "y0, y1, yn: bessel functions." "" j0(3M)
.xx "" "j0, j1, jn, y0," "y1, yn: bessel functions." "" j0(3M)
.xx "" "" "yacc: yet another compiler-compiler." "" yacc(1)
.xx "" "" "yes: be repetitively affirmative." "" yes(1)
.xx "" "j0, j1, jn, y0, y1," "yn: bessel functions." "" j0(3M)
.xx "" "compress, uncompress," "zcat: compress and expand data." "" compress(1)
.xx "" "" "zork: the game of dungeon." "" zork(6)
