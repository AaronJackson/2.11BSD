.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)getfsstat.2	8.1.1 (2.11BSD) 1995/12/24
.\"
.TH GETFSSTAT 2 "December 24, 1995"
.UC 7
.SH NAME
\fBgetfsstat\fP \- get list of all mounted filesystems
.SH SYNOPSIS
.B #include <sys/param.h>
.br
.B #include <sys/mount.h>
.sp
.I int
.br
\fBgetfsstat\fP(buf,bufsize,flags)
.br
.I struct statfs *buf;
.br
.I int bufsize;
.br
.I int flags;
.br
.SH DESCRIPTION
.BR Getfsstat ()
returns information about all mounted filesystems.
.I Buf
is a pointer to
.I statfs
structures defined as follows:
.sp
.nf
.cs R 20

#define MNAMELEN 90       /* length of buffer for returned name */

struct statfs {
short   f_type;           /* type of filesystem (see below) */
short   f_flags;          /* copy of mount flags */
short   f_bsize;          /* fundamental file system block size */
short   f_iosize;         /* optimal transfer block size */
long    f_blocks;         /* total data blocks in file system */
long    f_bfree;          /* free blocks in fs */
long    f_bavail;         /* free blocks avail to non-superuser */
ino_t   f_files;          /* total file nodes in file system */
ino_t   f_ffree;          /* free file nodes in fs */
u_long  f_fsid[2];        /* file system id */
long    f_spare[4];       /* spare for later */
char    f_mntonname[MNAMELEN];    /* mount point */
char    f_mntfromname[MNAMELEN];  /* mounted filesystem */
};
/*
* File system types. - Only UFS is supported so the other types are not
* given.
*/
#define	MOUNT_NONE	0
#define	MOUNT_UFS	1	/* Fast Filesystem */
.br
.fi
.cs R
.PP
Fields that are undefined for a particular filesystem are set to -1.
The buffer is filled with an array of
.I fsstat
structures, one for each mounted filesystem
up to the size specified by
.IR bufsize .
.PP
If
.I buf
is given as NULL,
.BR getfsstat ()
returns just the number of mounted filesystems.
.PP
Normally
.I flags
is currently unused.  In 4.4BSD systems the usage is
specified as
MNT_WAIT.
If
.I flags
is set to
MNT_NOWAIT,
.BR getfsstat ()
will return the information it has available without requesting
an update from each filesystem.
Thus, some of the information will be out of date, but
.BR getfsstat ()
will not block waiting for information from a filesystem that is
unable to respond.
.SH RETURN VALUES
Upon successful completion, the number of 
.I fsstat
structures is returned.
Otherwise, -1 is returned and the global variable
.I errno
is set to indicate the error.
.SH ERRORS
.BR Getfsstat ()
fails if one or more of the following are true:
.sp
.TP 20
[EFAULT]
.I Buf
points to an invalid address.
.TP 20
[EIO]
An I/O
error occurred while reading from or writing to the filesystem.
.SH SEE ALSO
statfs(2), fstab(5), mount(8)
.SH HISTORY
The
.B getfsstat
function first appeared in 4.4BSD.
