.\" Copyright (c) 1987 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)mkdep.1	1.3 (Berkeley) 6/4/87
.\"
.TH MKDEP 1 "June 4, 1987"
.UC 5
.SH NAME
mkdep \- construct Makefile dependency list
.SH SYNOPSIS
.B mkdep
[
.B \-f makefile
] [
.B \-p
]
flags file ...
.SH DESCRIPTION
\fIMkdep\fP takes a set of flags for the C compiler and a list of C
source files as arguments and constructs a set of include file dependencies.
It attaches this dependency list to the end of the file ``Makefile''.
An example of its use in a makefile might be:
.nf
.RS

CFLAGS= -O -I../include -I.
SRCS= file1.c file2.c

depend:
	mkdep ${CFLAGS} ${SRCS}
.RE
.PP
where the macro SRCS is the list of C source files and the macro
CFLAGS is the list of flags for the C compiler.  The \fB-f\fP option
provides \fImkdep\fP with a name other than ``Makefile'' to be edited.
If the \fB-p\fP option is provided, \fImkdep\fP produces dependencies
of the form ``program: program.c'' so that subsequent makes will
produce \fIprogram\fP directly from its C module rather than using an
intermediate \fI.o\fP module.  This is useful in directories that
contain many programs, each of whose source is contained in a single
C module.
.SH "SEE ALSO"
cc(1), make(1)
