.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)rk.4	6.2 (Berkeley) 8/20/87
.\"
.TH RK 4 "August 20, 1987"
.UC 2
.SH NAME
rk \- RK-11/RK05 disk
.SH SYNOPSIS
.ft B
.nf
/sys/conf/SYSTEM:
	NRK	\fIrk_drives\fP	# RK05

/etc/dtab:
.ta .5i +\w'#Name 'u +\w'Unit# 'u +\w'177777 'u +\w'Vector 'u +\w'Br 'u +\w'xxxxxxx 'u +\w'xxxxxxx 'u
	#Name	Unit#	Addr	Vector	Br	Handler(s)		# Comments
	rk	?	177400	220	5	rkintr		# rk05
.DT

major device number(s):
	raw: 15
	block: 6
minor device encoding:
	specifies drive: <rk_drive>
.fi
.ft R
.SH DESCRIPTION
Minor device numbers are drive numbers on one controller.
The standard device names begin with ``rk'' followed by
the drive number and then the letter "h".
The character ? stands here for a drive number in the range 0-7.
.PP
The block files access the disk via the system's normal
buffering mechanism and may be read and written without regard to
physical disk records.  There is also a `raw' interface
which provides for direct transmission between the disk
and the user's read or write buffer.
A single read or write call results in exactly one I/O operation
and therefore raw I/O is considerably more efficient when
many words are transmitted.  The names of the raw files
conventionally begin with an extra `r.'
.PP
In raw I/O the buffer must begin on a word (even) boundary,
and counts should be a multiple of 512 bytes (a disk sector).
Likewise
.I seek
calls should specify a multiple of 512 bytes.
.SH "DISK SUPPORT"
The
.I rk
driver does not support pseudo-disks (partitions).  Each file
.I rk?h
refers to the entire drive as a single sequentially addressed
file.  Each drive has 4872 512-byte blocks.
.PP
It's not clear what one would do with one of these drives if one had one ...
.SH FILES
.ta \w'/dev/MAKEDEV.local  'u
/dev/rk[0-7]h	block files
.br
/dev/rrk[0-7]h	raw files
.br
/dev/MAKEDEV	script to create special files
.br
/dev/MAKEDEV.local	script to localize special files
.DT
.SH "SEE ALSO"
hk(4),
ra(4),
ram(4),
rl(4),
rp(4),
rx(4),
si(4),
xp(4),
dtab(5),
autoconfig(8)
.SH DIAGNOSTICS
\fBrk%d: hard error sn%d er=%b ds=%b\fR.  An unrecoverable
error occurred during transfer of the specified sector of the specified
disk.  The contents of the two error registers are also printed
in octal and symbolically with bits decoded.
The error was either unrecoverable, or a large number of retry attempts
could not recover the error.
.PP
\fBrk%d: write locked\fR.  The write protect switch was set on the drive
when a write was attempted.  The write operation is not recoverable.
.SH BUGS
In raw I/O
.I read
and
.IR write (2)
truncate file offsets to 512-byte block boundaries,
and
.I write
scribbles on the tail of incomplete blocks.
Thus,
in programs that are likely to access raw devices,
.I read, write
and
.IR lseek (2)
should always deal in 512-byte multiples.
.PP
DEC-standard error logging should be supported.
.PP
A program to analyze the logged error information (even in its
present reduced form) is needed.
