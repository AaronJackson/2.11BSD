.\" Copyright (c) 1985, 1991, 1993, 1994
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)inetd.8	8.4.1 (2.11BSD) 1996/11/7
.\"
.TH INETD 8 "November 7, 1996"
.UC 7
.SH NAME
\fBinetd\fP \- internet ``super-server''
.SH SYNOPSIS
.B inetd
[\fB\-d\fP]
[\fB\-R\fP \fIrate\fP]
[\fIconfiguration file\fP]
.SH DESCRIPTION
The
.B inetd
program
should be run at boot time by
.I /etc/rc
(see rc(8)).
It then listens for connections on certain
internet sockets.  When a connection is found on one
of its sockets, it decides what service the socket
corresponds to, and invokes a program to service the request.
The server program is invoked with the service socket
as its standard input, output and error descriptors.
After the program is
finished,
.B inetd
continues to listen on the socket (except in some cases which
will be described below).  Essentially,
.B inetd
allows running one daemon to invoke several others,
reducing load on the system.
.PP
The options available for
.B inetd:
.TP 10
.B \-d
Turns on debugging.
.TP 10
\fB\-R\fP \fIrate\fP
Specifies the maximum number of times a service can be invoked
in one minute; the default is 1000.
.PP
Upon execution,
.B inetd
reads its configuration information from a configuration
file which, by default, is
\fI/etc/inetd.conf\fP.
There must be an entry for each field of the configuration
file, with entries for each field separated by a tab or
a space.  Comments are denoted by a ``#'' at the beginning
of a line.  There must be an entry for each field.  The
fields of the configuration file are as follows:
.PP
.in +0.5i
.nf
service name
socket type
protocol
wait/nowait
user
server program
server program arguments
.br
.fi
.in -0.5i
.PP
There are two types of services that 
.B inetd
can start: standard and TCPMUX.
A standard service has a well-known port assigned to it;
it may be a service that implements an official Internet standard or is a
BSD-specific service.
As described in 
RFC 1078,
TCPMUX services are nonstandard services that do not have a 
well-known port assigned to them.
They are invoked from
.B inetd 
when a program connects to the
``tcpmux''
well-known port and specifies
the service name.  
This feature is useful for adding locally-developed servers.
.PP
The
.I service-name
entry is the name of a valid service in
the file
.IR /etc/services .
For
``internal''
services (discussed below), the service
name
.B must
be the official name of the service (that is, the first entry in
.IR /etc/services ).
For TCPMUX services, the value of the
.I service-name
field consists of the string
``tcpmux''
followed by a slash and the
locally-chosen service name. 
The service names listed in 
.I /etc/services
and the name 
``help''
are reserved.
Try to choose unique names for your TCPMUX services by prefixing them with
your organization's name and suffixing them with a version number.
.PP
The
.I socket-type
should be one of
``stream'',
``dgram'',
``raw'',
``rdm'',
or
``seqpacket'',
depending on whether the socket is a stream, datagram, raw,
reliably delivered message, or sequenced packet socket.
TCPMUX services must use 
``stream''.
.sp
\fBNOTE:\fP
``rdm'' and ``seqpacket'' are not supported in 2.11BSD.
.br
.PP
The
.I protocol
must be a valid protocol as given in
.IR /etc/protocols .
Examples might be
``tcp''
or
``udp''.
TCPMUX services must use 
``tcp''.
.PP
The
.I wait/nowait
entry specifies whether the server that is invoked by inetd will take over
the socket associated with the service access point, and thus whether
.B inetd
should wait for the server to exit before listening for new service
requests.
Datagram servers must use
``wait'',
as they are always invoked with the original datagram socket bound
to the specified service address.
These servers must read at least one datagram from the socket
before exiting.
If a datagram server connects
to its peer, freeing the socket so
.B inetd
can received further messages on the socket, it is said to be
a
``multi-threaded''
server;
it should read one datagram from the socket and create a new socket
connected to the peer.
It should fork, and the parent should then exit
to allow
.B inetd
to check for new service requests to spawn new servers.
Datagram servers which process all incoming datagrams
on a socket and eventually time out are said to be
``single-threaded''.
Comsat(8), biff(1) and talkd(8)
are examples of the latter type of
datagram server.
Tftpd(8)
is an example of a multi-threaded datagram server.
.PP
Servers using stream sockets generally are multi-threaded and
use the
``nowait''
entry.
Connection requests for these services are accepted by
.B inetd ,
and the server is given only the newly-accepted socket connected
to a client of the service.
Most stream-based services operate in this manner.
Stream-based servers that use
``wait''
are started with the listening service socket, and must accept
at least one connection request before exiting.
Such a server would normally accept and process incoming connection
requests until a timeout.
TCPMUX services must use 
``nowait''.
.PP
The
.I user
entry should contain the user name of the user as whom the server
should run.  This allows for servers to be given less permission
than root.
.PP
The
.I server-program
entry should contain the pathname of the program which is to be
executed by
.B inetd
when a request is found on its socket.  If
.B inetd
provides this service internally, this entry should
be
``internal''.
.PP
The
.I server program arguments
should be just as arguments
normally are, starting with argv[0], which is the name of
the program.  If the service is provided internally, the
word
``internal''
should take the place of this entry.
.PP
The
.B inetd
program
provides several
``trivial''
services internally by use of
routines within itself.  These services are
``echo'',
``discard'',
``chargen''
(character generator),
``daytime''
(human readable time), and
``time''
(machine readable time,
in the form of the number of seconds since midnight, January
1, 1900).  All of these services are tcp based.  For
details of these services, consult the appropriate
RFC
from the Network Information Center.
.PP
The
.B inetd
program
rereads its configuration file when it receives a hangup signal,
SIGHUP.
Services may be added, deleted or modified when the configuration file
is reread.
.SH TCPMUX
.PP
RFC 1078 
describes the TCPMUX protocol:
``A TCP client connects to a foreign host on TCP port 1.  It sends the
service name followed by a carriage-return line-feed <CRLF>.  The
service name is never case sensitive.  The server replies with a
single character indicating positive (+) or negative (\-)
acknowledgment, immediately followed by an optional message of
explanation, terminated with a <CRLF>.  If the reply was positive,
the selected protocol begins; otherwise the connection is closed.''
The program is passed the TCP connection as file descriptors 0 and 1.
.PP
If the TCPMUX service name begins with a ``+'',
.B inetd
returns the positive reply for the program.
This allows you to invoke programs that use stdin/stdout
without putting any special server code in them.
.PP
The special service name
``help''
causes
.B inetd
to list TCPMUX services in
.IR inetd.conf .
.SH "EXAMPLES"
.PP
Here are several example service entries for the various types of services:
.sp
.nf
ftp           stream  tcp   nowait root  /usr/libexec/ftpd       ftpd -l
ntalk         dgram   udp   wait   root  /usr/libexec/ntalkd     ntalkd
tcpmux/+date  stream  tcp   nowait guest /bin/date               date
tcpmux/phonebook stream tcp nowait guest /usr/local/phonebook phonebook
.br
.fi
.SH "ERROR MESSAGES"
The
.B inetd
server
logs error messages using
syslog(3).
Important error messages and their explanations are:
.sp
\fIservice\fP/\fIprotocol\fP server failing (looping), service terminated.
.br
The number of requests for the specified service in the past minute
exceeded the limit. The limit exists to prevent a broken program
or a malicious user from swamping the system.
This message may occur for several reasons:
1) there are lots of hosts requesting the service within a short time period,
2) a 'broken' client program is requesting the service too frequently,
3) a malicious user is running a program to invoke the service in
a 'denial of service' attack, or
4) the invoked service program has an error that causes clients
to retry quickly.
Use the
\fB\-R\fP
option,
as described above, to change the rate limit.
Once the limit is reached, the service will be
reenabled automatically in 10 minutes.
.sp
\fIservice\fP/\fIprotocol\fP: No such user '\fIuser\fP', service ignored
.br
\fIservice\fP/\fIprotocol\fP: getpwnam: \fIuser\fP: No such user
.br
No entry for 
.I user
exists in the 
.I passwd
file. The first message
occurs when
.B inetd
(re)reads the configuration file. The second message occurs when the
service is invoked.
.sp
\fIservice\fP: can't set uid \fInumber\fP
.br
\fIservice\fP: can't set gid \fInumber\fP
.br
The user or group ID for the entry's 
.I user
is invalid.
.SH SEE ALSO
comsat(8),
fingerd(8),
ftpd(8),
rexecd(8),
rlogind(8),
rshd(8),
telnetd(8),
tftpd(8)
.SH HISTORY
The
.B inetd
command appeared in
4.3BSD.
TCPMUX is based on code and documentation by Mark Lottor.
