C	readmsg.c	/^#define	C(x)	((x)&0xff)$/
LOOKAT	readmsg.c	/^#define LOOKAT(msg, mtype, mfrom, netp, froms) \\$/
MORETIME	readmsg.c	/^#define MORETIME(rtime, rtout) \\$/
Mtimed	timed.c	/^main(argc, argv)$/
Mtimedc	timedc.c	/^main(argc, argv)$/
acksend	acksend.c	/^struct tsp *acksend(message, addr, name, ack, net)/
addmach	master.c	/^addmach(name, addr)$/
addnetname	timed.c	/^addnetname(name)$/
adjclock	correct.c	/^adjclock(corr)$/
answerdelay	slave.c	/^answerdelay()$/
bytehostorder	byteorder.c	/^bytehostorder(ptr)$/
bytenetorder	byteorder.c	/^bytenetorder(ptr)$/
casual	timed.c	/^casual(inf, sup)$/
checkignorednets	timed.c	/^checkignorednets()$/
clockdiff	cmds.c	/^clockdiff(argc, argv)$/
cmdscanner	timedc.c	/^cmdscanner(top)$/
correct	correct.c	/^correct(avdelta)$/
date	timed.c	/^date()$/
election	candidate.c	/^election(net)$/
findhost	master.c	/^findhost(name)$/
firstslavenet	timed.c	/^firstslavenet()$/
getcmd	timedc.c	/^getcmd(name)$/
help	timedc.c	/^help(argc, argv)$/
ignoreack	readmsg.c	/^ignoreack()$/
intr	timedc.c	/^intr()$/
logwtmp	master.c	/^logwtmp(otime, ntime)$/
lookformaster	timed.c	/^lookformaster(ntp)$/
makeargv	timedc.c	/^makeargv()$/
makeslave	timed.c	/^makeslave(net)$/
master	master.c	/^master()$/
masterack	readmsg.c	/^masterack()$/
masterup	master.c	/^masterup(net)$/
measure	measure.c	/^measure(wait, addr)$/
msite	cmds.c	/^msite(argc)$/
mstotvround	correct.c	/^struct timeval mstotvround(x)$/
networkdelta	networkdelta.c	/^long networkdelta()$/
newslave	master.c	/^newslave(ind, seq)$/
print	readmsg.c	/^print(msg, addr)$/
priv_resources	cmds.c	/^priv_resources()$/
prthp	master.c	/^prthp()$/
quit	cmds.c	/^quit()$/
readmsg	readmsg.c	/^readmsg(type, machfrom, intvl, netfrom)$/
rmmach	master.c	/^rmmach(ind)$/
rmnetmachs	master.c	/^rmnetmachs(ntp)$/
setstatus	timed.c	/^setstatus()$/
slave	slave.c	/^slave()$/
slaveack	readmsg.c	/^slaveack()$/
spreadtime	master.c	/^spreadtime()$/
synch	master.c	/^synch(mydelta)$/
testing	cmds.c	/^testing(argc, argv)$/
timevaladd	correct.c	/^timevaladd(tv1, tv2)$/
tracing	cmds.c	/^tracing(argc, argv)$/
